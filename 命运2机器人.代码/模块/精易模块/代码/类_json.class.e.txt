.版本 2

.程序集 类_json, , 公开
.子程序 解析, 逻辑型, 公开, 如果返回假，请检查Json文本是否为标准格式，如果确定，请检查 Windows 里 System 和 SysWOW64 是否需要权限
    .参数 JSON文本, 文本型, , 必须是标准的JSON格式
    .参数 为对象, 逻辑型, 可空
    .参数 错误原因, JsonError, 可空

    

.子程序 清除, 逻辑型, 公开
    

.子程序 取数据文本, 文本型, 公开
    

.子程序 置属性, 逻辑型, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 值, 文本型, 可空
    .参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组

    

.子程序 置属性对象, 逻辑型, 公开, 属性解析为json对象或数组
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 值, 文本型, 可空

    

.子程序 属性是否存在, 逻辑型, 公开
    .参数 属性名, 文本型, 可空

    

.子程序 取类型, 整数型, 公开, -1、未知；0、未定义；1、布尔值；2、数值；4、对象；5、数组；6、字符串
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 取通用属性, 文本型, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组

    

.子程序 取所有属性名, 整数型, 公开, 属性名指向JSON类型必须为对象
    .参数 属性名数组, 文本型, 参考 可空 数组
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 成员数, 整数型, 公开, 属性名指向JSON类型必须为数组
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 取属性, 类_json, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 加成员, 逻辑型, 公开
    .参数 值, 文本型, 可空
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组
    .参数 开头添加, 逻辑型, 可空, 留空默认为末尾添加

    

.子程序 取成员, 类_json, 公开
    .参数 成员索引, 整数型, 可空, 成员索引从0开始
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 取成员文本, 文本型, 公开
    .参数 成员索引, 整数型, 可空, 成员索引从0开始
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组

    

.子程序 置成员, 逻辑型, 公开
    .参数 成员索引, 整数型, 可空, 成员索引从0开始
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 值, 文本型, 可空
    .参数 为对象, 逻辑型, 可空, 属性解析为json对象或数组

    

.子程序 删成员, 逻辑型, 公开
    .参数 成员索引, 整数型, 可空, 成员索引从0开始
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 删属性, 逻辑型, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 置属性数值, 逻辑型, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']
    .参数 值, 双精度小数型, 可空

    

.子程序 取属性数值, 双精度小数型, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 取属性对象, 文本型, 公开
    .参数 属性名, 文本型, 可空, ['属性名是INT或运算符']

    

.子程序 取回对象, 对象, 公开
    

.子程序 取所有属性值, 整数型, 公开, 取指定路径下所有属性的值
    .参数 属性值数组, 文本型, 参考 可空 数组
    .参数 属性名, 文本型, 可空, 属性名指向JSON类型必须为对象
    .参数 向下递归, 逻辑型, 可空

    

