.版本 2

.程序集 类_RegExp, , 公开, 线程内请先调用 _COM初始化(0)
.子程序 继承, , 公开, 内部使用
    .参数 RegExpClass, 类_RegExp, 参考 可空
    .参数 RegExp, 变体型, 可空
    .参数 Matches, 变体型, 可空
    .参数 Match, 变体型, 可空
    .参数 SubMatches, 变体型, 可空
    .参数 Search, 变体型, 可空
    .参数 Null, 逻辑型, 可空

    

.子程序 创建, 逻辑型, 公开, 根据指定的正则表达式文本创建一个正则表达式对象。本对象中的原有内容将被释放
    .参数 正则表达式文本, 文本型
    .参数 被搜索的文本, 文本型
    .参数 是否区分大小写, 逻辑型, 可空
    .参数 是否匹配多行, 逻辑型, 可空
    .参数 是否全局匹配, 逻辑型, 可空

    

.子程序 创建类, 类_RegExp, 公开, 根据指定的正则表达式文本创建一个正则表达式对象。本对象中的原有内容将被释放
    .参数 正则表达式文本, 文本型
    .参数 被搜索的文本, 文本型
    .参数 是否区分大小写, 逻辑型, 可空
    .参数 是否匹配多行, 逻辑型, 可空
    .参数 是否全局匹配, 逻辑型, 可空

    

.子程序 是否空, 逻辑型, 公开
    

.子程序 取匹配, 文本型, 公开, 取出该正则匹配到的文本
    .参数 匹配索引, 整数型, 可空, 索引值从1开始,留空默认1

    

.子程序 创建自匹配, 类_RegExp, 公开, 根据指定匹配文本创建一个正则表达式对象。本对象中的原有内容将被释放
    .参数 正则表达式文本, 文本型
    .参数 匹配索引, 整数型, , 索引值从1开始,留空默认1
    .参数 是否区分大小写, 逻辑型, 可空
    .参数 是否匹配多行, 逻辑型, 可空
    .参数 是否全局匹配, 逻辑型, 可空

    

.子程序 替换, 文本型, 公开, 替换在正则表达式查找中找到的文本
    .参数 用作替换的文本, 文本型, 可空, 用作替换的文本

    

.子程序 创建自替换, 类_RegExp, 公开, 根据指定匹配文本创建一个正则表达式对象。本对象中的原有内容将被释放
    .参数 正则表达式文本, 文本型
    .参数 用作替换的文本, 文本型, , 索引值从1开始,留空默认1
    .参数 是否区分大小写, 逻辑型, 可空
    .参数 是否匹配多行, 逻辑型, 可空
    .参数 是否全局匹配, 逻辑型, 可空

    

.子程序 取子匹配, 文本型, 公开, 取出该正则的子表达式匹配到的文本
    .参数 匹配索引, 整数型, 可空, 索引值从1开始
    .参数 子表达式索引, 整数型, 可空, 欲取其值的子表达式,该参数对应与正则表达式中的一个子表达式以圆括号"( )"为标记,索引从1开始

    

.子程序 创建自子匹配, 类_RegExp, 公开, 根据指定匹配文本创建一个正则表达式对象。本对象中的原有内容将被释放
    .参数 正则表达式文本, 文本型
    .参数 匹配索引, 整数型, , 索引值从1开始
    .参数 子表达式索引, 整数型, , 欲取其值的子表达式,该参数对应与正则表达式中的一个子表达式以圆括号"( )"为标记,索引从1开始
    .参数 是否区分大小写, 逻辑型, 可空
    .参数 是否匹配多行, 逻辑型, 可空
    .参数 是否全局匹配, 逻辑型, 可空

    

.子程序 取匹配数, 整数型, 公开, 取出该正则匹配到的数量
    

.子程序 取子匹配数, 整数型, 公开, 取出该正则的子表达式匹配到的数量
    

.子程序 取位置, 整数型, 公开, 取匹配起始位置
    .参数 匹配索引, 整数型, 可空

    

