.版本 2

.DLL命令 HeapSize, 整数型, "kernel32.dll", "HeapSize", 公开, 返回堆对象的大小
    .参数 hHeap, 整数型
    .参数 dwFlags, 整数型
    .参数 lpMem, 整数型

.DLL命令 GetOEMCP, 整数型, "kernel32.dll", "GetOEMCP", 公开, 判断在OEM和ANSI字符集间转换的windows代码页

.DLL命令 GdipDeleteBrush, 整数型, "GdiPlus.dll", "GdipDeleteBrush", 公开
    .参数 brush, 整数型

.DLL命令 SetConsoleMode, 逻辑型, "kernel32.dll", "SetConsoleMode", 公开, 对输入句柄的工作模式进行设置
    .参数 hConsoleHandle, 整数型, , 控制台句柄
    .参数 dwMode, 整数型

.DLL命令 GetConsoleMode, 逻辑型, "kernel32.dll", "GetConsoleMode", 公开
    .参数 hConsoleHandle, 整数型, , 0
    .参数 lpMode, 整数型, , 0

.DLL命令 InvalidateRect, 整数型, "user32.dll", "InvalidateRect", 公开, 这个函数屏蔽一个窗口客户区的全部或部分区域。这会导致窗口在事件期间部分重画  非零表示成功，零表示失败
    .参数 hWnd, 整数型, , 待屏蔽窗口的句柄
    .参数 lpRect, 整数型, , RECT，用于描述待屏蔽矩形部分的一个矩形结构。可用InvalidateRectBynum函数，同时将lpRect设为零（Long数据类型），从而屏蔽（或禁用）整个窗口
    .参数 bErase, 整数型, , TRUE（非零）导致指定的区域在重画前先删除;

.DLL命令 CoInternetSetFeatureEnabled, , "urlmon.dll", "CoInternetSetFeatureEnabled", 公开, 初始化浏览器属性
    .参数 FeatureEntry, 整数型
    .参数 dwFlags, 整数型
    .参数 Enable, 逻辑型

.DLL命令 GetVolumeInformationA, 逻辑型, "kernel32.dll", "GetVolumeInformationA", 公开
    .参数 lpRootPathName, 文本型, , 0
    .参数 lpVolumeNameBuffer, 文本型, , 0
    .参数 nVolumeNameSize, 整数型, , 0
    .参数 lpVolumeSerialNumber, 整数型, 传址, 0
    .参数 lpMaximumComponentLength, 整数型, 传址, 0
    .参数 lpFileSystemFlags, 整数型, 传址, 0
    .参数 lpFileSystemNameBuffer, 文本型, 传址, 0
    .参数 nFileSystemNameSize, 整数型, , 0

.DLL命令 GetFileAttributesA, 整数型, "kernel32.dll", "GetFileAttributesA", 公开
    .参数 lpFileName, 文本型, , 0

.DLL命令 LocalSize_IP_ADDR_STRING, 整数型, "kernel32.dll", "LocalSize", 公开
    .参数 hMem, <?未知本地类型?>, 传址

.DLL命令 CopyMemory_IP_ADDR_STRING, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, <?未知本地类型?>, 传址
    .参数 Source, 整数型
    .参数 Length, 整数型

.DLL命令 LocalSize_IP_ADAPTER_INFO, 整数型, "kernel32.dll", "LocalSize", 公开, 返回本地内存块大小,类似sizeof
    .参数 hMem, <?未知本地类型?>, 传址

.DLL命令 GetPtr_IP_ADAPTER_INFO, 整数型, "kernel32.dll", "lstrcpynA", 公开, , 取指针
    .参数 lpString1, <?未知本地类型?>, 传址
    .参数 lpString2, <?未知本地类型?>, 传址
    .参数 iMaxLength, 整数型, , 传递0

.DLL命令 GetPtr_Bin, 整数型, "kernel32.dll", "lstrcpynA", 公开, 取指针
    .参数 lpString1, 字节集, 传址
    .参数 lpString2, 字节集, 传址
    .参数 iMaxLength, 整数型, , 传递0

.DLL命令 SetProcessDPIAware, 逻辑型, "user32.dll", "SetProcessDPIAware", 公开, user32.dll的一个API函数,可用于防止UI自动放大

.DLL命令 strrchr, 整数型, "ntdll.dll", "@strrchr", 公开
    .参数 s, 整数型
    .参数 c, 字节型

.DLL命令 strchr, 整数型, "ntdll.dll", "@strchr", 公开
    .参数 s, 整数型
    .参数 c, 字节型

.DLL命令 获取设备GammaRamp, 逻辑型, "gdi32.dll", "GetDeviceGammaRamp", 公开
    .参数 hdc, 整数型
    .参数 lpv, 短整数型, 数组

.DLL命令 设置设备GammaRamp, 逻辑型, "gdi32.dll", "SetDeviceGammaRamp", 公开
    .参数 hdc, 整数型
    .参数 lpv, 短整数型, 数组

.DLL命令 Beep, 逻辑型, "kernel32.dll", "Beep", 公开
    .参数 dwFreq, 整数型
    .参数 dwDuration, 整数型

.DLL命令 取指针_字节集, 整数型, "Kernel32.dll", "lstrcpyn", 公开, 常规API
    .参数 欲取其指针, 字节集, 传址
    .参数 欲取其指针, 字节集, 传址
    .参数 保留, 整数型, , 0

.DLL命令 RtlMoveMemory_整数传址1, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 常规API,从地址读一个整数
    .参数 dest, 整数型, 传址
    .参数 Source, 整数型
    .参数 len, 整数型, , 4

.DLL命令 ZwOpenProcess, 整数型, "ntdll.dll", "ZwOpenProcess", 公开
    .参数 hProcess, 整数型, 传址
    .参数 DesiredAccess, 整数型
    .参数 ObjectAttributes, <?未知本地类型?>
    .参数 ClientId, <?未知本地类型?>

.DLL命令 ZwDuplicateObject, 整数型, "ntdll.dll", "ZwDuplicateObject", 公开
    .参数 SourceProcessHandle, 整数型
    .参数 SourceHandle, 整数型
    .参数 TargetProcessHandle, 整数型
    .参数 TargetHandle, 整数型, 传址
    .参数 DesiredAccess, 整数型
    .参数 HandleAttributes, 整数型
    .参数 Options, 整数型

.DLL命令 ZwCreateJobObject, 整数型, "ntdll.dll", "ZwCreateJobObject", 公开
    .参数 JobHandle, 整数型, 传址
    .参数 DesiredAccess, 整数型
    .参数 ObjectAttributes, <?未知本地类型?>

.DLL命令 ZwAssignProcessToJobObject, 整数型, "ntdll.dll", "ZwAssignProcessToJobObject", 公开
    .参数 JobHandle, 整数型
    .参数 ProcessHandle, 整数型

.DLL命令 ZwTerminateJobObject, 整数型, "ntdll.dll", "ZwTerminateJobObject", 公开
    .参数 JobHandle, 整数型
    .参数 ExitStatus, 整数型

.DLL命令 ZwTerminateProcess, 整数型, "ntdll.dll", "ZwTerminateProcess", 公开
    .参数 ProcessHandle, 整数型
    .参数 ExitStatus, 整数型

.DLL命令 ZwClose, 整数型, "ntdll.dll", "ZwClose", 公开
    .参数 hnd, 整数型

.DLL命令 GetProcessImageFileNameA, 整数型, "psapi.dll", "GetProcessImageFileNameA", 公开
    .参数 hProcess, 整数型
    .参数 lpImageFileName, 文本型
    .参数 nSize, 整数型

.DLL命令 QueryDosDeviceA, 整数型, "kernel32.dll", "QueryDosDeviceA", 公开
    .参数 lpDeviceName, 文本型
    .参数 lpTargetPath, 文本型
    .参数 ucchMax, 整数型

.DLL命令 RtlMoveMemory_IMAGE_DOS_HEADER, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Dest, <?未知本地类型?>, 传址
    .参数 Src, 字节型, 传址
    .参数 L, 整数型

.DLL命令 CoCreateGuid, , "ole32.dll", "CoCreateGuid", 公开
    .参数 guid, 字节集

.DLL命令 RtlMoveMemory_字节集传址1, , "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 字节集, 传址
    .参数 字节集指针, 整数型
    .参数 数据长度, 整数型

.DLL命令 HeapDestroy, 逻辑型, "Kernel32.dll", "HeapDestroy", 公开, 释放堆
    .参数 hHeap, 整数型, , 堆句柄

.DLL命令 HeapCreate, 整数型, "kernel32.dll", "HeapCreate", 公开, 创建一个堆
    .参数 dwFlags, 整数型, , 创建方式 内存块标志。 为1 不检测独占
    .参数 len, 整数型, , 默认大小
    .参数 Exlen, 整数型, , 扩展大小 0为无限制

.DLL命令 InitializeCriticalSection_临界许可, , "kernel32.dll", "InitializeCriticalSection", 公开, 创建许可证
    .参数 lpCriticalSection, 临界许可, 传址

.DLL命令 DeleteCriticalSection_临界许可, 整数型, "kernel32.dll", "DeleteCriticalSection", 公开, 销毁许可证
    .参数 lpCriticalSection, 临界许可, 传址

.DLL命令 EnterCriticalSection_临界许可, , "kernel32.dll", "EnterCriticalSection", 公开, 进入许可区
    .参数 lpCriticalSection, 临界许可, 传址

.DLL命令 LeaveCriticalSection_临界许可, , "kernel32.dll", "LeaveCriticalSection", 公开, 退出许可区
    .参数 lpCriticalSection, 临界许可, 传址

.DLL命令 RtlMoveMemory_Eint_int, 逻辑型, "kernel32.dll", "RtlMoveMemory", 公开, 移动内存
    .参数 Dest, 整数型, , 目标地址
    .参数 Src, 整数型, 传址, 原地址
    .参数 length, 整数型, , 长度

.DLL命令 RtlMoveMemory_Ebin_int, 逻辑型, "kernel32.dll", "RtlMoveMemory", 公开, 移动内存
    .参数 Dest, 整数型, , 目标地址
    .参数 Src, 字节集, 传址, 原地址
    .参数 length, 整数型, , 长度

.DLL命令 RtlMoveMemory_Estr_int, 逻辑型, "kernel32.dll", "RtlMoveMemory", 公开, 移动内存
    .参数 Dest, 整数型, , 目标地址
    .参数 Src, 文本型, 传址, 原地址
    .参数 length, 整数型, , 长度

.DLL命令 AccessibleChildren, 整数型, "OLEACC.DLL", "AccessibleChildren", 公开
    .参数 paccContainer, 整数型
    .参数 iChildStart, 整数型
    .参数 cChildren, 整数型
    .参数 rgvarChildren, 变体型, 数组
    .参数 pcObtained, 整数型, 传址

.DLL命令 AccessibleObjectFromWindow, 整数型, "OLEACC.DLL", "AccessibleObjectFromWindow", 公开
    .参数 hwnd, 整数型
    .参数 dwId, 整数型
    .参数 riid, 字节集
    .参数 ppvObject, 整数型

.DLL命令 RtlMoveMemory_obj2pint, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, 整数型, 传址
    .参数 Source, 对象
    .参数 Length, 整数型

.DLL命令 GetStateText, 整数型, "OLEACC.DLL", "GetStateTextA", 公开
    .参数 lStateBit, 整数型
    .参数 lpszState, 文本型
    .参数 cchState, 整数型

.DLL命令 GetStateText_int, 整数型, "OLEACC.DLL", "GetStateTextA", 公开
    .参数 lStateBit, 整数型
    .参数 lpszState, 整数型
    .参数 cchState, 整数型

.DLL命令 GetRoleText, 整数型, "OLEACC.DLL", "GetRoleTextA", 公开
    .参数 lRole, 整数型
    .参数 lpszRole, 文本型
    .参数 cchRoleMax, 整数型

.DLL命令 GetRoleText_int, 整数型, "OLEACC.DLL", "GetRoleTextA", 公开
    .参数 lRole, 整数型
    .参数 lpszRole, 整数型
    .参数 cchRoleMax, 整数型

.DLL命令 WindowFromAccessibleObject, , "OLEACC.DLL", "WindowFromAccessibleObject", 公开
    .参数 TIAccessible, 整数型
    .参数 phwnd, 整数型, 传址

.DLL命令 AccessibleObjectFromPoint, 整数型, "OLEACC.DLL", "AccessibleObjectFromPoint", 公开
    .参数 ptScreenx, 整数型
    .参数 ptScreeny, 整数型
    .参数 ppacc, 整数型
    .参数 pvarChild, 变体型, 传址

.DLL命令 BlockInput, 整数型, "user32.dll", "BlockInput", 公开
    .参数 fBlock, 整数型, , 1.锁定，0.解除

.DLL命令 GetShortPathName, 整数型, "kernel32.dll", "GetShortPathNameA", 公开
    .参数 lpszLongPath, 文本型
    .参数 lpszShortPath, 文本型
    .参数 cchBuffer, 整数型

.DLL命令 CryptHashData_x, 逻辑型, "advapi32.dll", "CryptHashData", 公开
    .参数 hHash, 整数型
    .参数 pbData, 字节集, 传址
    .参数 dwDataLen, 整数型
    .参数 dwFlags, 整数型

.DLL命令 CryptReleaseContext_x, 逻辑型, "advapi32.dll", "CryptReleaseContext", 公开
    .参数 hProv, 整数型
    .参数 dwFlags, 整数型

.DLL命令 CryptCreateHash_x, 逻辑型, "advapi32.dll", "CryptCreateHash", 公开
    .参数 hProv, 整数型
    .参数 Algid, 整数型
    .参数 hKey, 整数型
    .参数 dwFlags, 整数型
    .参数 phHash, 整数型, 传址

.DLL命令 CryptAcquireContext_x, 逻辑型, "advapi32.dll", "CryptAcquireContextA", 公开
    .参数 phProv, 整数型, 传址
    .参数 pszContainer, 文本型
    .参数 pszProvider, 文本型
    .参数 dwProvType, 整数型
    .参数 dwFlags, 整数型

.DLL命令 NtReadVirtualMemory, 整数型, "ntdll.dll", "NtReadVirtualMemory", 公开
    .参数 句柄, 整数型
    .参数 地址, 整数型
    .参数 缓冲区, 字节集
    .参数 读取长度, 整数型
    .参数 实际读取长度, 整数型, 传址

.DLL命令 GetQueuedCompletionStatus, 整数型, "kernel32.dll", "GetQueuedCompletionStatus", 公开, 函数有个OVERLAPPED结构，很多资料上都采用不同的结构体来扩展该结构，比如有的资料定义：
    .参数 CompletionPort, 整数型
    .参数 lpNumberOfBytesTransferred, 整数型, 传址
    .参数 lpCompletionKey, 整数型, 传址
    .参数 lpOverlapped, 整数型, 传址
    .参数 dwMilliseconds, 整数型

.DLL命令 SHChangeNotify, , "shell32.dll", "SHChangeNotify", 公开, 刷新关联图标
    .参数 SHCNE_ASSOCCHANGED, 整数型, , 134217728
    .参数 SHCNF_IDLIST, 整数型, , 0
    .参数 nil, 整数型, , 0
    .参数 nil, 整数型, , 0

.DLL命令 GetFileTitleA, 整数型, "Comdlg32.dll", "GetFileTitleA", 公开
    .参数 lpszFile, 文本型
    .参数 lpszTitle, 文本型
    .参数 cbBuf, 整数型

.DLL命令 CreateIoCompletionPort, 整数型, "kernel32.dll", "CreateIoCompletionPort", 公开, 函数关联一个已打开的文件实例和新建的或已存在的I/0完成端口，或者创建一个未关联任何文件的I/O完成端口。
    .参数 Handle, 整数型
    .参数 ExistingCompletionPort, 整数型
    .参数 CompletionKey, 整数型
    .参数 NumberOfConcurrentThreads, 整数型

.DLL命令 PostQueuedCompletionStatus, 整数型, "kernel32.dll", "PostQueuedCompletionStatus", 公开, 在进行重叠I/O操作的同时，强行释放一个OVERLAPPED结构，最好的方法是针对每一个套接字句柄，调用CloseSocket函数。任何尚未进行的重叠I/O操作都会完成。一旦所有套接字关闭，便需在完成端口上，终止所有工作者线程。这时候需要使用PostQueuedCompletionStatus 。
    .参数 CompletionPort, 整数型
    .参数 dwNumberOfBytesTransferred, 整数型
    .参数 dwCompletionKey, 整数型
    .参数 lpOverlapped, 整数型

.DLL命令 RemovePropA, 整数型, "user32.dll", "RemovePropA", 公开, 该函数从指定的窗口的属性表中删除一项。指定的字符串标识了要删除的项。 
    .参数 hWnd, 整数型, , 指向要改变属性项的窗口的句柄。
    .参数 lpString, 文本型, , 指向以null结尾的字符串指针，或者包含一个标识字符串的原子。如果该参数是一个原子，那么它必须是使用AddAtom函数创建的。原子是16位的数据值，它必须是放置在lpString参数的低位字中， 

.DLL命令 SetPropA, 逻辑型, "user32.dll", "SetPropA", 公开, 该函数在指定窗口的属性表中增加一个新项，或者修改一个现有项。如果指定的字符串不在属性表中，那么就增加该新的项，新项中包含该字符串和句柄，否则就用指定的句柄替换该字符串的全前句柄。 
    .参数 hWnd, 整数型, , 指向窗口的句柄，该窗口的属性表要接收一个新项。 
    .参数 lpString, 文本型, , 指向以null结尾的字符串指针，或者包含一个标识字符串的原子。如果该参数是一个原子，么它必须是以前使用GlobalAddAtom函数创建的。原子是16位的数据值，它必须是放置在lpstring参数低位字中，而高位字必须为O。 
    .参数 hData, 整数型, , 指向要拷贝到属性表中的数据的句柄。该数据句柄可以标识任何对应用程序有用的值。 

.DLL命令 GetPropA, 整数型, "user32.dll", "GetPropA", 公开, 该函数从给定窗口的属性列表中检索数据句柄。给定的字符串标识了要检索的句柄。该字符串和句柄必须在前一次调用SetProp函数时已经加到属性表中。 
    .参数 hWnd, 整数型, , 指向要搜索属性表的窗口。 返回值：如果属性表中包含了给定的字符串，那么返回值为相关的数据句柄。否则，返回值为NULL。
    .参数 lpString, 文本型, , 指向以null结尾的字符串指针，或者包含一个标识字符串的原子。如果该参数是一个原子，那么它必须是使用GlobalAddAtom函数创建的。原子是16位的数据值，它必须是放置在lpstring参数的低位率中，而高位字必须为O。 

.DLL命令 WriteFile, 逻辑型, "kernel32.dll", "WriteFile", 公开
    .参数 hFile, 整数型, , 一个文件的句柄
    .参数 lpBuffer, 字节集, , 要写入的一个数据缓冲区
    .参数 nNumberOfBytesToWrite, 整数型, , 要写入数据的字节数量。如写入零字节，表示什么都不写入，但会更新文件的“上一次修改时间”。针对位于远程系统的命名管道，限制在65535个字节以内
    .参数 lpNumberOfBytesWritten, 整数型, 传址, 实际写入文件的字节数量
    .参数 lpOverlapped, 整数型

.DLL命令 GetScrollPos, 整数型, "user32.dll", "GetScrollPos", 公开
    .参数 hWnd, 整数型
    .参数 nBar, 整数型

.DLL命令 DeleteUrlCacheEntry, , "wininet.dll", "DeleteUrlCacheEntry", 公开, ,删除Url缓存入口_
    .参数 Url名称, 文本型, , lpszUrlName

.DLL命令 FindFirstUrlCacheEntryA, 整数型, "wininet.dll", "FindFirstUrlCacheEntryA", 公开, 寻找第一个Url缓存入口_
    .参数 寻找样式, 文本型, , lpszUrlSearchPattern
    .参数 第一个Url缓存入口信息, 字节集, , lpFirstCacheEntryInfo
    .参数 第一个Url缓存入口信息大小, 整数型, 传址, lpdwFirstCacheEntryInfoBufferSize

.DLL命令 FindNextUrlCacheEntryA, 整数型, "wininet.dll", "FindNextUrlCacheEntryA", 公开, 寻找下一个Url缓存入口_
    .参数 下一个Url缓存入口信息, 整数型, , lpNextCacheEntryInfo
    .参数 lpNextCacheEntryInfo, 字节集, , Any型,根据需要可以设置成不同的类型
    .参数 下一个Url缓存入口信息大小, 整数型, 传址, lpdwNextCacheEntryInfoBufferSize

.DLL命令 FindCloseUrlCache, 整数型, "wininet.dll", "FindCloseUrlCache", 公开, 关闭寻找缓存_
    .参数 枚举句柄, 整数型, , hEnumHandle

.DLL命令 SHFileOperationA, 整数型, "Shell32.dll", "SHFileOperationA", 公开
    .参数 文件参数, <?未知本地类型?>

.DLL命令 gethostbyname, 整数型, "ws2_32.dll", "gethostbyname", 公开, 成功返回内存指针
    .参数 name, 文本型, , 机器名称

.DLL命令 UpdateWindow, 整数型, "user32.dll", "UpdateWindow", 公开, 强制立即更新窗口，窗口中以前屏蔽的所有区域都会重画（在vb里使用：如vb窗体或控件的任何部分需要更新，可考虑直接使用refresh方法  非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 欲更新窗口的句柄;

.DLL命令 gethostname, 整数型, "ws2_32.dll", "gethostname", 公开, 取本机名，失败返回-1，成功返回0。
    .参数 name, 文本型, 传址, 给变量，用于存放名称
    .参数 namelen, 整数型, , 上一个参数的长度

.DLL命令 sendto, 整数型, "ws2_32.dll", "sendto", 公开, 发送数据(UDP)
    .参数 s, 整数型, , 套接字描述符
    .参数 buf, 字节集, 传址, 数据
    .参数 len, 整数型, , 数据长度
    .参数 flags, 整数型, , 0
    .参数 to, 套接字地址, 传址, 目标地址信息
    .参数 tolen, 整数型, , 地址信息长度

.DLL命令 connect, 整数型, "ws2_32.dll", "connect", 公开, 连接到服务器(TCP)
    .参数 网络通讯标识符, 整数型, , s
    .参数 名称结构, 套接字地址, , addr
    .参数 名称结构长度, 整数型, , namelen(16)

.DLL命令 select, 整数型, "ws2_32.dll", "select", 公开
    .参数 nfds, 整数型
    .参数 readfds, <?未知本地类型?>, 传址, 指向一组等待可读性检查的套接口
    .参数 writefds, <?未知本地类型?>, 传址, 指向一组等待可写性检查的套接口
    .参数 exceptfds, <?未知本地类型?>, 传址, 指向一组等待错误检查的套接口
    .参数 timeout, 整数型, 传址

.DLL命令 InternetOpenUrlA, 整数型, "wininet.dll", "InternetOpenUrlA", 公开
    .参数 Internet句柄, 整数型
    .参数 Url地址, 文本型
    .参数 头文本, 文本型
    .参数 头文本长度, 整数型
    .参数 标志, 整数型
    .参数 定义值, 整数型

.DLL命令 WSAAsyncSelect, 整数型, "ws2_32.dll", "WSAAsyncSelect", 公开, 异步选择_ 本函数自动将套接口设置为非阻塞模式  0  表明是成功的
    .参数 网络通讯标识符, 整数型, , s标识一个需要事件通知的套接口的描述符
    .参数 窗口句柄, 整数型, , hWnd标识一个在网络事件发生时需要接收消息的窗口句柄
    .参数 消息值, 整数型, , wMsg在网络事件发生时要接收的消息
    .参数 事件, 整数型, , lEvent位屏蔽码,用于指明应用程序感兴趣的网络事件集合.

.DLL命令 getpeername, 整数型, "ws2_32.dll", "getpeername", 公开, 获取远端信息（已连接对方IP和端口）。成功返回0
    .参数 句柄, 整数型
    .参数 name, 套接字地址, 传址, 地址信息
    .参数 namelen, 整数型, 传址, name长度,Sockaddr_in长度为16

.DLL命令 GetsockName, 整数型, "ws2_32.dll", "getsockname", 公开, 获取本地接口的地址信息（IP和端口）。成功返回0
    .参数 s, 整数型, , 句柄
    .参数 name, 套接字地址, 传址, 地址信息
    .参数 namelen, 整数型, 传址, name长度,Sockaddr_in长度为16

.DLL命令 recv_字节集, 整数型, "ws2_32.dll", "recv", 公开, 接收字节集数据(TCP，当数据这次未接收完时返回剩余字节数)
    .参数 网络通讯标识符, 整数型, , s
    .参数 缓冲区, 字节集, 传址, buf数据(提供变量)
    .参数 缓冲区长度, 整数型, , lLen
    .参数 标志, 整数型, , flags

.DLL命令 send, 整数型, "ws2_32.dll", "send", 公开, 已发送长度
    .参数 s, 整数型, , 套接字
    .参数 buf, 整数型, , 封包指针
    .参数 len, 整数型, , 封包长度
    .参数 flags, 整数型, , 标志0

.DLL命令 ntohs, 短整数型, "ws2_32.dll", "ntohs", 公开, 转换为端口号-网络转换到本机
    .参数 十六位网络端口, 短整数型, , netshort欲转换值

.DLL命令 inet_ntoa, 整数型, "ws2_32.dll", "inet_ntoa", 公开, 将整数格式IP地址转换为点数格式（返回值是内存地址指针）
    .参数 网络地址, 整数型, , lIn欲转换整数格式IP地址

.DLL命令 accept, 整数型, "ws2_32.dll", "accept", 公开, 等待用户进入并接受连接
    .参数 s, 整数型, , 套接字描述符
    .参数 addr, 套接字地址, 传址, 地址信息
    .参数 addrlen, 整数型, 传址, 地址信息长度（长度为16）

.DLL命令 listen, 整数型, "ws2_32.dll", "listen", 公开, 监听
    .参数 sockfd, 整数型, , 套接字描述符
    .参数 backlog, 整数型, , 最多容纳客户请求数

.DLL命令 bind, 整数型, "ws2_32.dll", "bind", 公开, 绑定一个地址和端口
    .参数 套接字描述符, 整数型
    .参数 地址结构, 套接字地址, 传址, 地址信息
    .参数 结构大小, 整数型, , 地址信息长度(长度16

.DLL命令 htons, 短整数型, "ws2_32.dll", "htons", 公开, 转换为network 排列方式的数目
    .参数 十六位主机命令, 短整数型, , hostshort端口号

.DLL命令 socket, 整数型, "ws2_32.dll", "socket", 公开, 创建套接字
    .参数 协议族, 整数型, , af使用的通信协议的协议族
    .参数 类型, 整数型, , lType流套接字类型
    .参数 协议, 整数型, , protocol使用的通信协议

.DLL命令 closesocket, 整数型, "ws2_32.dll", "closesocket", 公开, 销毁套接字
    .参数 套接字描述符, 整数型

.DLL命令 WSACleanup, 整数型, "ws2_32.dll", "WSACleanup", 公开, 卸载Winsocket服务

.DLL命令 WSAStartup, 整数型, "ws2_32.dll", "WSAStartup", 公开, 初始化WnSocket服务
    .参数 必需版本, 整数型, , wVersionRequired
    .参数 服务信息, 套接字信息, , lpWSAData

.DLL命令 SendARP, 整数型, "IPHLPAPI.DLL", "SendARP", 公开
    .参数 目标IP, 整数型
    .参数 本机IP, 整数型
    .参数 MAC缓冲, 字节型, 传址 数组
    .参数 长度, 整数型, 传址

.DLL命令 inet_addr, 整数型, "ws2_32.dll", "inet_addr", 公开
    .参数 IP, 文本型

.DLL命令 IsWow64Process, 逻辑型, "kernel32.dll", "IsWow64Process", 公开
    .参数 hProcess, 整数型
    .参数 Wow64Process, 逻辑型, 传址

.DLL命令 QueryPerformanceFrequency, 整数型, "kernel32.dll", "QueryPerformanceFrequency", 公开, 返回计数频率
    .参数 lpFrequency, 长整数型, 传址

.DLL命令 QueryPerformanceCounter, 整数型, "kernel32.dll", "QueryPerformanceCounter", 公开, 获取计数值
    .参数 lpPerformanceCount, 长整数型, 传址

.DLL命令 ActivateKeyboardLayout, 整数型, "user32.dll", "ActivateKeyboardLayout", 公开, 输入法激活
    .参数 hkl, 整数型
    .参数 flags, 整数型

.DLL命令 ImmInstallIMEA, 整数型, "imm32.dll", "ImmInstallIMEA", 公开, 安装输入法
    .参数 文件名, 文本型
    .参数 输入法名称, 文本型

.DLL命令 UnloadKeyboardLayout, 整数型, "user32.dll", "UnloadKeyboardLayout", 公开, 缷载已有的键盘布局，成功则返回键盘布局句柄，失败返回0。
    .参数 HKL, 整数型, , 键盘布局句柄

.DLL命令 GetKeyboardLayoutList, 整数型, "user32.dll", "GetKeyboardLayoutList", 公开, 获得系统适用的所有键盘布局的一个列表，成功则返回键盘布局数量，失败返回0。
    .参数 nBuff, 整数型, , 如设为0，表示获取可用键盘布局的最大数量
    .参数 lpList, 整数型, 数组, 缓存数组指针，这个数组会随同句柄载入可用的键盘布局。

.DLL命令 LoadKeyboardLayoutA, 整数型, "user32.dll", "LoadKeyboardLayoutA", 公开, 载入一个键盘布局，并返回键盘布局句柄。0表示出错。
    .参数 pwszKLID, 文本型, , 一个8字符字串，用于描述键盘布局的名称。
    .参数 flags, 整数型, , 参考“KLF”常量。

.DLL命令 IMESetPubString, , "imedllhost09.ime", "IMESetPubString", 公开, 输入法注入
    .参数 dll文件名, 文本型, , 要注入的dll
    .参数 是否退出时卸载, 整数型, , 输入法退出时是否同时卸载注入的DLL（0-是，1-否）
    .参数 是否自动切换, 整数型, , 当切换到目标输入法时自动切换到下一个输入法（0-否，1-是）
    .参数 参数一, 整数型, , 0
    .参数 参数二, 整数型, , 0
    .参数 参数三, 整数型, , 0

.DLL命令 IMEClearPubString, 逻辑型, "imedllhost09.ime", "IMEClearPubString", 公开, 输入法停止注入

.DLL命令 GetGUIThreadInfo, 整数型, "user32.dll", "GetGUIThreadInfo", 公开, 　
    .参数 idThread, 整数型
    .参数 pgui, <?未知本地类型?>, 传址

.DLL命令 GetAsyncKeyState, 整数型, "user32.dll", "GetAsyncKeyState", 公开, 取键状态
    .参数 键代码, 整数型, , vKey Long，欲测试的虚拟键的键码

.DLL命令 StretchBlt, , "gdi32.dll", "StretchBlt", 公开, 伸缩复制图象
    .参数 目标设备场景, 整数型
    .参数 目标位置横坐标, 整数型
    .参数 目标位置纵坐标, 整数型
    .参数 目标图像宽, 整数型
    .参数 目标图像高, 整数型
    .参数 源设备场景, 整数型
    .参数 源位置横坐标, 整数型
    .参数 源位置纵坐标, 整数型
    .参数 源图像宽, 整数型
    .参数 源图像高, 整数型
    .参数 光栅运算, 整数型

.DLL命令 FindWindowA, 整数型, "user32.dll", "FindWindowA", 公开, 寻找窗口列表中第一个符合指定条件的顶级窗口
    .参数 窗口类名, 文本型
    .参数 窗口标题, 文本型

.DLL命令 GetAncestor, 整数型, "user32.dll", "GetAncestor", 公开, 取出指定窗口的最顶级父窗口
    .参数 hwnd, 整数型, , 子窗口句柄
    .参数 gaFlags, 整数型

.DLL命令 GetParent, 整数型, "user32.dll", "GetParent", 公开, 取父句柄
    .参数 hwnd, 整数型

.DLL命令 CallWindowProcA, 整数型, "user32.dll", "CallWindowProcA", 公开
    .参数 窗口程序指针, 整数型
    .参数 hwnd, 整数型
    .参数 消息值, 整数型
    .参数 参数1, 整数型
    .参数 参数2, 整数型

.DLL命令 GetWindow, 整数型, "user32.dll", "GetWindow", 公开, 获得一个窗口的句柄，该窗口与某源窗口有特定的关系
    .参数 源窗口, 整数型
    .参数 关系, 整数型, , 0：为一个源子窗口寻找第一个兄弟（同级）窗口，或寻找第一个顶级窗口  1：为一个源子窗口寻找最后一个兄弟（同级）窗口，或寻找最后一个顶级窗口  2：为源窗口寻找下一个兄弟窗口  3：为源窗口寻找前一个兄弟窗口  4：寻找窗口的所有者  5：寻找源窗口的第一个子窗口

.DLL命令 MessageBoxA, 整数型, "user32.dll", "MessageBoxA", 公开, 显示和操作一个消息框。该消息框包含一个应用程序定义的消息和标题，加上预定义的图标和按钮的任意组合。 wLanguageId参数指定为预定义的按钮使用的语言资源集。
    .参数 hwnd, 整数型, , 要创建的消息框的所有者窗口的句柄。如果这个参数为NULL，则消息框没有所有者窗口
    .参数 neirong, 文本型
    .参数 title, 文本型
    .参数 nom, 整数型

.DLL命令 LoadLibraryA, 整数型, "kernel32.dll", "LoadLibraryA", 公开, 载入指定的动态链接库，并将它映射到当前进程使用的地址空间。成功则返回库模块的句柄，零表示失败。
    .参数 动态链接库路径, 文本型, , 指定要载入的动态链接库的名称(全路径)

.DLL命令 FreeLibrary, 逻辑型, "kernel32.dll", "FreeLibrary", 公开, 释放动态链接库
    .参数 动态链接库句柄, 整数型, , 使用LoadLibraryA命令返回的

.DLL命令 GetProcAddress, 整数型, "kernel32.dll", "GetProcAddress", 公开, 取动态链接库函数入口地址
    .参数 模块句柄, 整数型, , 通过LoadLibraryA命令取得
    .参数 接口名称, 文本型

.DLL命令 DoOrganizeFavDlg, 整数型, "shdocvw.dll", "DoOrganizeFavDlg", 公开, 整理收藏夹
    .参数 hwnd, 整数型
    .参数 root, 文本型

.DLL命令 DoAddToFavDlg, 逻辑型, "shdocvw.dll", "DoAddToFavDlg", 公开, 添加到收藏夹
    .参数 hwnd, 整数型
    .参数 网址, 文本型
    .参数 缓存大小, 整数型
    .参数 标题, 文本型
    .参数 缓存, 整数型
    .参数 pid, 整数型

.DLL命令 SHGetSpecialFolderLocation, 整数型, "shell32.dll", "SHGetSpecialFolderLocation", 公开, 取收藏夹PID
    .参数 hwnd, 整数型
    .参数 type, 整数型
    .参数 pid, 整数型, 传址

.DLL命令 CreateWaitableTimerA, 整数型, "kernel32.dll", "CreateWaitableTimerA", 公开, 程序延时
    .参数 lpTimerAttributes, 整数型
    .参数 bManualReset, 逻辑型
    .参数 lpTimerName, 整数型

.DLL命令 SetWaitableTimer, 整数型, "kernel32.dll", "SetWaitableTimer", 公开
    .参数 hTimer, 整数型
    .参数 pDueTime, <?未知本地类型?>
    .参数 lPeriod, 整数型
    .参数 pfnCompletionRoutine, 整数型
    .参数 lpArgToCompletionRoutine, 整数型
    .参数 fResume, 逻辑型

.DLL命令 MsgWaitForMultipleObjects, 整数型, "User32.dll", "MsgWaitForMultipleObjects", 公开
    .参数 nCount, 整数型
    .参数 pHandles, 整数型, 传址
    .参数 fWaitAll, 逻辑型
    .参数 dwMilliseconds, 整数型
    .参数 dwWakeMask, 整数型

.DLL命令 CryptAcquireContextA, 整数型, "advapi32.dll", "CryptAcquireContextA", 公开
    .参数 phProv, 整数型, 传址
    .参数 pszContainer, 文本型
    .参数 pszProvider, 文本型
    .参数 dwProvType, 整数型
    .参数 dwFlags, 整数型

.DLL命令 CryptCreateHash, 整数型, "advapi32.dll", "CryptCreateHash", 公开
    .参数 hProv, 整数型
    .参数 Algid, 整数型
    .参数 hKey, 整数型
    .参数 dwFlags, 整数型
    .参数 phHash, 整数型, 传址

.DLL命令 CryptReleaseContext, 整数型, "advapi32.dll", "CryptReleaseContext", 公开
    .参数 hProv, 整数型
    .参数 dwFlags, 整数型

.DLL命令 CryptDestroyHash, 整数型, "advapi32.dll", "CryptDestroyHash", 公开
    .参数 hHash, 整数型

.DLL命令 CryptHashData, 整数型, "advapi32.dll", "CryptHashData", 公开
    .参数 hHash, 整数型
    .参数 pbData, 字节集, 传址
    .参数 dwDataLen, 整数型
    .参数 dwFlags, 整数型

.DLL命令 CryptGetHashParam, 整数型, "advapi32.dll", "CryptGetHashParam", 公开
    .参数 hHash, 整数型
    .参数 dwParam, 整数型
    .参数 pByte, 字节集
    .参数 pdwDataLen, 整数型, 传址
    .参数 dwFlags, 整数型

.DLL命令 GetSystemMetrics, 整数型, "User32.dll", "GetSystemMetrics", 公开, 获取windows环境信息
    .参数 nIndex, 整数型

.DLL命令 ExtractAssociatedIconA, 整数型, "shell32.dll", "ExtractAssociatedIconA", 公开, 如果找到任何图标，就返回图标的句柄；否则返回零,这个函数可判断一个可执行程序或DLL中是否存在图标，或是否有图标与系统注册表中指定的文件存在关联。随后，它允许我们提取出那些图标
    .参数 程序句柄, 整数型
    .参数 文件名, 文本型
    .参数 图标类型, 整数型, 传址

.DLL命令 DrawIcon, , "user32.dll", "DrawIcon", 公开, 在指定的位置画一个图标
    .参数 设备句柄, 整数型
    .参数 横向位置, 整数型
    .参数 纵向位置, 整数型
    .参数 图标句柄, 整数型

.DLL命令 LoadImage, 整数型, "user32.dll", "LoadImageA", 公开, 载入一个位图、图标或指针  执行成功则返回对象的一个句柄；零表示失败
    .参数 实例句柄, 整数型, , 要从其中载入图象的DLL或应用程序模块或实例句柄。零表示装载一幅固有图象
    .参数 图象标志符, 文本型, , 欲载入图象的名字。如指定了hInst，就用这个参数指定资源或资源的标志符（标志符是一个长整数）。如hInst为空，而且已指定了LR_LOADFROMFILE，那么这个参数代表文件名（位图、图标或指针文件）。如果是个Long型值，这个参数就代表固有位图、图标或指针的编号
    .参数 图象类型, 整数型, , 下述常数之一，指定了欲载入的图象类型：IMAGE_BITMAP， IMAGE_CURSOR， IMAGE_ICON
    .参数 图象宽度, 整数型, , 要求的图象宽度和高度。图象会根据情况自动伸缩。如设为零，表示用图象的默认大小
    .参数 图象高度, 整数型, , 同上
    .参数 常数组合, 整数型, , 下述常数的任意组合，它们都在api32.txt文件中得到了定义：;LR_DEFAULTCOLOR：以常规方式载入图象;LR_LOADREALSIZE：不对图象进行缩放处理。忽略n1和n2的设置;LR_CREATEDIBSECTION：如果指定了IMAGE_BITMAP，就返回DIBSection的句柄，而不是位图的句柄;LR_DEFAULTSIZE：如果n1和n2为零，就使用由系统定义的图象默认大小，而不是图象本身定义的大小;LR_LOADFROMFILE：如hInst为零，lpsz就代表要载入适当类型的一个文件的名字，仅适用于Win95;LR_LOADMAP3DCOLORS：将图象中的深灰、灰、以及浅灰像素都替换成COLOR_3DSHADOW，COLOR_3DFACE以及COLOR_3DLIGHT的当前设置;LR_LOADTRANSPARENT：与图象中第一个像素相符的所有像素都由系统替换;LR_MONOCHROME：将图象转换成单色;LR_SHARED：将图象作为一个共享资源载入。在NT 4.0中装载固有资源时要用到这个设置;

.DLL命令 HeapAlloc, 整数型, "kernel32.dll", "HeapAlloc", 公开, 从堆栈分配内存
    .参数 堆栈句柄, 整数型, , hHeap
    .参数 标志, 整数型, , dwFlags
    .参数 分配大小, 整数型, , dwBytes

.DLL命令 GetProcessHeap, 整数型, "kernel32.dll", "GetProcessHeap", 公开, _取进程堆栈句柄, 获取调用过程堆句柄

.DLL命令 SetMenuItemBitmaps, 逻辑型, "user32.dll", "SetMenuItemBitmaps", 公开, 设置菜单图标
    .参数 菜单句柄, 整数型
    .参数 位置, 整数型
    .参数 标志, 整数型
    .参数 未选图标句柄, 整数型
    .参数 已选图标句柄, 整数型

.DLL命令 InsertMenuA, 逻辑型, "user32.dll", "InsertMenuA", 公开
    .参数 菜单句柄, 整数型
    .参数 位置, 整数型
    .参数 标志, 整数型
    .参数 ID, 整数型
    .参数 标题, 文本型

.DLL命令 CreatePopupMenu, 整数型, "user32.dll", "CreatePopupMenu", 公开, 创建空白弹出式菜单

.DLL命令 ModifyMenuA, 逻辑型, "user32.dll", "ModifyMenuA", 公开, 修改菜单标题
    .参数 菜单句柄, 整数型
    .参数 标识符, 整数型, , nPosition，欲改变的菜单条目的标识符
    .参数 常数标志, 整数型, , wFlags，一系列常数标志的组合
    .参数 新命令ID, 整数型, , wIDNewItem，指定菜单条目的新命令ID
    .参数 标志, 文本型, , any，位图句柄或菜单文本

.DLL命令 DrawMenuBar, 逻辑型, "user32.dll", "DrawMenuBar", 公开, 为指定的窗口重画菜单
    .参数 hwnd, 整数型, , hwnd,要重画菜单栏的窗口的句柄

.DLL命令 GetMenuItemCount, 整数型, "user32.dll", "GetMenuItemCount", 公开, 菜单取数量
    .参数 hMenu, 整数型

.DLL命令 RemoveMenu, 逻辑型, "user32.dll", "RemoveMenu", 公开, 删除菜单，非零表示成功，零表示失败。会设置GetLastError
    .参数 菜单句柄, 整数型, , hmenu，菜单的句柄
    .参数 标识符, 整数型, , nPosition，欲改变的菜单条目的标识符。如在wFlags参数中指定了MF_BYCOMMAND，这个参数就代表欲改变的菜单条目的命令ID。如设置的是MF_BYPOSITION，这个参数就代表菜单条目在菜单中的位置（第一个条目的位置为零）
    .参数 标识符类型, 整数型, , wflags，常数MF_BYCOMMAND或MF_BYPOSITION，取决于nPosition参数

.DLL命令 AppendMenuA, 逻辑型, "user32.dll", "AppendMenuA", 公开, 添加菜单
    .参数 菜单句柄, 整数型, , hMenu,菜单句柄
    .参数 菜单常数标志, 整数型, , wFlags,参见相关帮助
    .参数 新菜单条目ID, 整数型, , wIDNewItem,指定菜单条目的新命令ID
    .参数 标志值, 文本型, , lpNewItem,参见相关帮助

.DLL命令 GetMenu, 整数型, "user32.dll", "GetMenu", 公开, 取指定窗口的菜单条句柄
    .参数 hwnd, 整数型

.DLL命令 GetSubMenu, 整数型, "user32.dll", "GetSubMenu", 公开, 取子菜单句柄
    .参数 菜单句柄, 整数型
    .参数 位置, 整数型

.DLL命令 InsertMenu, 逻辑型, "user32.dll", "InsertMenu", 公开
    .参数 hMenu, 整数型, , 手柄以被改变的菜单
    .参数 uPosition, 整数型, , 之前要插入新的菜单项所确定的uFlags参数指定的菜单项
    .参数 uFlags, 整数型
    .参数 uIDNewItem, 整数型, , 指定的标识符的新的菜单项，或如果uFlags参数的MF_POPUP的标志位，下拉菜单或子菜单的句柄
    .参数 lpNewItem, 整数型

.DLL命令 IsMenu, 逻辑型, "user32.dll", "IsMenu", 公开, 是否为菜单句柄
    .参数 hMenu, 整数型, , 手柄以被改变的菜单

.DLL命令 GetMenuStringA, 整数型, "user32.dll", "GetMenuStringA", 公开, 菜单取标题
    .参数 菜单句柄, 整数型
    .参数 项目索引, 整数型
    .参数 菜单标题, 文本型
    .参数 标题长度, 整数型
    .参数 操作标志, 整数型

.DLL命令 DestroyMenu, 逻辑型, "user32.dll", "DestroyMenu", 公开, 清除菜单
    .参数 hMenu, 整数型

.DLL命令 GetMenuItemID, 整数型, "user32.dll", "GetMenuItemID", 公开, 取菜单ID
    .参数 菜单句柄, 整数型
    .参数 位置, 整数型

.DLL命令 GdiplusStartup, 整数型, "gdiplus.dll", "GdiplusStartup", 公开, GDI启动 图像转换类
    .参数 token, 整数型, 传址
    .参数 inputbuf, <?未知本地类型?>
    .参数 outputbuf, 整数型

.DLL命令 GdiplusShutdown, , "gdiplus.dll", "GdiplusShutdown", 公开, _GDI关闭
    .参数 token, 整数型

.DLL命令 InternetFindNextFileA, 整数型, "WinInet.dll", "InternetFindNextFileA", 公开
    .参数 hFind, 整数型
    .参数 lpvFindData, <?未知本地类型?>, 传址

.DLL命令 FtpFindFirstFileA, 整数型, "WinInet.dll", "FtpFindFirstFileA", 公开, _FTP查找文件
    .参数 hFtp, 整数型
    .参数 lpszSearchFile, 文本型
    .参数 lpFindFileData, <?未知本地类型?>
    .参数 dwFlags, 整数型
    .参数 dwContext, 整数型

.DLL命令 FtpGetFileA, 逻辑型, "WinInet.dll", "FtpGetFileA", 公开, _FTP文件下载
    .参数 hFtp, 整数型
    .参数 lpszRemoteFile, 文本型
    .参数 lpszNewFile, 文本型
    .参数 fFailIfExists, 整数型
    .参数 dwFlagsAndAttributes, 整数型
    .参数 dwFlags, 整数型
    .参数 dwContext, 整数型

.DLL命令 FtpPutFileA, 逻辑型, "WinInet.dll", "FtpPutFileA", 公开, _FTP文件上传
    .参数 连接句柄, 整数型
    .参数 本地文件名, 文本型
    .参数 FTP文件路径, 文本型
    .参数 文件传输方式, 整数型
    .参数 dwContext, 整数型

.DLL命令 FtpDeleteFileA, 逻辑型, "WinInet.dll", "FtpDeleteFileA", 公开
    .参数 hFtp, 整数型
    .参数 lpszKillFile, 文本型

.DLL命令 FtpSetCurrentDirectoryA, 逻辑型, "WinInet.dll", "FtpSetCurrentDirectoryA", 公开, _FTP置现行目录
    .参数 hFtp, 整数型
    .参数 lpszDirectory, 文本型

.DLL命令 FtpGetCurrentDirectoryA, 整数型, "WinInet.dll", "FtpGetCurrentDirectoryA", 公开, _FTP取现行目录
    .参数 hFtp, 整数型
    .参数 lpszDirectory, 文本型, 传址
    .参数 BuffLength, 整数型, 传址

.DLL命令 FtpRenameFileA, 逻辑型, "WinInet.dll", "FtpRenameFileA", 公开, _FTP文件改名
    .参数 hFtp, 整数型
    .参数 lpszCurFile, 文本型
    .参数 lpszNewFile, 文本型

.DLL命令 PathIsDirectoryA, 整数型, "shlwapi.dll", "PathIsDirectoryA", 公开, 目录是否存在
    .参数 lpszPath, 文本型

.DLL命令 FtpCreateDirectoryA, 逻辑型, "WinInet.dll", "FtpCreateDirectoryA", 公开, _FTP创建目录
    .参数 hFtp, 整数型
    .参数 lpszNewDir, 文本型

.DLL命令 FtpGetFileSize, 整数型, "wininet.dll", "FtpGetFileSize", 公开, _FTP取文件大小
    .参数 hFile, 整数型
    .参数 lpdwFileSizeHigh, 整数型, 传址

.DLL命令 FtpOpenFileA, 整数型, "wininet.dll", "FtpOpenFileA", 公开, _FTP打开文件
    .参数 hConnect, 整数型
    .参数 lpszFileName, 文本型
    .参数 dwAccess, 整数型
    .参数 dwFlags, 整数型
    .参数 dwContext, 整数型

.DLL命令 RemoveDirectoryA, 整数型, "kernel32.dll", "RemoveDirectoryA", 公开, _FTP删除目录1
    .参数 lpPathName, 文本型

.DLL命令 FtpRemoveDirectoryA, 逻辑型, "WinInet.dll", "FtpRemoveDirectoryA", 公开, _FTP删除目录
    .参数 hFtp, 整数型
    .参数 lpszKillDir, 文本型

.DLL命令 VirtualAllocEx, 整数型, "kernel32.dll", "VirtualAllocEx", 公开, 分配外部指针
    .参数 hProcess, 整数型
    .参数 lpAddress, 整数型
    .参数 dwSize, 整数型
    .参数 flAllocationType, 整数型
    .参数 flProtect, 整数型

.DLL命令 GetLocalTime, 整数型, "kernel32.dll", "GetLocalTime", 公开, ,
    .参数 系统时间格式, 精易_时间, 传址

.DLL命令 GlobalSize, 整数型, "kernel32.dll", "GlobalSize", 公开, 返回全局内存块大小
    .参数 hMem, 整数型

.DLL命令 lstrcpyn_文本型, 整数型, "kernel32.dll", "lstrcpyn", 公开, 取指针地址
    .参数 目标, 文本型, 传址
    .参数 源, 文本型, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_日期时间型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目的指针, 日期时间型, 传址
    .参数 源指针, 日期时间型, 传址
    .参数 复制长度, 整数型, , 0

.DLL命令 lstrcpyn_整数型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 整数型, 传址
    .参数 源, 整数型, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_子程序指针, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 子程序指针, 传址
    .参数 源, 子程序指针, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_小数型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 小数型, 传址
    .参数 源, 小数型, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_双精度小数型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 双精度小数型, 传址
    .参数 源, 双精度小数型, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_短整数型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 短整数型, 传址
    .参数 源, 短整数型, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_长整数型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 长整数型, 传址
    .参数 源, 长整数型, 传址
    .参数 长度, 整数型

.DLL命令 SetHandleCount_字节型, 整数型, "kernel32.dll", "SetHandleCount", 公开, 设置进程的文件句柄数
    .参数 字节集数据, 字节型, 传址

.DLL命令 lstrcpyn_字节型, 整数型, "kernel32.dll", "lstrcpyn", 公开
    .参数 目标, 字节型, 传址
    .参数 源, 字节型, 传址
    .参数 长度, 整数型

.DLL命令 lstrcpyn_字节集, 整数型, "kernel32.dll", "lstrcpyn", 公开, 字节集
    .参数 欲取其指针, 字节集, 传址
    .参数 欲取其指针, 字节集, 传址
    .参数 保留, 整数型, , 0

.DLL命令 lstrcpyn_对象, 整数型, "kernel32.dll", "lstrcpyn", 公开, 图像转换类
    .参数 lpString1, 对象, 传址
    .参数 lpString2, 对象, 传址
    .参数 iMaxLength, 整数型

.DLL命令 GdipCreateHBITMAPFromBitmap, 整数型, "gdiplus.dll", "GdipCreateHBITMAPFromBitmap", 公开
    .参数 Bitmap, 整数型
    .参数 hBmpReturn, 整数型, 传址
    .参数 Background, 整数型

.DLL命令 GdipCreateBitmapFromHBITMAP, 整数型, "gdiplus.dll", "GdipCreateBitmapFromHBITMAP", 公开
    .参数 hbm, 整数型
    .参数 hPal, 整数型
    .参数 BITMAP, 整数型, 传址

.DLL命令 GlobalFree, 整数型, "kernel32.dll", "GlobalFree", 公开, 释放全局内存块
    .参数 hMem, 整数型

.DLL命令 CreateStreamOnHGlobal, 整数型, "Ole32.dll", "CreateStreamOnHGlobal", 公开
    .参数 hGlobal, 整数型
    .参数 fDeleteOnRelease, 逻辑型
    .参数 ppstm, 整数型, 传址

.DLL命令 GDIpSaveImageToStream_GUID, 整数型, "gdiplus.dll", "GdipSaveImageToStream", 公开, 图像转换类
    .参数 image, 整数型
    .参数 stream, 整数型
    .参数 clsidEncoder, GUID
    .参数 encoderParams, 整数型

.DLL命令 RtlMoveMemory_int2Bytes, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 字节集
    .参数 字节集指针, 整数型
    .参数 数据长度, 整数型

.DLL命令 CallNextHookEx, 整数型, "user32.dll", "CallNextHookEx", 公开, 下一个钩子
    .参数 hHook, 整数型
    .参数 icode, 整数型
    .参数 wParam, 整数型
    .参数 lParam, 整数型

.DLL命令 SetWindowsHookExA, 整数型, "User32.dll", "SetWindowsHookExA", 公开, 安装钩子
    .参数 ihook, 整数型
    .参数 lpfunc, 子程序指针
    .参数 hin, 整数型
    .参数 threadid, 整数型

.DLL命令 UnhookWindowsHookEx, 逻辑型, "User32.dll", "UnhookWindowsHookEx", 公开, 卸载钩子
    .参数 hHook, 整数型

.DLL命令 WriteProcessMemory_文本型, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 写文本内存
    .参数 hProcess, 整数型
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 文本型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 LocalSize_SHELLEXECUTEINFOA, 整数型, "kernel32.dll", "LocalSize", 公开, 返回本地内存块大小　
    .参数 hMem, <?未知本地类型?>

.DLL命令 LocalSize, 整数型, "kernel32.dll", "LocalSize", 公开, 返回本地内存块大小
    .参数 hMem, 整数型

.DLL命令 RtlMoveMemory_字节集, , "kernel32.dll", "RtlMoveMemory", 公开, 写内存_字节集
    .参数 Destination, 整数型
    .参数 Source, 字节集
    .参数 Length, 整数型

.DLL命令 RtlMoveMemory_BITMAPINFO, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, _内存图像截图1
    .参数 Destination, 字节集
    .参数 Source, <?未知本地类型?>
    .参数 Length, 整数型

.DLL命令 RtlMoveMemory_BITMAPFILEHEADER, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, _内存图像截图
    .参数 Destination, 字节集
    .参数 Source, <?未知本地类型?>
    .参数 Length, 整数型

.DLL命令 GetDIBColorTable, , "gdi32.dll", "GetDIBColorTable", 公开, 取得颜色表信息
    .参数 hDC, 整数型, , Long，已选入了一个DIBSection对象的设备场景
    .参数 un1, 整数型, , Long，颜色表中欲取回的第一个条目的索引
    .参数 un2, 整数型, , Long，欲取回的条目数量
    .参数 pRGBQuad, 字节集, 传址, RGBQUAD，这个结构数组用于装载颜色表信息的第一个条目

.DLL命令 RtlMoveMemory_位图信息, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝_
    .参数 Destination, 字节集
    .参数 Source, <?未知本地类型?>
    .参数 Length, 整数型

.DLL命令 GetBitmapBits, , "gdi32.dll", "GetBitmapBits", 公开, 复制二进制位图_
    .参数 位图句柄, 整数型
    .参数 字节限制, 整数型
    .参数 缓冲区, 字节集, 传址

.DLL命令 CreateDIBSection1, 整数型, "gdi32.dll", "CreateDIBSection", 公开,  创建GDI对象2_
    .参数 设备场景句柄, 整数型
    .参数 位图数据, 字节集, 传址
    .参数 常数, 整数型
    .参数 内存地址, 整数型, 传址
    .参数 文件映射句柄, 整数型
    .参数 偏移量, 整数型

.DLL命令 CreateDIBSection, 整数型, "gdi32.dll", "CreateDIBSection", 公开, 创建一个DIBSection。这是一个GDI对象，可象一幅与设备有关位图那样使用。但是，它在内部作为一幅与设备无关位图保存  执行成功返回DIBSection位图的句柄，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , 一个设备场景的句柄。如dw设为DIB_PAL_COLORS，那么DIB颜色表就会用来自逻辑调色板的颜色进行初始化
    .参数 pBitmapInfo, <?未知本地类型?>, , BITMAPINFO，这个结构初始化成欲创建的那幅位图的配置数据
    .参数 常数, 整数型, , 下述常数之一：;DIB_PAL_COLORS：BITMAPINFO包含了一个16位调色板索引的数组;DIB_RGB_COLORS：BITMAPINFO包含了一个颜色表，其中保存有32位颜色（RGBQUAD）
    .参数 内存地址, 整数型, , 用于载入DIBSection数据区的内存地址
    .参数 文件映射句柄, 整数型, , 指向一个文件映射对象的可选句柄，位图将在其中创建。如设为零，Windows会自动分配内存
    .参数 偏移量, 整数型, , 如指定了句柄，就用这个参数指定位图数据在文件映射对象中的偏移量;

.DLL命令 RtlMoveMemory_BITMAPFILEHEADER_字节型, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Dest, 字节型, 传址
    .参数 Src, <?未知本地类型?>
    .参数 len, 整数型

.DLL命令 RtlMoveMemory_BITMAPINFOHEADER, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Dest, 字节型, 传址
    .参数 Src, <?未知本地类型?>
    .参数 len, 整数型

.DLL命令 LsaFreeMemory, 整数型, "ADVAPI32.DLL", "LsaFreeMemory", 公开
    .参数 Buffer, 字节集, 传址

.DLL命令 LsaClose, 整数型, "ADVAPI32.DLL", "LsaClose", 公开
    .参数 ObjectHandle, 整数型

.DLL命令 RtlMoveMemory_NMLVCUSTOMDRAW, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, <?未知本地类型?>
    .参数 Source, 整数型
    .参数 Length, 整数型

.DLL命令 DrawText, 整数型, "user32.dll", "DrawTextA", 公开, 将文本描绘到指定的矩形中  描绘文字的高度
    .参数 设备场景句柄, 整数型, , 欲在其中显示文字的一个设备场景的句柄
    .参数 描绘的字串, 文本型, , 欲描绘的文本字串
    .参数 描绘的字串数量, 整数型, , 欲描绘的字符数量。如果要描绘整个字串（直到空中止符），则可将这个参数设为-1
    .参数 描绘文本区域, 精易_矩形, , RECT，指定用于绘图的一个格式化矩形（采用逻辑坐标）
    .参数 格式, 整数型, , 一个标志位数组，决定了以何种形式执行绘图。参考下面总结的常数类型列表标志常数说明DT_BOTTOM必须同时指定DT_SINGLE。指示文本对齐格式化矩形的底边DT_CALCRECT象下面这样计算格式化矩形：多行绘图时矩形的底边根据需要进行延展，以便容下所有文字；单行绘图时，延展矩形的右侧。不描绘文字。由lpRect参数指定的矩形会载入计算出来的值DT_CENTER文本垂直居中DT_EXPANDTABS描绘文字的时候，对制表站进行扩展。默认的制表站间距是8个字符。但是，可用DT_TABSTOP标志改变这项设定DT_EXTERNALLEADING计算文本行高度的时候，使用当前字体的外部间距属性（the external leading attribute）DT_LEFT文本左对齐DT_NOCLIP描绘文字时不剪切到指定的矩形DT_NOPREFIX通常，函数认为 & 字符表示应为下一个字符加上下划线。该标志禁止这种行为DT_RIGHT文本右对齐DT_SINGLELINE只画单行DT_TABSTOP指定新的制表站间距，采用这个整数的高8位DT_TOP必须同时指定DT_SINGLE。指示文本对齐格式化矩形的顶部DT_VCENTER必须同时指定DT_SINGLE。指示文本对齐格式化矩形的中部DT_WORDBREAK进行自动换行。如用SetTextAlign函数设置了TA_UPDATECP标志，这里的设置则无效;

.DLL命令 WriteProcessMemory_写字节, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开
    .参数 hProcess, 整数型
    .参数 pBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 字节型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 ReadProcessMemory_字节型, 逻辑型, "Kernel32.dll", "ReadProcessMemory", 公开, 读内存字节
    .参数 hProcess, 整数型
    .参数 lpBaseAddress, 整数型, , 内存地址
    .参数 lpBuffer, 字节型, 传址, 数据指针
    .参数 nSize, 整数型, , 长度
    .参数 lpNumberOfBytesWritten, 整数型, , 实际写出长度

.DLL命令 VirtualProtectEx, 整数型, "kernel32.dll", "VirtualProtectEx", 公开, 修改虚拟保护
    .参数 进程句柄, 整数型
    .参数 内存地址, 整数型
    .参数 内存大小, 整数型
    .参数 属性, 整数型
    .参数 保存之前属性, 整数型, 传址

.DLL命令 VirtualProtect, 逻辑型, "kernel32.dll", "VirtualProtect", 公开, _修改内存属性
    .参数 lpAddress, 整数型
    .参数 dwSize, 整数型
    .参数 flNewProtect, 整数型
    .参数 lpflOldProtect, 整数型, 传址

.DLL命令 VirtualQueryEx, 整数型, "kernel32.dll", "VirtualQueryEx", 公开, 取内存属性,返回虚拟保护
    .参数 hProcess, 整数型
    .参数 lpAddress, 整数型
    .参数 lpBuffer, 精易_内存属性
    .参数 dwLength, 整数型

.DLL命令 WriteProcessMemory_整数3, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 内存写整数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 整数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_整数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 整数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_短整数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 短整数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_长整数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 长整数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 WriteProcessMemory_小数型, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开, 内存写小数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 小数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_小数型, 逻辑型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读小数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 小数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_整数型1, 整数型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数，没传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 整数型
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_整数型2, 整数型, "kernel32.dll", "ReadProcessMemory", 公开, 内存读整数,有传址
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 整数型, 传址
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型, 传址

.DLL命令 CreateMutexA, 整数型, "kernel32.dll", "CreateMutexA", 公开
    .参数 互斥体结构, 整数型
    .参数 拥有互斥体, 整数型
    .参数 互斥体对象的名字, 文本型

.DLL命令 WriteProcessMemory_字节集, 逻辑型, "kernel32.dll", "WriteProcessMemory", 公开
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 字节集
    .参数 数据长度, 整数型
    .参数 实际写出长度, 整数型

.DLL命令 ReadProcessMemory_字节集, 逻辑型, "Kernel32.dll", "ReadProcessMemory", 公开, 内存读字节集
    .参数 hProcess, 整数型
    .参数 内存地址, 整数型
    .参数 数据指针, 字节集, 传址
    .参数 数据长度, 整数型
    .参数 读取的长度, 整数型, 传址

.DLL命令 Module32First, 整数型, "Kernel32.dll", "Module32First", 公开, 第一个模块，查找模块
    .参数 快照句柄, 整数型
    .参数 模块信息, 精易_模块信息

.DLL命令 Module32Next, 整数型, "kernel32.dll", "Module32Next", 公开, 下一个模块
    .参数 快照句柄, 整数型
    .参数 模块信息, 精易_模块信息

.DLL命令 GetModuleHandleA1, 整数型, "kernel32.dll", "GetModuleHandleA", 公开, 取模块句柄
    .参数 lpModuleName, 整数型

.DLL命令 GetModuleHandleA, 整数型, "kernel32.dll", "GetModuleHandleA", 公开, 取模块句柄
    .参数 lpModuleName, 文本型

.DLL命令 PathFindExtensionA, 文本型, "shlwapi.dll", "PathFindExtensionA", 公开, 文件_取扩展名, 无扩展名返回空
    .参数 文件路径, 文本型, , pszPath

.DLL命令 PathRenameExtensionA, 逻辑型, "shlwapi.dll", "PathRenameExtensionA", 公开, 文件_改扩展名
    .参数 文件名, 文本型, , pszPath
    .参数 扩展名, 文本型, , pszExt

.DLL命令 PathRemoveFileSpec, 整数型, "Shlwapi.dll", "PathRemoveFileSpecA", 公开, 删除结尾的文件名和反斜杠路径，如果有他们。
    .参数 pszPath, 文本型

.DLL命令 PathMatchSpec, 逻辑型, "shlwapi.dll", "PathMatchSpecA", 公开, 搜索的字符串，使用DOS通配符匹配类型。
    .参数 pszFile, 文本型
    .参数 pszSpec, 文本型

.DLL命令 PathFindFileNameA, 文本型, "shlwapi.dll", "PathFindFileNameA", 公开, 文件_取文件名, 成功返回路径文本指针地址
    .参数 路径文本, 文本型

.DLL命令 DeleteFileA, 逻辑型, "Kernel32.dll", "DeleteFileA", 公开, 删除指定文件
    .参数 文件名, 文本型, , lpFileName,欲删除文件的名字

.DLL命令 SetEndOfFile, 整数型, "Kernel32.dll", "SetEndOfFile", 公开
    .参数 hfile, 整数型

.DLL命令 SetFilePointer, 整数型, "Kernel32.dll", "SetFilePointer", 公开
    .参数 hFile, 整数型
    .参数 lDistanceToMove, 整数型
    .参数 lpDistanceToMoveHigh, 整数型
    .参数 dwMoveMethod, 整数型

.DLL命令 CreateFileA, 整数型, "kernel32.dll", "CreateFileA", 公开, 文件取句柄 如执行成功，则返回文件句柄
    .参数 指向文件名的指针, 文本型, , 指向文件名的指针
    .参数 访问模式_写与读, 整数型, , 访问模式（写/读）
    .参数 共享模式, 整数型, , 共享模式，0=不共享，FILE_SHARE_READ 和/或 FILE_SHARE_WRITE 表示允许对文件进行共享访问
    .参数 指向安全属性的指针, 整数型, , 指向安全属性的指针
    .参数 如何创建, 整数型, , 如何创建 3=直接打开文件
    .参数 文件属性, 整数型, , 文件属性
    .参数 用于复制文件句柄, 整数型, , 用于复制文件句柄

.DLL命令 MapViewOfFile, 整数型, "kernel32.dll", "MapViewOfFile", 公开, _查看文件映射对象 将一个文件映射对象映射到当前应用程序的地址空间
    .参数 hFileMappingObject, 整数型
    .参数 dwDesiredAccess, 整数型
    .参数 dwFileOffsetHigh, 整数型
    .参数 dwFileOffsetLow, 整数型
    .参数 dwNumberOfBytesToMap, 整数型

.DLL命令 InternetSetOptionA, 逻辑型, "wininet.dll", "InternetSetOptionA", 公开, _设置IE
    .参数 hInternet, 整数型
    .参数 dwOption, 整数型
    .参数 lpBuffer, 整数型
    .参数 dwBufferLength, 整数型

.DLL命令 InternetSetOptionA_传址, 逻辑型, "wininet.dll", "InternetSetOptionA", 公开, _设置IE
    .参数 hInternet, 整数型
    .参数 dwOption, 整数型
    .参数 lpBuffer, 整数型, 传址
    .参数 dwBufferLength, 整数型

.DLL命令 DoFileDownload, 整数型, "shdocvw.dll", "DoFileDownload", 公开, _下载文件1
    .参数 网址, 字节集, 传址

.DLL命令 CopyFileA, 逻辑型, "kernel32.dll", "CopyFileA", 公开, 文件_复制
    .参数 源文件名, 文本型, , lpExistingFileName，被复制的文件名
    .参数 目标文件名, 文本型, , lpNewFileName，目标文件名
    .参数 是否覆盖, 整数型, , bFailIfExists，非0不覆盖，0覆盖

.DLL命令 ShellExecuteA, 整数型, "shell32.dll", "ShellExecuteA", 公开, 文件_执行
    .参数 hwnd, 整数型, , 指定一个窗口的句柄，有些时候，Windows程序有必要在创建自己的主窗口前显示一个消息框。
    .参数 lpOperation, 文本型, , 指定字串“Open”来打开lpFlie文档；或指定“Print”来打印它。也可设为vbNullString，表示默认为“Open”
    .参数 lpFile, 文本型, , 想用关联的程序打印或打开的一个程序名或文件名
    .参数 lpParameters, 文本型, , 如lpFile是一个可执行文件，则这个字串包含了传递给执行程序的参数。如lpFile引用的是一个文档文件，或者不需要使用参数，则设为vbNullString
    .参数 lpDirectory, 文本型, , 想使用的默认路径完整路径
    .参数 nShowCmd, 整数型, , 定义了如何显示启动程序的常数值。参考ShowWindow函数的nCmdShow参数

.DLL命令 MoveFileExA, 整数型, "kernel32.dll", "MoveFileExA", 公开
    .参数 文件名, 文本型
    .参数 新文件名, 文本型
    .参数 常数, 整数型

.DLL命令 MoveFileA, 逻辑型, "kernel32.dll", "MoveFileA", 公开, 文件_移动
    .参数 欲移动的文件名, 文本型, , 如:C:\001.txt
    .参数 目标文件名, 文本型, , 如:D:\001.txt , 表示把C:\001.txt移动到D:\001.txt

.DLL命令 PostMessageA, 逻辑型, "user32.dll", "PostMessageA", 公开, 投递消息
    .参数 hwnd, 整数型
    .参数 消息号, 整数型
    .参数 消息参数1, 整数型
    .参数 消息参数2, 整数型

.DLL命令 CreateSolidBrush, 整数型, "gdi32.dll", "CreateSolidBrush", 公开, 用纯色创建一个刷子　如执行成功，返回新刷子的一个句柄；否则返回零
    .参数 crColor, 整数型, , 数字的RGB彩色;  

.DLL命令 GdiFlush, 整数型, "gdi32.dll", "GdiFlush", 公开, 处理绘图操作_gdi32.dll 执行任何未决的绘图操作,如所有未决的绘图操作都成功完成，就返回TRUE（非零）。如任何一个操作失败，就返回零值

.DLL命令 FillRect, 整数型, "user32.dll", "FillRect", 公开, 该函数用指定的画刷填充矩形，此函数包括矩形的左上边界，但不包括矩形的右下边界。如果函数调用成功，返回值非零；如果函数调用失败，返回值是0。 
    .参数 hdc, 整数型, , 设备环境句柄。
    .参数 lpRect, 精易_矩形, 传址, 指向含有将填充矩形的逻辑坐标的RECT结构的指针。 
    .参数 hBrush, 整数型, , 用来填充矩形的画刷的句柄。用CreateSolidBrush创建返回的句柄

.DLL命令 DeleteObject, 整数型, "gdi32.dll", "DeleteObject", 公开, 删除对象 用这个函数删除GDI对象，比如画笔、刷子、字体、位图、区域以及调色板等等。对象使用的所有系统资源都会被释放，不要删除一个已选入设备场景的画笔、刷子或位图。如删除以位图为基础的阴影（图案）刷子，位图不会由这个函数删除——只有刷子被删掉
    .参数 对象句柄, 整数型, , 一个GDI对象的句柄

.DLL命令 InternetOpenA, 整数型, "wininet.dll", "InternetOpenA", 公开, Internet激活
    .参数 句柄名称, 文本型, 传址
    .参数 连接类型, 整数型, , 1直接连接;3代理连接
    .参数 代理地址, 文本型, 传址
    .参数 代理掩码, 文本型, 传址
    .参数 dwFlags, 整数型, , 0

.DLL命令 InternetConnectA, 整数型, "wininet.dll", "InternetConnectA", 公开, Internet建立连接
    .参数 Internet句柄, 整数型
    .参数 域名, 文本型, 传址
    .参数 服务器端口, 整数型, , 80HTTP;21FTP;
    .参数 用户名, 文本型, 传址, 空
    .参数 用户口令, 文本型, 传址, 空
    .参数 服务类型, 整数型, , 1FTP;3HTTP
    .参数 dwFlags, 整数型, , 0http;134217728被动FTP模式
    .参数 dwContext, 整数型, , 0

.DLL命令 InternetSetOption, 逻辑型, "Wininet.dll", "InternetSetOptionA", 公开, 设置选项
    .参数 hInternet, 整数型, , 句柄
    .参数 dwOption, 整数型, , 选项值
    .参数 lpBuffer, 整数型, 传址, 缓冲区
    .参数 dwBufferLength, 整数型, , 缓冲区长度

.DLL命令 InternetCloseHandle, 逻辑型, "wininet.dll", "InternetCloseHandle", 公开, Internet关闭句柄
    .参数 句柄, 整数型

.DLL命令 HttpQueryInfoA, 逻辑型, "wininet.dll", "HttpQueryInfoA", 公开, HTTP查询信息
    .参数 Internet请求句柄, 整数型
    .参数 待查信息, 整数型, , 22返回所有信息;43SET_COOKIE;+2147483648返回文本
    .参数 返回容器, 文本型, 传址
    .参数 返回容器长度, 整数型, 传址
    .参数 lpdwIndex, 整数型

.DLL命令 InternetReadFile, 逻辑型, "wininet.dll", "InternetReadFile", 公开, Internet读文件
    .参数 HTTP请求句柄, 整数型
    .参数 sBuffer, 字节集, 传址
    .参数 lNumBytesToRead, 整数型
    .参数 lNumberOfBytesRead, 整数型, 传址

.DLL命令 HttpOpenRequestA, 整数型, "wininet.dll", "HttpOpenRequestA", 公开, Http创建请求
    .参数 Internet连接句柄, 整数型, , 由Internet建立连接返回
    .参数 访问方式, 文本型, 传址, "GET" or "POST"为空默认GET
    .参数 页面路径, 文本型, 传址, 简短路径,不带域名
    .参数 协议版本, 文本型, 传址, 为空默认HTTP/1.1
    .参数 引用页, 文本型, 传址, 可为空
    .参数 识别类型, 文本型, 传址, 可为空
    .参数 dwFlags, 整数型, , 2147483648更新下载
    .参数 dwContext, 整数型, , 0

.DLL命令 HttpSendRequestA, 逻辑型, "wininet.dll", "HttpSendRequestA", 公开, Http发送请求
    .参数 HTTP请求句柄, 整数型
    .参数 附加协议头, 文本型
    .参数 附加协议头长度, 整数型
    .参数 提交信息, 整数型
    .参数 提交信息长度, 整数型

.DLL命令 InflateRect, 整数型, "user32.dll", "InflateRect", 公开, 这个函数用于增大或减小一个矩形的大小。x加在右侧区域，并从左侧区域减去；如x为正，则能增大矩形的宽度；如x为负，则能减小它。y对顶部与底部区域产生的影响是是类似的　非零表示成功，零表示失败。会设置GetLastError
    .参数 lpRect, 精易_矩形, , RECT，欲修改的矩形
    .参数 x, 整数型, , 用这个数字修改宽度
    .参数 y, 整数型, , 用这个数字修改高度;  

.DLL命令 ChangeWindowMessageFilter, 逻辑型, "user32.dll", "ChangeWindowMessageFilter", 公开
    .参数 message, 整数型
    .参数 dwflag, 整数型

.DLL命令 SendMessageW, 整数型, "user32.dll", "SendMessageW", 公开
    .参数 hwnd, 整数型
    .参数 wmsg, 整数型
    .参数 wp, 整数型
    .参数 lp, 整数型

.DLL命令 LocalAlloc, 整数型, "kernel32.dll", "LocalAlloc", 公开, _从局部堆分配内存(申请内存)
    .参数 uFlags, 整数型
    .参数 uBytes, 整数型

.DLL命令 LocalFree, 整数型, "kernel32.dll", "LocalFree", 公开, _释放本地内存信息
    .参数 hMem, 整数型

.DLL命令 IsWindowEnabled, 整数型, "user32.dll", "IsWindowEnabled", 公开, 判断窗口是否处于活动状态（在vb里使用：针对vb窗体和控件，请用enabled属性）  非零表示成功，零表示失败
    .参数 hWnd, 整数型

.DLL命令 GetClassLongA, 整数型, "user32.dll", "GetClassLongA", 公开
    .参数 hwnd, 整数型
    .参数 m, 整数型

.DLL命令 SendMessageA, 整数型, "user32.dll", "SendMessageA", 公开
    .参数 hWnd, 整数型
    .参数 Msg, 整数型, , 消息的标识符
    .参数 wParam, 整数型, , 具体取决于消息
    .参数 lParam, 整数型, , 具体取决于消息

.DLL命令 GetSystemMenu, 整数型, "user32.dll", "GetSystemMenu", 公开, 取系统菜单句柄
    .参数 hwnd, 整数型
    .参数 bRevert, 整数型

.DLL命令 CreateFileMappingA, 整数型, "kernel32.dll", "CreateFileMappingA", 公开, 创建一个新的文件映射对象　新建文件映射对象的句柄；零意味着出错。会设置GetLastError。即使函数成功，但倘若返回的句柄属于一个现成的文件映射对象，那么GetLastError也会设置成ERROR_ALREADY_EXISTS。在这种情况下，文件映射的长度就是现有对象的长度，而不是这个函数指定的尺寸
    .参数 文件映射句柄, 整数型, , 指定欲在其中创建映射的一个文件句柄。&HFFFFFFFF&表示在内存中创建一个文件映射
    .参数 安全对象, 整数型, , SECURITY_ATTRIBUTES，指定一个安全对象，在创建文件映射时使用。如果为NULL（用ByVal As Long传递零），表示使用默认安全对象
    .参数 打开映射方式, 整数型, , 下述常数之一：;PAGE_READONLY：以只读方式打开映射;PAGE_READWRITE：以可读、可写方式打开映射;PAGE_WRITECOPY：为写操作留下备份可组合使用下述一个或多个常数;SEC_COMMIT：为文件映射一个小节中的所有页分配内存;SEC_IMAGE：文件是个可执行文件;SEC_RESERVE：为没有分配实际内存的一个小节保留虚拟内存空间
    .参数 文件映射最大长度, 整数型, , 文件映射的最大长度（高32位）
    .参数 文件映射的最小长度, 整数型, , 文件映射的最小长度（低32位）。如这个参数和dwMaximumSizeHigh都是零，就用磁盘文件的实际长度
    .参数 映射对象名, 文本型, , 指定文件映射对象的名字。如存在这个名字的一个映射，函数就会打开它。用vbNull创建一个无名的文件映射;

.DLL命令 SetDIBitsToDevice, 整数型, "gdi32.dll", "SetDIBitsToDevice", 公开, 置位图到设备场景_GDI32.DLL将一幅与设备无关位图的全部或部分数据直接复制到一个设备。这个函数在设备中定义了一个目标矩形，以便接收位图数据。它也在DIB中定义了一个源矩形，以便从中提取数据  执行成功则返回扫描线的数量，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , hdc，一个设备场景的句柄。该场景用于接收位图数据
    .参数 目标矩形横坐标, 整数型, , x，用逻辑坐标表示的目标矩形的起点
    .参数 目标矩形纵坐标, 整数型, , y，用逻辑坐标表示的目标矩形的起点
    .参数 目标矩形宽度, 整数型, , dx，用目标矩形的设备单位表示的宽度及高度
    .参数 目标矩形高度, 整数型, , dy，用目标矩形的设备单位表示的宽度及高度
    .参数 源矩形横坐标, 整数型, , SrcX，用设备坐标表示的源矩形在DIB中的起点
    .参数 源矩形纵坐标, 整数型, , SrcY，用设备坐标表示的源矩形在DIB中的起点
    .参数 扫描线初始编号, 整数型, , Scan，Bits数组中第一条扫描线的编号。如BitsInfo之BITMAPINFOHEADER部分的biHeight字段是正数，那么这条扫描线就会从位图的底部开始计算；如果是负数，就从顶部开始计算
    .参数 扫描线数量, 整数型, , NumScans，欲复制的扫描线数量
    .参数 缓冲区指针, 字节型, 传址, Bits，指向一个缓冲区的指针。这个缓冲区包含了以DIB格式描述的位图数据；这种格式是由BitsInfo指定的
    .参数 位图结构, <?未知本地类型?>, , BitsInfo，对Bits DIB的格式和颜色进行描述的一个结构
    .参数 常量标志, 整数型, , wUsage，常数

.DLL命令 SHGetPathFromIDListA, 整数型, "shell32.dll", "SHGetPathFromIDListA", 公开, _从列表id取路径
    .参数 pIdl, 整数型
    .参数 pszPath, 文本型, 传址

.DLL命令 SetBkMode, 整数型, "gdi32.dll", "SetBkMode", 公开, gdi32.dll指定阴影刷子、虚线画笔以及字符中的空隙的填充方式　前一个背景模式的值
    .参数 hdc, 整数型, , 设备场景的句柄
    .参数 nBkMode, 整数型, , 下述常数之一：;OPAQUE：用当前的背景色填充虚线画笔、阴影刷子以及字符的空隙;TRANSPARENT：透明处理，即不作上述填充;  

.DLL命令 TextOutA, 整数型, "gdi32.dll", "TextOutA", 公开, _文本绘图gdi32.dll文本绘图函数。也请参考SetTextAlign　非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景, 整数型, , 设备场景的句柄
    .参数 横, 整数型, , 绘图的起点，采用逻辑坐标
    .参数 纵, 整数型, , 同上
    .参数 内容, 文本型, , 欲描绘的字串
    .参数 内容数量, 整数型, , 字串中要描绘的字符数量;  

.DLL命令 SetTextColor, 整数型, "gdi32.dll", "SetTextColor", 公开, gdi32.dll设置当前文本颜色。这种颜色也称为“前景色”　文本色的前一个RGB颜色设定。CLR_INVALID表示失败。会设置GetLastError
    .参数 设备场景, 整数型, , 设备场景的句柄
    .参数 颜色, 整数型, , 新的文本色在VB里使用如改变了这个设置，注意恢复VB窗体或控件原始的文本颜色;

.DLL命令 SelectObject, 整数型, "gdi32.dll", "SelectObject", 公开, 选入设备场景
    .参数 hdc, 整数型
    .参数 hgdiobj, 整数型

.DLL命令 CreateCompatibleBitmap, 整数型, "gdi32.dll", "CreateCompatibleBitmap", 公开, 创建设备位图
    .参数 设备场景句柄, 整数型
    .参数 位图宽度, 整数型
    .参数 位图高度, 整数型

.DLL命令 CreateFontA, 整数型, "gdi32.dll", "CreateFontA", 公开, g创建字体_ di32.dll用指定属性创建逻辑字体_,执行成功则返回逻辑字体的句柄零表示失败——返回值：如果函数调用成功，返回值是一种逻辑字体句柄；如果函数调用失败，返回值为NULL。备注：当一种字体不再使用时，可用DeleteObject来删除。为保护那些提供字体给Windows和Windows NT的卖主的版权，基于Win32的应用程序总是列出所选择字体的准确名字。由于不同的系统会使用不同的字体，不要认为所选择字体就是要求的字体。例如，如果要求名叫Palatino的字体，但系统没提供那样一种字体，则字体映射器将会以一种不同名但有相似属性的字体取而代之。系统总是将用户选择的字体名报告出来。
    .参数 字体高度, 整数型, , Height字体高度指定字体的字符单元或字符的逻辑单位高度，字符的高度值（也被称为em高度）是指字符单元高度值减去内部标头值。字体映射器以如下方式解释nHeight指定的值，各值含义为：
    .参数 字体宽度, 整数型, , Width指定所要求字体的字符的逻辑单位的平均宽度。如果此值为0，字体映射器选择一个closest match值，closest match值是由比较当前设备的特征系数与可使用字体的数字化特征系数之差的绝对值而确定的
    .参数 旋转, 整数型, , Escapement指定移位向量和设备X轴之间的一个角度，以十分之一度为单位。移位向量平行于正文行的基线。Windows NT：当图形设备设置为GM_ADVANCED时，可以不依赖字符串的字符的定位角而指定字符串的移位角.当图形模式被设置为GM_COMPATIBLE时，nEscapement同时指定移位角和定位角，可以设置nEscapement和nOrientation为相同的值。Windows 95：nEscapement同时指定移位角和定位角，可设置nEscapement和nOrientation为相同的值。
    .参数 Orientation, 整数型, , 指定每个字符的基线和设备X轴之间的角度
    .参数 加粗, 整数型, , Weight在0到1000之间指定字体的权值，如400表示标准体，700表示黑（粗）体，如果此值为0，则使用缺省的权值。    为方便定义，可使用如下值：
    .参数 倾斜, 逻辑型, , Italic如果设置为TRUE则指定斜体
    .参数 下划线, 逻辑型, , Underline如果设置为TRUE，则指定加下划线的字全
    .参数 删除线, 逻辑型, , StrikeOut如果设置为TRUE，则strikeout指定字体。
    .参数 内码, 整数型, , CharSetfdwCharSet：指定字符集，下列值是预定义的：
    .参数 OutputPrecision, 整数型, , fdwOutputPrecision：指定输出精度，输出精度义输出与要求的字体高度、宽度、字符定位、移位、字符间距和字符类型的匹配程序，它可取下列值之一：
    .参数 CP, 整数型, , ClipPrecision指定裁剪精度，裁剪精度定义如何裁剪部分超出裁剪区的字符，它可取一个或多个下列值：
    .参数 输出质量, 整数型, , fdwQuality指向输出质量，输出质量定义GDI如何仔细地将逻辑字体属性与实际物理字体属性相匹配。它可取下列值之一：
    .参数 PAF, 整数型, , PitchAndFamily指定字体间距和字体族，低端二位指定字体的字符间距，它可取下列值之一：
    .参数 新字体名, 文本型, , FaceName指向指定字体的字样名的、以\0结束的字符串指针，字符串的长度不能超过32个字符（包括字符\0），函数EnumFontFamilies可用来列举所有当前可用字体的字样名。如果lpszFace为NULL或指向一个空串，GDI使用能匹配其他属性的第一种字体。

.DLL命令 IsDebuggerPresent, 逻辑型, "kernel32.dll", "IsDebuggerPresent", 公开, 程序是否被调试

.DLL命令 CreateCompatibleDC, 整数型, "gdi32.dll", "CreateCompatibleDC", 公开, 创建内存场景
    .参数 hdc, 整数型

.DLL命令 CreateEvent, 整数型, "Kernel32.dll", "CreateEventA", 公开, 创建事件同步对象
    .参数 lpEventAttributes, 整数型
    .参数 bManualReset, 逻辑型
    .参数 bInitialState, 逻辑型
    .参数 lpName, 文本型

.DLL命令 OpenEventA, 整数型, "kernel32.dll", "OpenEventA", 公开, 打开事件同步对象
    .参数 dwDesiredAccess, 整数型
    .参数 bInheritHandle, 逻辑型
    .参数 lpName, 文本型

.DLL命令 lstrcpynA_字节集, 整数型, "kernel32.dll", "lstrcpynA", 公开
    .参数 lpString1, 字节集, 传址
    .参数 lpString2, 字节集, 传址
    .参数 iMaxLength, 整数型

.DLL命令 lstrcpynA_整数数组, 整数型, "kernel32.dll", "lstrcpynA", 公开, ,
    .参数 数据1, 整数型, 数组, lpString1
    .参数 数据2, 整数型, 数组, lpString2
    .参数 数据长度, 整数型, , iMaxLength

.DLL命令 lstrcpynA_字节型, 文本型, "kernel32.dll", "lstrcpynA", 公开
    .参数 lpString1, 字节型, 数组
    .参数 lpString2, 字节型
    .参数 iMaxLength, 整数型

.DLL命令 lstrcpynA_指针, 子程序指针, "kernel32.dll", "lstrcpynA", 公开
    .参数 参数1, 整数型
    .参数 参数2, 整数型
    .参数 保留, 整数型

.DLL命令 lstrcpynA_文本, 整数型, "kernel32.dll", "lstrcpynA", 公开, _复制字符串
    .参数 lpString1, 文本型, 传址
    .参数 lpString2, 文本型, 传址
    .参数 iMaxLength, 整数型

.DLL命令 SwapMouseButton, 逻辑型, "user32.dll", "SwapMouseButton", 公开, 鼠标左右键交换
    .参数 鼠标按钮方式, 逻辑型, , bSwap，Long，倘若为TRUE（非零），则互换两个鼠标按钮的功能。FALSE则恢复正常状态

.DLL命令 GetProcAddress1, 整数型, "kernel32.dll", "GetProcAddress", 公开
    .参数 hModule, 整数型
    .参数 lpProcName, 文本型

.DLL命令 ZwResumeProcess, , "NTDLL.DLL", "ZwResumeProcess", 公开, 进程恢复
    .参数 进程句柄, 整数型

.DLL命令 ZwSuspendProcess, , "NTDLL.DLL", "ZwSuspendProcess", 公开, 进程暂停
    .参数 进程句柄, 整数型

.DLL命令 ResumeThread, 整数型, "kernel32.dll", "ResumeThread", 公开, 线程_恢复   恢复执行用SuspendThread挂起的一个线程,Long，调用这个函数前的挂起计数。&HFFFFFFFF表示出错。会设置GetLastError
    .参数 hThread, 整数型

.DLL命令 SuspendThread, 整数型, "kernel32.dll", "SuspendThread", 公开, 线程_挂起  将指定线程的执行挂起，调用这个函数前的挂起计数。&HFFFFFFFF表示出错。会设置GetLastError
    .参数 hThread, 整数型

.DLL命令 WaitForSingleObject, 整数型, "kernel32.dll", "WaitForSingleObject", 公开, 线程等待
    .参数 hHandle, 整数型, , 线程句柄
    .参数 dwMilliseconds, 整数型, , 值为:4294967295

.DLL命令 InitializeCriticalSection, , "kernel32.dll", "InitializeCriticalSection", 公开, 创建许可证
    .参数 lpCriticalSection, 线程许可证, 传址

.DLL命令 DeleteCriticalSection, , "kernel32.dll", "DeleteCriticalSection", 公开, _删除许可证
    .参数 lpCriticalSection, 线程许可证, 传址

.DLL命令 EnterCriticalSection, , "kernel32.dll", "EnterCriticalSection", 公开, _进入许可区
    .参数 lpCriticalSection, 线程许可证, 传址

.DLL命令 LeaveCriticalSection, , "kernel32.dll", "LeaveCriticalSection", 公开, 退出许可区
    .参数 lpCriticalSection, 线程许可证, 传址

.DLL命令 DuplicateHandle, 整数型, "kernel32.dll", "DuplicateHandle", 公开, 复制对象句柄
    .参数 源进程句柄, 整数型, , hSourceProcessHandle,参见相关帮助
    .参数 现句柄, 整数型, , hSourceHandle,指定对象的现有句柄
    .参数 新进程句柄, 整数型, , hTargetProcessHandle,参见相关帮助
    .参数 转载句柄变量, 整数型, 传址, lpTargetHandle,指定用于装载新句柄的长整型变量
    .参数 新句柄安全访问级别, 整数型, , dwDesiredAccess,新句柄要求的安全访问级别
    .参数 继承句柄, 整数型, , bInheritHandle Long，参见相关帮助
    .参数 复选项, 整数型, , dwOptions

.DLL命令 CloseHandle, 逻辑型, "kernel32.dll", "CloseHandle", 公开, 关闭一个内核对象。其中包括文件、文件映射、进程、线程、安全和同步对象等。涉及文件处理时，这个函数通常与vb的close命令相似。应尽可能的使用close，因为它支持vb的差错控制。注意这个函数使用的文件句柄与vb的文件编号是完全不同的  非零表示成功，零表示失败。会设置GetLastError
    .参数 对象句柄, 整数型, , 欲关闭的一个对象的句柄;

.DLL命令 lstrlen, 整数型, "kernel32.dll", "lstrlenW", 公开, 取字节长度　
    .参数 lpString, 整数型

.DLL命令 DeviceIoControl1, 逻辑型, "kernel32.dll", "DeviceIoControl", 公开, 设备操作4
    .参数 hDevice, 整数型
    .参数 dwIoControlCode, 整数型
    .参数 lpInBuffer, 整数型
    .参数 nInBufferSize, 整数型
    .参数 lpOutBuffer, 整数型
    .参数 nOutBufferSize, 整数型
    .参数 lpBytesReturned, 整数型, 传址
    .参数 lpOverlapped, 整数型

.DLL命令 Process32Next, 整数型, "kernel32.dll", "Process32Next", 公开, 取下一个进程
    .参数 h, 整数型
    .参数 p, 精易_进程信息列表

.DLL命令 GetModuleFileNameExA, 整数型, "Psapi.dll", "GetModuleFileNameExA", 公开, _进程取全路径名
    .参数 hProcess, 整数型
    .参数 hModule, 整数型, , 0
    .参数 lpFilename, 文本型, , 1000
    .参数 nSize, 整数型, , 1000

.DLL命令 Process32First, 整数型, "kernel32.dll", "Process32First", 公开, 取第一个进程
    .参数 hSnapshot, 整数型
    .参数 lppe, 精易_进程信息列表

.DLL命令 OpenProcess, 整数型, "kernel32.dll", "OpenProcess", 公开, 打开进程
    .参数 进程对象, 整数型
    .参数 继承句柄, 整数型
    .参数 进程标识符, 整数型

.DLL命令 TerminateProcess, 逻辑型, "kernel32.dll", "TerminateProcess", 公开, _进程终止
    .参数 hProcess, 整数型, , PID
    .参数 uExitCode, 整数型

.DLL命令 GetCurrentProcessId, 整数型, "kernel32.dll", "GetCurrentProcessId", 公开, 取自进程ID

.DLL命令 CreateToolhelp32Snapshot, 整数型, "kernel32.dll", "CreateToolhelp32Snapshot", 公开, 创建进程快照
    .参数 falg, 整数型
    .参数 id, 整数型

.DLL命令 GetWindowThreadProcessId, 整数型, "user32.dll", "GetWindowThreadProcessId", 公开, 线程_取ID
    .参数 hwnd, 整数型, , 指定窗口句柄
    .参数 进程标识符, 整数型, 传址, 用于装载进程ID的变量

.DLL命令 LBItemFromPt, 整数型, "comctl32.dll", "LBItemFromPt", 公开, 列表框_鼠标坐标取项目索引
    .参数 hwnd, 整数型, , hwnd
    .参数 横向位置, 整数型, , ptx
    .参数 纵向位置, 整数型, , pty
    .参数 自动滚动, 逻辑型, , bAutoScroll

.DLL命令 ShowWindow, 逻辑型, "user32.dll", "ShowWindow", 公开, 窗口_置状态
    .参数 hwnd, 整数型, , 窗口句柄，要向这个窗口应用由命令
    .参数 nCmdShow, 整数型, , 为窗口指定的一个命令。请用下述任何一个常数:0 隐藏取消激活  1 还原激活 2 最小化激活 3 最大化激活 4 还原 6 最小化取消激活 7 最小化 9 还原激活

.DLL命令 SetWindowPos, 整数型, "user32.dll", "SetWindowPos", 公开, _窗口置最前
    .参数 hwnd, 整数型, , 欲定位的窗口
    .参数 hWndInsertAfter, 整数型
    .参数 x, 整数型, , 窗口新的x坐标。如hwnd是一个子窗口，则x用父窗口的客户区坐标表示
    .参数 y, 整数型, , 窗口新的y坐标。如hwnd是一个子窗口，则y用父窗口的客户区坐标表示
    .参数 cx, 整数型, , 指定新的窗口宽度
    .参数 cy, 整数型, , 指定新的窗口高度
    .参数 wFlags, 整数型

.DLL命令 CloseWindow, 整数型, "user32.dll", "CloseWindow", 公开, 窗口_最小化, 非0表示成功，0表示失败
    .参数 hwnd, 整数型, , hwnd，欲最小化窗口的窗口句柄

.DLL命令 ShowWindowAsync, 逻辑型, "user32.dll", "ShowWindowAsync", 公开, 窗口_显示隐藏
    .参数 hWnd, 整数型, , 欲接收ShowWindow命令的窗口
    .参数 nCmdShow, 逻辑型, , 与ShowWindow相同

.DLL命令 BringWindowToTop, 逻辑型, "user32.dll", "BringWindowToTop", 公开, 窗口置顶
    .参数 hwnd, 整数型, , hwnd,欲带至顶部的那个窗口的句柄

.DLL命令 GetForegroundWindow, 整数型, "user32.dll", "GetForegroundWindow", 公开, ,窗口_取顶端窗口句柄

.DLL命令 ExtractIconExA, 整数型, "shell32.dll", "ExtractIconExA", 公开, 提取图标扩展
    .参数 文件名, 文本型, , lpszFile
    .参数 图标索引, 整数型, , nIconIndex
    .参数 大图标句柄, 整数型, 传址, phiconLarge
    .参数 小图标句柄, 整数型, , phiconSmall
    .参数 图标数量, 整数型, , nIcons

.DLL命令 MoveWindow, 逻辑型, "user32.dll", "MoveWindow", 公开, 窗口_置位置和大小
    .参数 hwnd, 整数型
    .参数 左侧位置, 整数型
    .参数 顶部位置, 整数型
    .参数 新宽度, 整数型
    .参数 新高度, 整数型
    .参数 是否重画, 逻辑型

.DLL命令 GetWindowRect, 逻辑型, "user32.dll", "GetWindowRect", 公开,    获得整个窗口的范围矩形，窗口的边框、标题栏、滚动条及菜单等都在这个矩形内
    .参数 句柄, 整数型, , Long，想获得范围矩形的那个窗口的句柄
    .参数 大小, 精易_矩形, 传址, RECT，屏幕坐标中随同窗口装载的矩形(左边,顶边,右边,底边)

.DLL命令 IsZoomed, 逻辑型, "user32.dll", "IsZoomed", 公开, 窗口_是否最大化 判断窗口是否已最大化 非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 IsIconic, 逻辑型, "user32.dll", "IsIconic", 公开, 窗口_是否最小化 判断窗口是否已最小化 非零表示成功，零表示失败
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 IsWindowVisible, 逻辑型, "user32.dll", "IsWindowVisible", 公开, 窗口_是否可见  判断窗口是否可见  返回真为可见，否则为不可见
    .参数 hwnd, 整数型, , 要测试的那个窗口的句柄

.DLL命令 StrTrimA, 整数型, "shlwapi.dll", "StrTrimA", 公开, _文本修剪
    .参数 psz, 文本型
    .参数 pszTrimChars, 文本型

.DLL命令 FlashWindow, 逻辑型, "user32.dll", "FlashWindow", 公开, 窗口_闪动
    .参数 hwnd, 整数型
    .参数 bInvert, 逻辑型, , 是否闪动窗口

.DLL命令 lstrlenA, 整数型, "kernel32.dll", "lstrlenA", 公开
    .参数 lpString, 整数型

.DLL命令 WideCharToMultiByte, 整数型, "kernel32.dll", "WideCharToMultiByte", 公开
    .参数 CodePage, 整数型
    .参数 dwFlags, 整数型
    .参数 lpWideCharStr, 整数型
    .参数 cchWideChar, 整数型
    .参数 lpMultiByteStr, 整数型
    .参数 cbMultiByte, 整数型
    .参数 lpDefaultChar, 整数型
    .参数 lpUsedDefaultChar, 整数型

.DLL命令 GetDC, 整数型, "user32.dll", "GetDC", 公开, 取设备场景
    .参数 hwnd, 整数型

.DLL命令 ReleaseDC, 整数型, "user32.dll", "ReleaseDC", 公开, 释放设备场景
    .参数 hwnd, 整数型
    .参数 设备句柄, 整数型

.DLL命令 GetPixel, 整数型, "gdi32.dll", "GetPixel", 公开, 鼠标取坐标颜色
    .参数 设备句柄, 整数型
    .参数 横坐标, 整数型
    .参数 纵坐标, 整数型

.DLL命令 GetDIBits2, 整数型, "gdi32.dll", "GetDIBits", 公开
    .参数 aHDC, 整数型
    .参数 hBitmap, 整数型
    .参数 nStartScan, 整数型
    .参数 nNumScans, 整数型
    .参数 lpBits, 字节型, 传址
    .参数 lpBI, 字节型, 传址
    .参数 wUsage, 整数型

.DLL命令 GetDIBits1, 整数型, "gdi32.dll", "GetDIBits", 公开, _位图复制1
    .参数 HDC, 整数型
    .参数 hBitmap, 整数型
    .参数 nStartScan, 整数型
    .参数 nNumScans, 整数型
    .参数 lpBits, 整数型
    .参数 lpBI, <?未知本地类型?>
    .参数 wUsage, 整数型

.DLL命令 GetDIBits, 整数型, "gdi32.dll", "GetDIBits", 公开, _位图复制 将来自一幅位图的二进制位复制到一幅与设备无关的位图里
    .参数 HDC, 整数型
    .参数 hBitmap, 整数型
    .参数 nStartScan, 整数型
    .参数 nNumScans, 整数型
    .参数 lpBits, 字节集
    .参数 lpBI, <?未知本地类型?>
    .参数 wUsage, 整数型

.DLL命令 BitBlt, 逻辑型, "gdi32.dll", "BitBlt", 公开, 复制场景位图
    .参数 目标设备场景, 整数型
    .参数 目标横坐标, 整数型
    .参数 目标纵坐标, 整数型
    .参数 传输图像宽度, 整数型
    .参数 传输图像高度, 整数型
    .参数 源设备场景, 整数型
    .参数 源横坐标, 整数型
    .参数 源纵坐标, 整数型
    .参数 光栅运算方式, 整数型

.DLL命令 VirtualAlloc, 整数型, "Kernel32.dll", "VirtualAlloc", 公开
    .参数 lpAddress, 整数型
    .参数 dwSize, 整数型
    .参数 flAllocationType, 整数型
    .参数 flProtect, 整数型

.DLL命令 MultiByteToWideChar, 整数型, "Kernel32.dll", "MultiByteToWideChar", 公开, 该函数映射一个字符串到一个宽字符（unicode）的字符
    .参数 CodePage, 整数型
    .参数 dwFlags, 整数型
    .参数 lpMultiByteStr, 整数型
    .参数 cchMultiByte, 整数型
    .参数 lpWideCharStr, 整数型
    .参数 cchWideChar, 整数型

.DLL命令 CharUpperA, 文本型, "user32.dll", "CharUpperA", 公开, 把字符串中的字母都转换成大写的
    .参数 str, 文本型

.DLL命令 CharLowerA, 文本型, "user32.dll", "CharLowerA", 公开, 把字符串中的字母都转换成小写的
    .参数 str, 文本型

.DLL命令 GetClientRect, 逻辑型, "user32.dll", "GetClientRect", 公开, ,窗口_取控件大小
    .参数 hwnd, 整数型
    .参数 矩形区域, 精易_矩形, 传址

.DLL命令 IsChild, 逻辑型, "user32.dll", "IsChild", 公开, 窗口_是否子窗口 user32.dll判断一个窗口是否为另一窗口的子或隶属窗口
    .参数 父窗口的句柄, 整数型, , 父窗口的句柄
    .参数 欲判断的窗口句柄, 整数型, , 欲判断的窗口句柄

.DLL命令 SetParent, 整数型, "user32.dll", "SetParent", 公开, 窗口_置父   指定一个窗口的新父(返回  前一个父窗口的句柄)
    .参数 子窗口句柄, 整数型
    .参数 父窗口句柄, 整数型

.DLL命令 IsWindow, 整数型, "user32.dll", "IsWindow", 公开, 窗口_句柄是否有效  判断一个窗口句柄是否有效(非零表示成功，零表示失败)
    .参数 hwnd, 整数型

.DLL命令 EnumChildWindows_整数, 逻辑型, "user32.dll", "EnumChildWindows", 公开
    .参数 hWndParent, 整数型, , 0
    .参数 lpEnumFunc, 整数型, , 0
    .参数 lParam, 整数型, , 0

.DLL命令 EnumChildWindows, 逻辑型, "user32.dll", "EnumChildWindows", 公开
    .参数 父窗口句柄, 整数型
    .参数 函数指针, 子程序指针
    .参数 自定义值, 整数型

.DLL命令 EnumWindows, 逻辑型, "user32.dll", "EnumWindows", 公开, 窗口_枚举
    .参数 枚举过程, 子程序指针
    .参数 参数, 整数型

.DLL命令 SetActiveWindow, 整数型, "user32.dll", "SetActiveWindow", 公开, 激活窗口
    .参数 hwnd, 整数型

.DLL命令 RedrawWindow, 逻辑型, "user32.dll", "RedrawWindow", 公开, 窗口_重画
    .参数 hwnd, 整数型
    .参数 矩形, 精易_矩形
    .参数 区域, 整数型
    .参数 旗帜, 整数型

.DLL命令 EnableMenuItem, 整数型, "user32.dll", "EnableMenuItem", 公开, 窗口禁止关闭
    .参数 hMenu, 整数型
    .参数 wIDEnableItem, 整数型
    .参数 wEnable, 整数型

.DLL命令 OpenIcon, 逻辑型, "user32.dll", "OpenIcon", 公开, 窗口_还原   恢复一个最小化的程序，并将其激活
    .参数 hwnd, 整数型

.DLL命令 GetFocus, 整数型, "user32.dll", "GetFocus", 公开, 窗口_取焦点句柄, GetFocus，获得自身拥有输入焦点的窗口的句柄

.DLL命令 GetDesktopWindow, 整数型, "user32.dll", "GetDesktopWindow", 公开, 窗口_取屏幕句柄

.DLL命令 ChildWindowFromPoint, 整数型, "user32.dll", "ChildWindowFromPoint", 公开, 窗口_取坐标子句柄 user32.dll取父窗口中包含了指定坐标的第一个子窗口句柄(与其它取窗口句柄不同的是:可取出不可视或透明的窗口)
    .参数 父窗口句柄, 整数型, , 欲取坐标句柄所在的父窗口句柄
    .参数 横坐标, 整数型, , 指定横坐标
    .参数 纵坐标, 整数型, , 指定纵坐标

.DLL命令 GetClassNameA, 整数型, "user32.dll", "GetClassNameA", 公开, 窗口_取类名 为指定的窗口取得类名　以字节数表示的类名长度；排除最后的空中止字符。零表示出错。会设置GetLastError
    .参数 句柄, 整数型, , 欲获得类名的那个窗口的句柄
    .参数 文本, 文本型, 传址, 随同类名载入的缓冲区。预先至少必须分配nMaxCount+1个字符
    .参数 文本长度, 整数型, , 由lpClassName提供的缓冲区长度;

.DLL命令 SetWindowRgn, 整数型, "user32.dll", "SetWindowRgn", 公开, 为区域指定的所有坐标都以窗口坐标（不是客户坐标）表示，它们以整个窗口（包括标题栏和边框）的左上角为起点
    .参数 hwnd, 整数型, , 将设置其区域的窗口
    .参数 区域, 整数型, , 将设置的区域的句柄，一旦设置了该区域，就不能使用或修改该区域句柄，也不要删除它
    .参数 自动刷新, 逻辑型, , Boolean，若为TRUE，则立即重画窗口

.DLL命令 AtlAxWinInit, , "atl.dll", "AtlAxWinInit", 公开

.DLL命令 AtlAxGetControl, 整数型, "atl.dll", "AtlAxGetControl", 公开
    .参数 h, 整数型
    .参数 x, 对象

.DLL命令 GetTextExtentPointA, , "gdi32.dll", "GetTextExtentPointA", 公开
    .参数 hdc, 整数型
    .参数 lpString, 文本型
    .参数 cbString, 整数型
    .参数 lpSize, 精易_坐标

.DLL命令 CreateWindowExA, 整数型, "user32.dll", "CreateWindowExA", 公开, 创建窗口_
    .参数 扩展风格, 整数型
    .参数 类名, 文本型, , 刚才注册的类名
    .参数 窗口标题, 文本型
    .参数 风格, 整数型
    .参数 屏幕横坐标, 整数型
    .参数 屏幕纵坐标, 整数型
    .参数 宽度, 整数型
    .参数 高度, 整数型
    .参数 父窗口句柄, 整数型, , 没有就写0
    .参数 菜单句柄, 整数型
    .参数 模块句柄, 整数型
    .参数 参数, 整数型

.DLL命令 CreateWindowExW, 整数型, "user32", "CreateWindowExW", 公开, 创建窗口
    .参数 dwExStyle, 整数型, , 窗口的扩展风格
    .参数 lpClassName, 字节集, , 注册类名
    .参数 lpWindowName, 字节集, , 窗口名称
    .参数 dwStyle, 整数型, , 窗口风格
    .参数 x, 整数型, , 窗口的水平位置
    .参数 y, 整数型, , 窗口的垂直位置
    .参数 nWidth, 整数型, , 窗口的宽度
    .参数 nHeight, 整数型, , 窗口的高度
    .参数 hWndParent, 整数型, , 父窗口的句柄
    .参数 hMenu, 整数型, , 菜单的句柄或是子窗口的标识符
    .参数 hInstance, 整数型, , 应用程序实例的句柄
    .参数 lpParam, 整数型, , 指向窗口的创建数据

.DLL命令 GetWindowLongA, 整数型, "user32.dll", "GetWindowLongA", 公开, 获取窗口信息
    .参数 hwnd, 整数型
    .参数 属性, 整数型

.DLL命令 GetWindowTextA, 整数型, "user32.dll", "GetWindowTextA", 公开, 窗口_取标题
    .参数 hwnd, 整数型
    .参数 标题名, 文本型, 传址
    .参数 长度, 整数型

.DLL命令 GetWindowTextW, 整数型, "user32.dll", "GetWindowTextW", 公开, 窗口_取标题W
    .参数 hwnd, 整数型
    .参数 标题名, 整数型
    .参数 长度, 整数型

.DLL命令 Thread32Next, 逻辑型, "Kernel32.dll", "Thread32Next", 公开, _线程取第一个
    .参数 快照句柄, 整数型
    .参数 线程入口结构, <?未知本地类型?>

.DLL命令 SHGetSpecialFolderPathA, 逻辑型, "shell32.dll", "SHGetSpecialFolderPathA", 公开, 取系统目录
    .参数 hwndOwner, 整数型
    .参数 lpszPath, 文本型
    .参数 nFolder, 整数型
    .参数 fCreate, 逻辑型

.DLL命令 GetTempPathA, 整数型, "kernel32.dll", "GetTempPathA", 公开, 取临时目录
    .参数 目录长度, 整数型
    .参数 临时目录, 文本型

.DLL命令 GetSystemDirectoryA, 整数型, "kernel32.dll", "GetSystemDirectoryA", 公开, 目录_取system32目录  成功返回system32目录的全路径
    .参数 缓冲区, 文本型
    .参数 缓冲区长度, 整数型

.DLL命令 GetWindowsDirectoryA, 整数型, "kernel32.dll", "GetWindowsDirectoryA", 公开, 目录_取Windows目录  成功返回Windows目录的全路径
    .参数 缓冲区, 文本型
    .参数 尺寸, 整数型

.DLL命令 PathMakeSystemFolderA, 整数型, "shlwapi.dll", "PathMakeSystemFolderA", 公开, 设置目录的系统属性
    .参数 目录, 文本型, , pszPath

.DLL命令 PathIsSystemFolderA, 整数型, "shlwapi.dll", "PathIsSystemFolderA", 公开, 判断目录是否有系统属性
    .参数 目录, 文本型, , pszPath
    .参数 属性标志, 整数型, 传址, dwAttrb

.DLL命令 PathUnmakeSystemFolderA, 整数型, "shlwapi.dll", "PathUnmakeSystemFolderA", 公开, 取消目录的系统属性
    .参数 目录, 文本型, , pszPath

.DLL命令 PathIsDirectoryEmptyA, 逻辑型, "shlwapi.dll", "PathIsDirectoryEmptyA", 公开, 目录_是否为空
    .参数 目录路径, 文本型

.DLL命令 InternetGetCookieExA, 整数型, "wininet.dll", "InternetGetCookieExA", 公开
    .参数 lpszURL, 文本型
    .参数 lpszCookieName, 文本型
    .参数 lpszCookieData, 文本型
    .参数 lpdwSize, 整数型, 传址
    .参数 dwFlags, 整数型
    .参数 lpReserved, 整数型

.DLL命令 InternetGetCookieA, 逻辑型, "wininet.dll", "InternetGetCookieA", 公开, 读取COOKIE
    .参数 域名, 文本型
    .参数 名称, 文本型
    .参数 内容, 文本型, 传址
    .参数 尺寸, 整数型, 传址

.DLL命令 InternetSetCookieA, 逻辑型, "wininet.dll", "InternetSetCookieA", 公开, 设置COOKIE
    .参数 域名, 文本型, 传址
    .参数 名称, 文本型, 传址
    .参数 内容, 文本型, 传址

.DLL命令 ChooseColorA, 整数型, "comdlg32.dll", "ChooseColorA", 公开, 打开颜色对话框
    .参数 pChoosecolor, 精易_颜色对话框, 传址

.DLL命令 PrintWindow, 逻辑型, "User32.dll", "PrintWindow", 公开, 打印窗口
    .参数 hwnd, 整数型
    .参数 hdcBlt, 整数型
    .参数 nFlags, 整数型

.DLL命令 OpenProcessToken, 逻辑型, "advapi32.dll", "OpenProcessToken", 公开, 打开过程令牌对象OpenProcessToken
    .参数 ProcessHandle, 整数型, , 进程句柄
    .参数 DesiredAccess, 整数型, , 权限
    .参数 TokenHandle, 整数型, 传址, 令牌句柄

.DLL命令 ObjectFromLresult, 整数型, "OLEACC.DLL", "ObjectFromLresult", 公开
    .参数 lResult, 整数型
    .参数 riid, 字节集
    .参数 wParam, 整数型
    .参数 ppvObject, 对象

.DLL命令 SendMessageTimeoutA, 整数型, "user32.dll", "SendMessageTimeoutA", 公开, _同步发送消息  向窗口发送一条消息。如窗口位于不同的线程中，则利用这个函数可以指定一个超时值，以便在另一个进程挂起的时候防止调用进程也永远挂起　成功时返回TRUE，失败时返回FALSE。会设置GetLastError
    .参数 hwnd, 整数型, , 要接收消息的一个窗口的句柄
    .参数 MSG, 整数型, , 消息的标识符
    .参数 wParam, 整数型, , 由消息决定
    .参数 lParam, 整数型, , 由消息决定
    .参数 fuFlags, 整数型, , 下述常数的一个或多个;SMTO_ABORTIFHUNG：如目标进程挂起，则函数立即返回;SMTO_BLOCK：除非函数返回，否则调用线程不能处理消息;SMTO_NORMAL：允许调用线程处理消息，同时保持函数继续执行
    .参数 uTimeout, 整数型, , 超时值，采用毫秒为单位
    .参数 lpdwsult, 整数型, 传址, 用于装载函数结果的一个变量;

.DLL命令 RegisterWindowMessageA, 整数型, "user32.dll", "RegisterWindowMessageA", 公开, _获取消息编号  获取分配给一个字串标识符的消息编号　&C000 到 &FFFF之间的一个消息编号。零意味着出错
    .参数 消息名称, 文本型, , 注册消息的名字;  

.DLL命令 RegisterHotKey, 逻辑型, "user32.dll", "RegisterHotKey", 公开, 热键注册
    .参数 hWnd, 整数型
    .参数 id, 整数型
    .参数 fsModifoers, 整数型
    .参数 vk, 整数型

.DLL命令 UnregisterHotKey, 逻辑型, "user32.dll", "UnregisterHotKey", 公开, 撤消热键钩子
    .参数 hWnd, 整数型
    .参数 id, 整数型

.DLL命令 OpenFileMappingA, 整数型, "kernel32.dll", "OpenFileMappingA", 公开, 打开一个现成的文件映射对象　指定文件映射对象的句柄。零表示出错。会设置GetLastError
    .参数 常数, 整数型, , 带有前缀FILE_MAP_???的一个常数。参考MapViewOfFile函数的dwDesiredAccess参数的说明
    .参数 进程继承, 整数型, , 如这个函数返回的句柄能由当前进程启动的新进程继承，则这个参数为TRUE
    .参数 文件映射对象名称, 文本型, , 指定要打开的文件映射对象名称;

.DLL命令 UnmapViewOfFile, 整数型, "kernel32.dll", "UnmapViewOfFile", 公开, _取消文件映射对象 在当前应用程序的内存地址空间对一个文件映射对象的映射
    .参数 lpBaseAddress, 整数型

.DLL命令 VirtualFreeEx, 整数型, "kernel32.dll", "VirtualFreeEx", 公开, 销毁外部指针
    .参数 hProcess, 整数型
    .参数 lpAddress, 整数型
    .参数 dwSize, 整数型
    .参数 flAllocationType, 整数型

.DLL命令 GetCurrentProcess, 整数型, "kernel32.dll", "GetCurrentProcess", 公开, 取当前进程伪句柄

.DLL命令 CreateThread, 整数型, "kernel32.dll", "CreateThread", 公开, 线程_启动
    .参数 lpThreadAttributes, 整数型
    .参数 dwStackSize, 整数型
    .参数 lpStartAddress, 整数型
    .参数 lpParameter, 整数型
    .参数 dwCreationFlags, 整数型, , 控制线程创建的标志。如果指定了CREATE_SUSPENDED标志，是创建线程处于暂停状态，并不会运行，直到ResumeThread函数被调用。如果这个值是零，线程创建后立即运行
    .参数 lpThreadId, 整数型

.DLL命令 GetUrlCacheEntryInfo, 整数型, "wininet.dll", "GetUrlCacheEntryInfoA", 公开
    .参数 lpszUrlName, 文本型, , lpszUrlSearchPattern
    .参数 第一个Url缓存入口信息, 整数型, , lpFirstCacheEntryInfo
    .参数 第一个Url缓存入口信息大小, 整数型, 传址, lpdwFirstCacheEntryInfoBufferSize

.DLL命令 PathAppend, 逻辑型, "shlwapi.dll", "PathAppendA", 公开, 合并路径
    .参数 pszPath, 字节集, 传址
    .参数 pszMore, 字节集

.DLL命令 ImmGetDescriptionA, 整数型, "imm32.dll", "ImmGetDescriptionA", 公开, _输入法取名称
    .参数 布局, 整数型
    .参数 布局名称, 文本型
    .参数 名称长度, 整数型

.DLL命令 ImmIsIME, 整数型, "imm32.dll", "ImmIsIME", 公开, _输入法判断中文键盘布局
    .参数 hkl, 整数型

.DLL命令 DeleteDC, 整数型, "gdi32.dll", "DeleteDC", 公开
    .参数 hdc, 整数型

.DLL命令 GetKeyboardLayout, 整数型, "user32.dll", "GetKeyboardLayout", 公开, _输入法取当前的序号
    .参数 布局索引, 整数型

.DLL命令 GetLogicalDriveStringsA, 整数型, "kernel32.dll", "GetLogicalDriveStringsA", 公开, _系统取所有磁盘盘符 获取一个字串，其中包含了当前所有逻辑驱动器的根驱动器路径  装载到lpBuffer的字符数量（排除空中止字符）。如缓冲区的长度不够，不能容下路径，则返回值就变成要求的缓冲区大小。零表示失败。会设置GetLastError
    .参数 缓冲器长度, 整数型, , lpBuffer字串的长度
    .参数 缓冲区, 字节集, , 用于装载逻辑驱动器名称的字串。每个名字都用一个NULL字符分隔，在最后一个名字后面用两个NULL表示中止（空中止）;

.DLL命令 GetDiskFreeSpaceExA, 逻辑型, "kernel32.dll", "GetDiskFreeSpaceExA", 公开, 系统_取磁盘大小信息
    .参数 根路径名称, 文本型, , lpRootPathName
    .参数 剩余空间, 长整数型, 传址, lpFreeBytesAvailableToCaller
    .参数 总大小, 长整数型, 传址, lpTotalNumberOfBytes
    .参数 总剩余空间, 长整数型, 传址, lpTotalNumberOfFreeBytes

.DLL命令 GetDriveTypeA, 整数型, "kernel32.dll", "GetDriveTypeA", 公开, _系统光驱查询
    .参数 nDrive, 文本型

.DLL命令 LockWorkStation, , "user32.dll", "LockWorkStation", 公开, 切换系统用户

.DLL命令 SetSuspendState, 整数型, "Powrprof.dll", "SetSuspendState", 公开, 系统进入待机状态
    .参数 冬眠, 整数型, , Hibernate
    .参数 强制, 整数型, , ForceCritical
    .参数 不激发事件, 整数型, , DisableWakeEvent

.DLL命令 ExitWindowsEx, 整数型, "user32.dll", "ExitWindowsEx", 公开, 关闭系统, 退出windows，并用特定的选项重新启动
    .参数 uFlags, 整数型, , 指定一个或多个标志的组合
    .参数 dwReason, 整数型, , 保留，设为零

.DLL命令 SHEmptyRecycleBinA, 整数型, "shell32.dll", "SHEmptyRecycleBinA", 公开, 系统_清空回收站, SHEmptyRecycleBin
    .参数 hwnd, 整数型
    .参数 pszRootPath, 整数型
    .参数 dwFlags, 整数型

.DLL命令 SHFormatDrive, 逻辑型, "shell32.dll", "SHFormatDrive", 公开, _格式化软盘
    .参数 hwnd, 整数型, , hwndOwner
    .参数 驱动器, 整数型, , iDrive
    .参数 容量, 整数型, , iCapacity
    .参数 格式化类型, 整数型, , iFormatType

.DLL命令 SystemParametersInfoA, 逻辑型, "user32.dll", "SystemParametersInfoA", 公开, _系统设置桌面壁纸
    .参数 uiAction, 整数型
    .参数 uiParam, 整数型
    .参数 pvParam, 整数型
    .参数 fWinlni, 短整数型

.DLL命令 GetUserNameA, 整数型, "advapi32.dll", "GetUserNameA", 公开, 取出当前的用户名,TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同用户名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回用户名的实际长度载入

.DLL命令 waveOutGetVolume, 整数型, "winmm.dll", "waveOutGetVolume", 公开
    .参数 设备, 整数型
    .参数 音量值, 整数型, 传址

.DLL命令 waveOutSetVolume, 整数型, "winmm.dll", "waveOutSetVolume", 公开, _系统置音量
    .参数 设备, 整数型
    .参数 音量值, 整数型

.DLL命令 ChangeDisplaySettingsA, 整数型, "user32.dll", "ChangeDisplaySettingsA", 公开, _系统置分辨率2
    .参数 lpDevMode, 短整数型, 传址
    .参数 dwFlags, 整数型

.DLL命令 GetComputerNameA, 整数型, "kernel32.dll", "GetComputerNameA", 公开, _系统取计算机名 取出当前完整的计算机名称，TRUE（非零）表示成功，否则返回零。
    .参数 字串缓冲区, 文本型, , lpBuffer，随同计算机名载入的字串缓冲区
    .参数 缓冲区长度, 整数型, 传址, nSize，缓冲区的长度。这个变量随同返回计算机名的实际长度载入

.DLL命令 EnumDisplaySettingsA, 整数型, "user32.dll", "EnumDisplaySettingsA", 公开, _系统置分辨率1
    .参数 lpszDeviceName, 整数型
    .参数 iModeNum, 整数型
    .参数 lpDevMode, 短整数型, 传址

.DLL命令 SHAppBarMessage, 整数型, "shell32.dll", "SHAppBarMessage", 公开, _系统取任务栏高度
    .参数 dwMessage, 整数型
    .参数 pData, <?未知本地类型?>

.DLL命令 GetDateFormatA, 整数型, "kernel32.dll", "GetDateFormatA", 公开, 针对指定的“当地”格式，对一个系统日期进行格式化  格式化过后的字串的长度。
    .参数 地方ID, 整数型, , Locale，用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 标志, 整数型, , dwFlags，如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数——即使它们已由用户取代。
    .参数 日期结构, 精易_时间, , lpDate，包含了一个系统日期的结构
    .参数 格式化, 文本型, , lpFormat，String，可设为NULL，使用特定于不同地方的值（用vbNullString传递一个NULL）。否则包含一个日期格式字串。
    .参数 缓冲区文本, 文本型, , lpDateStr，指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 缓冲区文本长度, 整数型, , cchDate，缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 SystemTimeToVariantTime, 整数型, "oleaut32.dll", "SystemTimeToVariantTime", 公开, _系统时间变时间
    .参数 LPSYSTEMTIME, 精易_时间, 传址
    .参数 double, 日期时间型, 传址

.DLL命令 GetTimeFormatA, 整数型, "kernel32.dll", "GetTimeFormatA", 公开, _系统置时间进行格式化 针对指定的“当地”格式，对一个系统时间进行格式化。
    .参数 地方ID, 整数型, , Locale，用于决定格式的地方ID。lpFormat参数中指定的任何信息（倘若不是NULL）都优先于特定于地方的信息
    .参数 标志, 整数型, , dwFlags，如指定了lpFormat，那么该参数应该为零。否则，可设为LOCALE_NOUSEROVERRIDE，强制使用系统地方参数
    .参数 时间结构, 精易_时间, , lpDate，SYSTEMTIME，用于包容系统时间的一个结构
    .参数 格式化, 文本型, , lpFormat，String，可设为NULL，使用特定于不同地方的值（用vbNullString传递一个NULL）。
    .参数 缓冲区文本, 文本型, , lpDateStr，指定一个缓冲区，用于容纳格式化过后的字串。注意事先对字串进行初始化
    .参数 缓冲区文本长度, 整数型, , cchDate，缓冲区的长度。如为零，表示函数会返回需要缓冲区的大小;

.DLL命令 GetInputState, 整数型, "user32.dll", "GetInputState", 公开, 用法,如果真(我的处理事件()≠0),处理事件()    比系统自带的"处理事件"比3倍以上

.DLL命令 EnumThreadWindows, 整数型, "user32.dll", "EnumThreadWindows", 公开, _窗口枚举任务 枚举与指定任务相关的窗口　非零表示成功，零表示失败
    .参数 线程标识符, 整数型, , 某线程的标识符，它的窗口将被枚举
    .参数 函数指针, 子程序指针, , 指向一个函数的指针，要求为每个子窗口都调用这个函数。用AddressOf运算符获得函数在标准模式下的地址
    .参数 自定义数值, 整数型, , 在枚举期间，传递给dwcbkd32d.ocx定制控件之EnumWindows事件的值。这个值的含义是由程序员规定的  

.DLL命令 CreateRoundRectRgn, 整数型, "gdi32.dll", "CreateRoundRectRgn", 公开, 创建一个圆角矩形，该矩形由X1，Y1-X2，Y2确定，并由X3，Y3确定的椭圆描述圆角弧度，不用时一定要用DeleteObject函数删除该区域用该函数创建的区域与用RoundRect API函数画的圆角矩形不完全相同，因为本矩形的右边和下边不包括在区域之内
    .参数 左上横坐标, 整数型, , X1，矩形左上角横坐标
    .参数 左上纵坐标, 整数型, , Y1，矩形左上角纵坐标
    .参数 右下横坐标, 整数型, , X2，矩形右下角横坐标
    .参数 右下纵坐标, 整数型, , Y2，矩形右下角纵坐标
    .参数 圆角椭圆的宽, 整数型, , X3，圆角椭圆的宽，其范围从0（没有圆角）到矩形宽（全圆）
    .参数 圆角椭圆的高, 整数型, , Y3，圆角椭圆的高，其范围从0（没有圆角）到矩形高（全圆）

.DLL命令 ClientToScreen, 整数型, "user32.dll", "ClientToScreen", 公开, _窗口取区域位置 非零表示成功，零表示失败
    .参数 hwnd, 整数型, , hwnd，要取出区域坐标的窗口句柄
    .参数 位置变量, 精易_坐标, , lpPoint，参见相关帮助

.DLL命令 SetFocus, 逻辑型, "user32.dll", "SetFocus", 公开, 窗口_置后台焦点 将输入焦点设到指定的窗口。如有必要，会激活窗口  (返回前一个拥有焦点的窗口的句柄)
    .参数 hwnd, 整数型, , 准备接收焦点的窗口的句柄

.DLL命令 SetForegroundWindow, 逻辑型, "user32.dll", "SetForegroundWindow", 公开, 窗口_置焦点 将窗口设为系统的前台窗口。这个函数可用于改变用户目前正在操作的应用程序
    .参数 句柄, 整数型

.DLL命令 ShowCursor, , "user32.dll", "ShowCursor", 公开, 鼠标_显示隐藏   控制鼠标指针的可视性(返回值:显示计数（参考注解）)
    .参数 bShow, 逻辑型, , （非零）显示指针，零 隐藏

.DLL命令 ClipCursor, , "user32.dll", "ClipCursor", 公开, 鼠标限制
    .参数 区域, 精易_矩形

.DLL命令 LoadCursor, 整数型, "user32.dll", "LoadCursorA", 公开, 从指定的模块或应用程序实例中载入一个鼠标指针。LoadCursorBynum是LoadCursor函数的类型安全声明　执行成功则返回已载入的指针的句柄；零表示失败。在Windows ;    95 和Win16环境中，这个函数只能载入标准尺寸的图标
    .参数 实例句柄, 整数型, , 一个DLL的模块句柄；或者一个实例句柄，指定包含了鼠标指针的可执行程序
    .参数 鼠标指针标识, 整数型, , 作为一个字串，指定欲载入的指针资源。作为一个长整数值，指定欲载入的资源ID；或者设置一个常数，代表某幅固有系统指针。如装载的是一个固有系统指针，注意hInstance参数应设为零。在api32.txt文件中以前缀IDC_ 作为标志;  

.DLL命令 SetCursor, 整数型, "user32.dll", "SetCursor", 公开, 将指定的鼠标指针设为当前指针　前一个指针的值
    .参数 指针句柄, 整数型, , 要设为当前指针的一个指针的句柄。如设为零，表示不显示任何指针;  

.DLL命令 GetDoubleClickTime, 整数型, "user32.dll", "GetDoubleClickTime", 公开, 鼠标_取双击间隔时间

.DLL命令 SetCursorPos, , "user32.dll", "SetCursorPos", 公开, 鼠标_置位置 
    .参数 横坐标, 整数型
    .参数 纵坐标, 整数型

.DLL命令 SetClassLongA, 整数型, "user32.dll", "SetClassLongA", 公开
    .参数 hwnd, 整数型
    .参数 nIndex, 整数型
    .参数 dwNewLong, 整数型, , 类信息的新值

.DLL命令 LoadCursorFromFileA, 整数型, "user32.dll", "LoadCursorFromFileA", 公开, 创建一个鼠标指针
    .参数 lpFileName, 文本型, , 包含指针的那个文件的名字

.DLL命令 SetCapture, 整数型, "user32.dll", "SetCapture", 公开, 鼠标捕获
    .参数 hwnd, 整数型

.DLL命令 ReleaseCapture, 逻辑型, "user32.dll", "ReleaseCapture", 公开, 鼠标释放

.DLL命令 mouse_event, , "user32.dll", "mouse_event", 公开, 鼠标模拟
    .参数 标志组合, 整数型, , 2鼠标左键按住不放；6鼠标左键单击；24鼠标右键单击；
    .参数 水平方向, 整数型, , dx，参见相关帮助
    .参数 垂直方向, 整数型, , dy，参见相关帮助
    .参数 数据信息, 整数型, , cButtons，未使用
    .参数 扩展数据信息, 整数型, , dwExtraInfo，通常未用的一个值

.DLL命令 GetClipboardOwner, 整数型, "user32.dll", "GetClipboardOwner", 公开, _剪辑板取数据权窗口句柄 返回复制该数据的窗口句柄；如：一段文字是在记事本复制的，则返回记事本的窗口句柄

.DLL命令 GetClipboardData, 整数型, "user32.dll", "GetClipboardData", 公开, 剪辑板取数据句柄
    .参数 wFormat, 整数型

.DLL命令 CloseClipboard, 整数型, "user32.dll", "CloseClipboard", 公开, 剪辑板关闭

.DLL命令 SetClipboardData, 整数型, "user32.dll", "SetClipboardData", 公开, 剪辑板置数据
    .参数 uFormat, 整数型
    .参数 hMem, 整数型

.DLL命令 GetDIBits3, 整数型, "gdi32.dll", "GetDIBits", 公开, gdi32.dll将来自一幅位图的二进制位复制到一幅与设备无关的位图里  非零表示成功，零表示失败。在Windows 95中，返回值是返回的扫描线数量
    .参数 设备场景句柄, 整数型, , aHDC，定义了与设备有关位图hBitmap的配置信息的一个设备场景的句柄
    .参数 源位图句柄, 整数型, , hBitmap，源位图的句柄。绝对不能将这幅位图选入设备场景
    .参数 扫描线初始编号, 整数型, , nStartScan，欲复制到DIB中的第一条扫描线的编号
    .参数 扫描线数量, 整数型, , nNumScans，欲复制的扫描线数量
    .参数 缓冲区指针, 字节型, 传址, lpBits，指向一个缓冲区的指针。这个缓冲区将用于装载采用DIB格式的信息，但不取回数据（用ByVal传递零值）
    .参数 位图结构, <?未知本地类型?>, , lpBI，BITMAPINFO，对lpBits DIB的格式及颜色进行说明的一个结构。在BITMAPINFOHEADER结构中，从biSize到biCompression之间的所有字段都必须初始化
    .参数 常量标志, 整数型, , wUsage，下述常数之一：;DIB_PAL_COLORS：在颜色表中装载一个16位所以数组，它们与当前选定的调色板有关;DIB_RGB_COLORS：在颜色表中装载RGB颜色;

.DLL命令 SetPixelV, 整数型, "gdi32.dll", "SetPixelV", 公开, 置场景颜色_在指定的设备场景中设置一个像素的RGB值
    .参数 hdc, 整数型
    .参数 x, 整数型
    .参数 y, 整数型
    .参数 crColor, 整数型, , 指定像素的新RGB颜色值

.DLL命令 DrawIconEx, 整数型, "user32.dll", "DrawIconEx", 公开, 描绘一个图标或鼠标指针
    .参数 hdc, 整数型
    .参数 xLeft, 整数型
    .参数 yTop, 整数型
    .参数 hIcon, 整数型
    .参数 cxWidth, 整数型
    .参数 cyWidth, 整数型
    .参数 istepIfAniCur, 整数型
    .参数 hbrFlickerFreeDraw, 整数型
    .参数 diFlags, 整数型

.DLL命令 EmptyClipboard, 逻辑型, "user32.dll", "EmptyClipboard", 公开, 剪辑板清空

.DLL命令 GetObjectA, 整数型, "gdi32.dll", "GetObjectA", 公开, _取对象属性
    .参数 hgdiobj, 整数型
    .参数 cbBuffer, 整数型
    .参数 lpvObject, <?未知本地类型?>

.DLL命令 GlobalLock, 整数型, "kernel32.dll", "GlobalLock", 公开, 锁定内存对象并返回一个指针
    .参数 hMem, 整数型

.DLL命令 GlobalUnlock, 整数型, "kernel32.dll", "GlobalUnlock", 公开, 开锁全局内存块
    .参数 hMem, 整数型

.DLL命令 GlobalAlloc, 整数型, "kernel32.dll", "GlobalAlloc", 公开, 在堆中分配内存
    .参数 wFlags, 整数型
    .参数 dwBytes, 整数型

.DLL命令 IsClipboardFormatAvailable, 整数型, "user32.dll", "IsClipboardFormatAvailable", 公开, _剪贴板格式是可用
    .参数 wFormat, 整数型

.DLL命令 RegisterClipboardFormatA, 整数型, "user32.dll", "RegisterClipboardFormatA", 公开, _剪辑板注册格式
    .参数 lpString, 文本型

.DLL命令 RtlMoveMemory_字节型_数组, , "kernel32.dll", "RtlMoveMemory", 公开, 复制内存数据_MIB_IPFORWARDROW参数
    .参数 Destination, 字节型, 数组, 目标地址
    .参数 Source, 字节型, 数组, 要复制的数据MIB_IPFORWARDROW
    .参数 Length, 整数型, , 长度

.DLL命令 RtlMoveMemory_字节型, , "kernel32.dll", "RtlMoveMemory", 公开, 复制内存数据_MIB_IPFORWARDROW参数
    .参数 Destination, 字节型, 传址, 目标地址
    .参数 Source, 字节型, 传址, 要复制的数据MIB_IPFORWARDROW
    .参数 Length, 整数型, , 长度

.DLL命令 RtlMoveMemory_文本型, , "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 整数型
    .参数 Source, 文本型
    .参数 Length, 整数型

.DLL命令 RtlMoveMemory_剪贴板_置文件, , "kernel32.dll", "RtlMoveMemory", 公开, _剪贴板置文件
    .参数 pDest, 整数型
    .参数 pSrc, <?未知本地类型?>, 传址
    .参数 ByteLen, 整数型

.DLL命令 DragQueryFileA, 整数型, "shell32.dll", "DragQueryFileA", 公开, _拖动查询文件
    .参数 hDrop, 整数型
    .参数 iFile, 整数型
    .参数 lpszFile, 文本型
    .参数 cch, 整数型

.DLL命令 OpenClipboard, 整数型, "user32.dll", "OpenClipboard", 公开, 打开剪辑板
    .参数 句柄, 整数型

.DLL命令 keybd_event, 整数型, "user32.dll", "keybd_event", 公开, 键盘模拟
    .参数 键代码, 整数型, , bVk,欲模拟的虚拟键码
    .参数 键扫描码, 整数型, , bScan,键的OEM扫描码
    .参数 标志值, 整数型, , dwFlags,标志常数
    .参数 特定值, 整数型, , dwExtraInfo,通常不用的一个值

.DLL命令 SetLayeredWindowAttributes, 逻辑型, "user32.dll", "SetLayeredWindowAttributes", 公开, 窗口_置透明
    .参数 hwnd, 整数型, , 透明窗体的句柄
    .参数 crKey, 整数型, , 颜色值
    .参数 bAlpha, 字节型, , 透明度，取值范围是[0,255]
    .参数 dwFlags, 整数型, , 透明方式：LWA_ALPHA(2)时，crKey参数无效，bAlpha参数有效 || LWA_COLORKEY(1)时，bAlpha参数有效而窗体中的所有颜色为crKey的地方将变为透明

.DLL命令 SetWindowTextA, 逻辑型, "user32.dll", "SetWindowTextA", 公开, 窗口_置标题
    .参数 hwnd, 整数型
    .参数 窗口标题, 文本型

.DLL命令 SetWindowTextW, 逻辑型, "user32.dll", "SetWindowTextW", 公开, 改变指定窗口的标题栏的文本内容（如果窗口有标题栏）。如果指定窗口是一个控件，则改变控件的文本内容。然而，SetWindowText函数不改变其他应用程序中的控件的文本内容。
    .参数 hWnd, 整数型, , 要改变文本内容的窗口或控件的句柄。
    .参数 lpString, 字节集, , 指向一个空结束的字符串的指针，该字符串将作为窗口或控件的新文本。(注意：易语言BUG，不能直接用字节集常量)

.DLL命令 WindowFromPoint, 整数型, "user32.dll", "WindowFromPoint", 公开, 窗口_取鼠标处窗口句柄 返回包含了指定点的窗口的句柄。忽略屏蔽、隐藏以及透明窗口  包含了指定点的窗口的句柄。如指定的点处没有窗口存在，则返回零
    .参数 横坐标, 整数型
    .参数 纵坐标, 整数型

.DLL命令 ShowScrollBar, 逻辑型, "user32.dll", "ShowScrollBar", 公开, 滚动条_显示隐藏 窗口_控件显示隐藏, ShowScrollBar
    .参数 hwnd, 整数型, , hwnd
    .参数 滚动条标志, 整数型, , wBar
    .参数 显示标志, 逻辑型, , bShow

.DLL命令 SetTimer, 整数型, "user32.dll", "SetTimer", 公开, 用指定的超时值创建或替换一个定时器。如果函数成功并且hWnd参数为NULL，则返回值为标识新定时器的整数，应用程序可以将此值传递给KillTimer函数以销毁定时器。如果函数成功并且hWnd参数不为NULL，则返回值为非零整数，应用程序可以将nIDEvent参数的值传递给KillTimer函数以销毁定时器。如果函数无法创建定时器，则返回值为零。要获取扩展的错误信息，请调用GetLastError。
    .参数 hWnd, 整数型, , 与定时器关联的窗口句柄。如果将为 NULL 的 hWnd 与现有定时器的 nIDEvent 一起传递，该定时器将被替换的方式与现有的非 NULL 的 hWnd 定时器相同。
    .参数 nIDEvent, 整数型, , 非零的定时器ID。如果 hWnd 参数为 NULL，并且 nIDEvent 与现有定时器不匹配，则会忽略该参数并生成新的定时器ID。如果 hWnd 参数非 NULL，并且 hWnd 指定的窗口已具有具有值为 nIDEvent 的定时器，则现有定时器将被新定时器替换。当 SetTimer 替换定时器时，定时器将重置。因此，将在当前超时值过去之后发送一条消息，但先前设置的超时值将被忽略。如果该调用不是要替换现有的定时器，则如果 hWnd 为 NULL，则 nIDEvent 应为 0。
    .参数 uElapse, 整数型, , 超时值，以毫秒为单位。如果 uElapse 小于 USER_TIMER_MINIMUM（10），则将超时设置为 USER_TIMER_MINIMUM。如果 uElapse 大于 USER_TIMER_MAXIMUM（2147483647），则将超时设置为 USER_TIMER_MAXIMUM。
    .参数 lpTimerFunc, 整数型, , 当超时值过去时，指向要通知的函数指针。有关该函数的更多信息，请参见 TimerProc 。如果 lpTimerFunc 为 NULL，则系统将 WM_TIMER 消息发送到应用程序消息队列的 MSG 结构的 hwnd 成员包含 hWnd 参数的值。

.DLL命令 KillTimer, 逻辑型, "user32.dll", "KillTimer", 公开, 销毁指定的定时器。
    .参数 hWnd, 整数型, , 与指定定时器关联的窗口的句柄。此值必须与传递给创建定时器的SetTimer函数的hWnd值相同。
    .参数 uIDEvent, 整数型, , 要销毁的定时器。如果传递给SetTimer的窗口句柄有效，则此参数必须与传递给SetTimer的nIDEvent相同。如果应用程序调用SetTimer的hWnd设为NULL，这个参数必须由SetTimer返回的定时器ID。

.DLL命令 GetWindowDC, 整数型, "user32.dll", "GetWindowDC", 公开, 获取整个窗口（包括边框、滚动条、标题栏、菜单等）的设备场景  执行成功为窗口设备场景，失败则为0
    .参数 hwnd, 整数型, , 将获取其设备场景的窗口;

.DLL命令 CreatePen, 整数型, "gdi32.dll", "CreatePen", 公开, 用指定的样式、宽度和颜色创建一个画笔  如函数执行成功，就返回指向新画笔的一个句柄；否则返回零
    .参数 风格, 整数型, , 指定画笔样式，可以是下述常数之一;PS_SOLID：画笔画出的是实线;PS_DASH：画笔画出的是虚线（nWidth必须是1）;PS_DOT：画笔画出的是点线（nWidth必须是1）;PS_DASHDOT：画笔画出的是点划线（nWidth必须是1）;PS_DASHDOTDOT：画笔画出的是点-点-划线（nWidth必须是1）;PS_NULL：画笔不能画图;PS_INSIDEFRAME：画笔在由椭圆、矩形、圆角矩形、饼图以及弦等生成的封闭对象框中画图。如指定的准确RGB颜色不存在，就进行抖动处理
    .参数 宽度, 整数型, , 以逻辑单位表示的画笔的宽度
    .参数 颜色, 整数型, , 画笔的RGB颜色;

.DLL命令 GetStockObject, 整数型, "gdi32.dll", "GetStockObject", 公开, 取得一个固有对象的句柄（Stock）。这是可由任何应用程序使用的windows标准对象之一  指向指定对象的一个句柄。零表示出错
    .参数 类型, 整数型, , 下述表格中定义的任何常数之一BLACK_BRUSH黑色刷子DKGRAY_BRUSH黑灰色刷子GRAY_BRUSH灰色刷子HOLLOW_BRUSH凹刷子LTGRAY_BRUSH浅灰色刷子NULL_BRUSH空刷子WHITE_BRUSH白色刷子BLACK_PEN黑色画笔NULL_PEN空画笔WHITE_PEN白色画笔ANSI_FIXED_FONT采用windows（ANSI）字符集的等宽字体ANSI_VAR_FONT采用windows（ANSI）字符集的不等宽字体DEVICE_DEFAULT_FONT设备使用的默认字体（NT）DEFAULT_GUI_FONT用户界面的默认字体，包括菜单和对话框字体（Windows 95）OEM_FIXED_FONTOEM字符集的固有字体SYSTEM_FONT屏幕系统字体。这是用于菜单、对话框等等的默认不等宽字体SYSTEM_FIXED_FONT屏幕系统字体。这是用于菜单、对话框等等的默认等宽字体（在windows 3.0之前使用）DEFAULT_PALETTE默认调色板;

.DLL命令 SetROP2, 整数型, "gdi32.dll", "SetROP2", 公开, 设置指定设备场景的绘图模式。与vb的DrawMode属性完全一致　如执行成功，返回前一个绘图模式；零表示出错
    .参数 设备场景, 整数型
    .参数 光栅运算方式, 整数型

.DLL命令 Rectangle, 整数型, "gdi32.dll", "Rectangle", 公开, 画矩形 用当前选定的画笔描绘矩形，并用当前选定的刷子进行填充  非零表示成功，零表示失败。会设置GetLastError
    .参数 设备场景句柄, 整数型, , 设备场景的句柄
    .参数 左上角横坐标, 整数型, , 指定矩形左上角位置
    .参数 左上角纵坐标, 整数型, , 同上
    .参数 右下角横坐标, 整数型, , 指定矩形右下角位置
    .参数 右下角纵坐标, 整数型, , 同上;

.DLL命令 GetCurrentThread, 整数型, "kernel32.dll", "GetCurrentThread", 公开, 取当前线程句柄

.DLL命令 GetCurrentThreadId, 整数型, "kernel32.dll", "GetCurrentThreadId", 公开, 取当前线程ID

.DLL命令 CreateFontIndirectA, 整数型, "gdi32.dll", "CreateFontIndirectA", 公开, gdi32.dll用指定的属性创建一种逻辑字体　执行成功则返回逻辑字体句柄，零表示失败
    .参数 字体结构信息, LOGFONT, , LOGFONT，这个结构定义了逻辑字体请求的属性;  

.DLL命令 OpenThread, 整数型, "kernel32.dll", "OpenThread", 公开, 打开线程
    .参数 dwDesiredAccess, 整数型, , 2032639
    .参数 bInheritHandle, 整数型, , 0
    .参数 线程ID, 整数型, , 线程ID

.DLL命令 CreateDCA, 整数型, "gdi32.dll", "CreateDCA", 公开, _创建场景
    .参数 lpDriverName, 文本型
    .参数 lpDeviceName, 文本型
    .参数 lpOutput, 文本型
    .参数 lpInitData, 整数型

.DLL命令 lpRect, 整数型, "user32.dll", "IsRectEmpty", 公开, _矩形是否为空
    .参数 lpRect, 精易_矩形

.DLL命令 PatBlt, , "gdi32.dll", "PatBlt", 公开, _填充设备场景
    .参数 hdc, 整数型
    .参数 x, 整数型
    .参数 y, 整数型
    .参数 nWidth, 整数型
    .参数 nHeight, 整数型
    .参数 dwRop, 整数型

.DLL命令 GetDlgCtrlID, 整数型, "user32.dll", "GetDlgCtrlID", 公开
    .参数 hwnd, 整数型

.DLL命令 GetDlgItem, 整数型, "user32.dll", "GetDlgItem", 公开, 控件ID取窗口句柄
    .参数 父句柄, 整数型
    .参数 欲取句柄的控件ID, 整数型

.DLL命令 CoInitialize, , "ole32.dll", "CoInitialize", 公开, 加载COM
    .参数 pvReserved, 整数型, , 值为0

.DLL命令 CoUninitialize, , "ole32.dll", "CoUninitialize", 公开, 卸载COM

.DLL命令 WinExec, 整数型, "kernel32.dll", "WinExec", 公开, _服务
    .参数 lpCmdLine, 文本型
    .参数 nCmdShow, 整数型

.DLL命令 OpenSCManagerA, 整数型, "advapi32.dll", "OpenSCManagerA", 公开
    .参数 lpMachineName, 整数型
    .参数 lpDatabaseName, 整数型
    .参数 dwDesiredAccess, 整数型

.DLL命令 OpenService, 整数型, "Advapi32.dll", "OpenServiceA", 公开
    .参数 hSCManager, 整数型
    .参数 lpServiceName, 文本型
    .参数 dwDesiredAccess, 整数型

.DLL命令 ControlService, 逻辑型, "advapi32.dll", "ControlService", 公开
    .参数 hService, 整数型
    .参数 dwControl, 整数型
    .参数 lpServiceStatus, <?未知本地类型?>

.DLL命令 DeleteService, 逻辑型, "advapi32.dll", "DeleteService", 公开, ,
    .参数 hService, 整数型

.DLL命令 CloseServiceHandle, 整数型, "advapi32.dll", "CloseServiceHandle", 公开, ,
    .参数 hSCObject, 整数型

.DLL命令 StartService, 逻辑型, "advapi32.dll", "StartServiceA", 公开
    .参数 hService, 整数型
    .参数 dwNumServiceArgs, 整数型
    .参数 lpServiceArgVectors, 整数型

.DLL命令 QueryServiceStatus, 逻辑型, "advapi32.dll", "QueryServiceStatus", 公开, 4：启动　7：暂停　1：停止　0：找不到服务
    .参数 hService, 整数型
    .参数 lpServiceStatus, <?未知本地类型?>

.DLL命令 QueryServiceStatusEx, 整数型, "ADVAPI32.DLL", "QueryServiceStatusEx", 公开
    .参数 hService, 整数型
    .参数 InfoLevel, 整数型
    .参数 lpBuffer, 字节集
    .参数 cbBufSize, 整数型
    .参数 pcbBytesNeeded, 整数型, 传址

.DLL命令 ChangeServiceConfig, 逻辑型, "advapi32.dll", "ChangeServiceConfigA", 公开, 更改服务配置
    .参数 hService, 整数型
    .参数 dwServiceType, 整数型
    .参数 dwStartType, 整数型
    .参数 dwErrorControl, 整数型, , 误差控制
    .参数 lpBinaryPathName, 文本型, , 加载顺序组名称
    .参数 lpLoadOrderGroup, 文本型
    .参数 lpdwTagId, 整数型, , 标签标识
    .参数 lpDependencies, 文本型, , 依赖名称阵列
    .参数 lpServiceStartName, 文本型, , 帐户名称
    .参数 lpPassword, 文本型, , 帐户密码
    .参数 lpDisplayName, 文本型, , 显示名称

.DLL命令 CreateService, 整数型, "advapi32.dll", "CreateServiceA", 公开, 服务类
    .参数 hSCManager, 整数型
    .参数 lpServiceName, 文本型
    .参数 lpDisplayName, 文本型
    .参数 dwDesiredAccess, 整数型
    .参数 dwServiceType, 整数型
    .参数 dwStartType, 整数型
    .参数 dwErrorControl, 整数型
    .参数 lpBinaryPathName, 文本型
    .参数 lpLoadOrderGroup, 文本型
    .参数 lpdwTagId, 整数型
    .参数 lpDependencies, 文本型
    .参数 lpServiceStartName, 文本型
    .参数 lpPassword, 文本型

.DLL命令 QueryServiceConfig2, 逻辑型, "Advapi32.dll", "QueryServiceConfig2A", 公开
    .参数 hService, 整数型, , SC_HANDLE
    .参数 dwInfoLevel, 整数型
    .参数 lpBuffer, 整数型
    .参数 cbBufSize, 整数型
    .参数 pcbBytesNeeded, 整数型, 传址

.DLL命令 UnlockServiceDatabase, 整数型, "advapi32.dll", "UnlockServiceDatabase", 公开, 开锁数据库
    .参数 ScLock, 整数型

.DLL命令 QueryServiceConfig2A_字节, 逻辑型, "Advapi32.dll", "QueryServiceConfig2A", 公开
    .参数 hService, 整数型, , SC_HANDLE
    .参数 dwInfoLevel, 整数型
    .参数 lpBuffer, 字节集, 传址
    .参数 cbBufSize, 整数型
    .参数 pcbBytesNeeded, 整数型, 传址

.DLL命令 ZwQuerySystemInformation, 整数型, "ntdll.dll", "ZwQuerySystemInformation", 公开, _进程隐藏 ntdll.dll
    .参数 SystemInformationClass, 整数型, , 未知类型：SYSTEM_INFORMATION_CLASS。
    .参数 SystemInformation, 整数型, , any
    .参数 SystemInformationLength, 整数型
    .参数 ReturnLength, 整数型, 传址

.DLL命令 CreateRemoteThread, 整数型, "kernel32.dll", "CreateRemoteThread", 公开, 在另一进程中建立线索　
    .参数 hProcess, 整数型
    .参数 lpThreadAttributes, 整数型
    .参数 dwStackSize, 整数型
    .参数 lpStartAddress, 整数型
    .参数 lpParameter, 整数型
    .参数 dwCreationFlags, 整数型
    .参数 lpThreadId, 整数型

.DLL命令 GetExitCodeThread, 整数型, "kernel32.dll", "GetExitCodeThread", 公开, _取中止线程退出代码
    .参数 线程句柄, 整数型
    .参数 退出代码, 整数型, 传址

.DLL命令 InternetGetConnectedStateExA, 逻辑型, "wininet.dll", "InternetGetConnectedStateExA", 公开, _取网络连接状态
    .参数 标志, 整数型, 传址, lpdwFlags
    .参数 连接名称, 文本型, , lpszConnectionName
    .参数 名称长度, 整数型, , dwNameLen
    .参数 保留参数, 整数型, , dwReserved

.DLL命令 原子递增变量, 整数型, "kernel32.dll", "InterlockedIncrement", 公开, _递增变量值
    .参数 递增变量, 整数型, 传址

.DLL命令 原子递减变量, 整数型, "kernel32.dll", "InterlockedDecrement", 公开, _递减变量值
    .参数 递减的一个变量, 整数型, 传址

.DLL命令 DragFinish, 整数型, "shell32.dll", "DragFinish", 公开, 释放文件拖放 释放分配用于托动文件的内容
    .参数 hDrop, 整数型

.DLL命令 DragAcceptFiles, , "shell32.dll", "DragAcceptFiles", 公开, 注册拖放类 登记窗口是否接受托动文件的内容
    .参数 对象句柄, 整数型
    .参数 是否打开, 整数型

.DLL命令 RegCloseKey, 整数型, "advapi32.dll", "RegCloseKey", 公开, _注册表_关闭项 advapi32.dll关闭系统注册表中的一个项（或键）  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 要关闭的项;

.DLL命令 RegCreateKeyA, 整数型, "advapi32.dll", "RegCreateKeyA", 公开, _注册表_创建项 advapi32.dll在指定的项下创建一个新项。如指定的项已经存在，那么函数会打开现有的项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 要打开项的句柄，或者一个标准项名
    .参数 lpSubKey, 文本型, , 欲创建的新子项。可同时创建多个项，只需用反斜杠将它们分隔开即可。例如level1\level2\newkey
    .参数 phkResult, 整数型, 传址, 指定一个变量，用于装载新子项的句柄;

.DLL命令 RegQueryValueExA, 整数型, "advapi32.dll", "RegQueryValueExA", 公开, _注册表_取值获取一个项的设置值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 lpValueName, 文本型, , 要获取值的名字
    .参数 lpReserved, 整数型, , 未用，设为零
    .参数 lpType, 整数型, 传址, 用于装载取回数据类型的一个变量
    .参数 lpData, 字节集, 传址, 用于装载指定值的一个缓冲区
    .参数 lpcbData, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际装载到缓冲区的字节数;

.DLL命令 RegOpenCurrentUser, 整数型, "advapi32.dll", "RegOpenCurrentUser", 公开
    .参数 samDesired, 整数型
    .参数 phkResult, 整数型, 传址

.DLL命令 RegEnumValueA, 整数型, "advapi32.dll", "RegEnumValueA", 公开, _注册表_枚举值 零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 句柄, 整数型, , 一个已打开项的句柄，或者指定一个标准项名
    .参数 表项索引, 整数型, , 欲获取值的索引。注意第一个值的索引编号为零
    .参数 子键名, 文本型, , 用于装载位于指定索引处值名的一个缓冲区
    .参数 子键长度, 整数型, 传址, 用于装载lpValueName缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量
    .参数 lpReserved, 整数型, , 未用设为零
    .参数 键值类型, 整数型, 传址, 值的类型，用于装载值的类型代码的变量
    .参数 键值数据, 字节集, 传址, 用于装载值数据的一个缓冲区
    .参数 键值缓寸, 整数型, 传址, 用于装载lpData缓冲区长度的一个变量。一旦返回，它会设为实际载入缓冲区的字符数量

.DLL命令 RegEnumKeyA, 整数型, "advapi32.dll", "RegEnumKeyA", 公开, _注册表_枚举子项
    .参数 hKey, 整数型
    .参数 dwIndex, 整数型
    .参数 lpName, 文本型, 传址
    .参数 cbName, 整数型

.DLL命令 RegDeleteKeyA, 整数型, "advapi32.dll", "RegDeleteKeyA", 公开, _注册表_删除项删除现有项下方一个指定的子项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或者标准项名之一
    .参数 lpSubKey, 文本型, , 要删除项的名字。这个项的所有子项也会删除;

.DLL命令 RegOpenKeyA, 整数型, "advapi32.dll", "RegOpenKeyA", 公开, _注册表_打开项 打开一个现有的注册表项  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpSubKey, 文本型, , 要打开的项名
    .参数 phkResult, 整数型, 传址, 指定一个变量，用于装载（保存）打开注册表项的一个句柄;

.DLL命令 RegSetValueExA, 整数型, "advapi32.dll", "RegSetValueExA", 公开, _注册表_置值设置指定项的值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpValueName, 文本型, , 要设置值的名字
    .参数 Reserved, 整数型, , 未用，设为零
    .参数 dwType, 整数型, , 要设置的数量类型
    .参数 lpData, 字节集, , 包含数据的缓冲区中的第一个字节
    .参数 cbData, 整数型, , lpData缓冲区的长度;

.DLL命令 RegSetValueExA_数值, 整数型, "advapi32.dll", "RegSetValueExA", 公开, _注册表_置值_文本型 设置指定项的值  零（ERROR_SUCCESS）表示成功。其他任何值都代表一个错误代码
    .参数 hKey, 整数型, , 一个已打开项的句柄，或指定一个标准项名
    .参数 lpValueName, 文本型, , 要设置值的名字
    .参数 Reserved, 整数型, , 未用，设为零
    .参数 dwType, 整数型, , 要设置的数量类型
    .参数 lpData, 字节集, , 包含数据的缓冲区中的第一个字节
    .参数 cbData, 整数型, , lpData缓冲区的长度;

.DLL命令 RasDialA, 整数型, "rasapi32.dll", "RasDialA", 公开, _ADSL拨号
    .参数 lprasdialextensions, 整数型, , 拔号参数
    .参数 lpszPhonebook, 整数型, , 电话本名称,0
    .参数 lprasdialparamsa, <?未知本地类型?>, , 拔号参数
    .参数 dwNotifierType, 整数型, , 消息通知方式
    .参数 lpvNotifier, 整数型, , 消息处理回调子程序
    .参数 lphrasconn, 整数型, 传址, 返回的成功连接的连接句柄

.DLL命令 RasHangUpA, 整数型, "rasapi32.dll", "RasHangUpA", 公开, RasApi32.DLL挂断当前拔号连接 0表示成功
    .参数 hRasConn, 整数型, , 连接句柄

.DLL命令 RasGetEntryDialParams, 整数型, "rasapi32.dll", "RasGetEntryDialParamsA", 公开
    .参数 lpszPhoneBook, 文本型, 传址
    .参数 lpDialParams, <?未知本地类型?>, 传址, 未知类型：TRasDialParams。
    .参数 lpfPassword, 逻辑型, 传址

.DLL命令 GlobalSize_取连接信息用结构, 整数型, "kernel32.dll", "GlobalSize", 公开, kernel32.dll取结构尺寸
    .参数 结构, <?未知本地类型?>, 传址

.DLL命令 GetPrivateProfileInt, 整数型, "kernel32.dll", "GetPrivateProfileIntA", 公开, 读配置项数值
    .参数 小节名, 字节集
    .参数 项目名, 文本型
    .参数 默认返回值, 整数型
    .参数 文件名, 文本型, ,   

.DLL命令 ConvertSidToStringSid, 整数型, "ADVAPI32.DLL", "ConvertSidToStringSidW", 公开, 　
    .参数 Sid, 字节集, 传址
    .参数 StringSid, 整数型, 传址

.DLL命令 IsValidSid, 整数型, "advapi32.dll", "IsValidSid", 公开, 使SID有效　
    .参数 pSid, 整数型

.DLL命令 LookupAccountName, 整数型, "advapi32.dll", "LookupAccountNameA", 公开, 把帐户名转为SID　
    .参数 lpSystemName, 文本型, 传址
    .参数 lpAccountName, 文本型
    .参数 Sid, 字节集, 传址
    .参数 cbSid, 整数型, 传址
    .参数 ReferencedDomainName, 文本型
    .参数 cbReferencedDomainName, 整数型, 传址
    .参数 peUse, 整数型, 传址

.DLL命令 LsaOpenPolicy, 整数型, "ADVAPI32.DLL", "LsaOpenPolicy", 公开
    .参数 SystemName, 整数型, , 未知类型：PLSA_UNICODE_STRING。
    .参数 ObjectAttributes, <?未知本地类型?>, , 未知类型：PLSA_OBJECT_ATTRIBUTES。
    .参数 DesiredAccess, 整数型
    .参数 PolicyHandle, 整数型, 传址, 未知类型：PLongWord。

.DLL命令 RasEnumEntrie, 整数型, "rasapi32.dll", "RasEnumEntriesA", 公开
    .参数 reserved, 整数型
    .参数 lpszPhoneBook, 整数型
    .参数 entrynamesArray, <?未知本地类型?>, 传址, 未知类型：LPRasEntryNameA。
    .参数 lpcb, 整数型, 传址
    .参数 lpcEntries, 整数型, 传址

.DLL命令 RasEnumEntries, 整数型, "rasapi32.dll", "RasEnumEntriesA", 公开, rasapi32.dll 取连接信息结构,连接名称,数量等等
    .参数 lpStrNull, 整数型, , 保留字段,必须为NIL
    .参数 lpszphonebook, 整数型, , 电话本名称,在Win9X下无作用
    .参数 lprasetryname, <?未知本地类型?>, 传址 数组, RASENTRYNAME类型数组的指针
    .参数 lpcb, 整数型, 传址, 接收拨号连接名称的缓冲区的大小
    .参数 lpcentries, 整数型, 传址, 实际获得的拨号连接名称的数目

.DLL命令 InternetGetConnectedStateEx, 整数型, "wininet.dll", "InternetGetConnectedStateEx", 公开, _取连接状态 wininet.dll
    .参数 lpdwFlags, 整数型, 传址
    .参数 lpszConnectionName, 文本型, 传址
    .参数 dwNameLen, 整数型
    .参数 dwReserved, 整数型

.DLL命令 RasSetEntryPropertiesA, 整数型, "rasapi32.dll", "RasSetEntryPropertiesA", 公开, _创建新拨号连接 rasapi32.dll 0=建立成功,其他为失败
    .参数 lpszPhonebook, 整数型, , 电话本名称,0
    .参数 lpszEntry, 文本型, , 连接名称
    .参数 lpRasEntry, <?未知本地类型?>
    .参数 dwEntryInfoSize, 整数型
    .参数 lpbDeviceInfo, 整数型
    .参数 wDeviceInfoSize, 整数型

.DLL命令 RasSetCredentialsA, 整数型, "rasapi32.dll", "RasSetCredentialsA", 公开, _设置拨号连接 rasapi32.dll
    .参数 lpszPhonebook, 整数型, , 电话本名称,0
    .参数 lpszEntry, 文本型, , 连接名称
    .参数 lpCredentials, <?未知本地类型?>
    .参数 fClearCredentials, 整数型

.DLL命令 GetKeyState, 逻辑型, "user32.dll", "GetKeyState", 公开, _取键盘状态 针对已处理过的按键，在最近一次输入信息时，判断指定虚拟键的状态  如开关键打开，则位0设为1（开关键包括CapsLock， ;    NumLock，ScrollLock）；如某个键当时正处于按下状态，则位15为1；如已经抬起，则为0
    .参数 键代码, 整数型, , 欲测试的虚拟键键码。对字母、数字字符（A-Z、a-z、0-9），用它们实际的ASCII值;

.DLL命令 GetOpenFileNameA, 逻辑型, "Comdlg32.dll", "GetOpenFileNameA", 公开, _打开文件对话框
    .参数 结构, OPENFILENAME

.DLL命令 GetSaveFileNameA, 逻辑型, "Comdlg32.dll", "GetSaveFileNameA", 公开, _另存文件对话框
    .参数 结构, OPENFILENAME

.DLL命令 ExtractIconA, 整数型, "shell32.dll", "ExtractIconA", 公开, _图标取数量
    .参数 实例句柄, 整数型, , 可为0
    .参数 程序的全名, 文本型
    .参数 图标的索引, 整数型, , 欲获取的图标的索引。如果为-1，表示取得文件中的图标总数

.DLL命令 SHAutoComplete, , "Shlwapi.dll", "SHAutoComplete", 公开
    .参数 编辑框句柄, 整数型
    .参数 表示IE历史, 整数型

.DLL命令 GetShortPathNameA, 整数型, "kernel32.dll", "GetShortPathNameA", 公开, 取短文件名
    .参数 lpszLongPath, 文本型, 传址
    .参数 lpszShortPath, 文本型, 传址
    .参数 cchBuffer, 整数型

.DLL命令 GetLongPathNameA, 整数型, "kernel32.dll", "GetLongPathNameA", 公开, 取长文件名
    .参数 lpszShortPath, 文本型, 传址
    .参数 lpszLongPath, 文本型, 传址
    .参数 cchBuffer, 整数型

.DLL命令 GetAdaptersInfo, 整数型, "IPHlpApi.dll", "GetAdaptersInfo", 公开
    .参数 IpAdapterInfo, 整数型
    .参数 pOutBufLen, 整数型, 传址

.DLL命令 CopyMemory_ip_adapter_info, 整数型, "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, <?未知本地类型?>
    .参数 Source, 整数型
    .参数 Length, 整数型

.DLL命令 CopyMemory_ias, , "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, <?未知本地类型?>, 传址
    .参数 Source, <?未知本地类型?>
    .参数 Length, 整数型

.DLL命令 ImageList_Read, 整数型, "comctl32.dll", "ImageList_Read", 公开, 成功返回图片组句柄
    .参数 pstm, 整数型

.DLL命令 ImageList_Write, 逻辑型, "comctl32.dll", "ImageList_Write", 公开, 成功返回真,失败返回假
    .参数 图片组句柄, 整数型, , 图片组句柄
    .参数 pstm, 整数型

.DLL命令 ImageList_Replace, 整数型, "comctl32.dll", "ImageList_Replace", 公开
    .参数 图片组句柄, 整数型
    .参数 i, 整数型
    .参数 hbmImage, 整数型
    .参数 hbmMask, 整数型

.DLL命令 ImageList_ReplaceIcon, 整数型, "comctl32.dll", "ImageList_ReplaceIcon", 公开
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值
    .参数 位置, 整数型, , 索引从0开始
    .参数 图标句柄, 整数型

.DLL命令 ImageList_AddIcon, 整数型, "comctl32.dll", "ImageList_AddIcon", 公开, 添加图标到图片组
    .参数 图片组句柄, 整数型
    .参数 ico句柄, 整数型

.DLL命令 ImageList_Add, 整数型, "comctl32.dll", "ImageList_Add", 公开
    .参数 图标列表句柄, 整数型
    .参数 位图句柄, 整数型
    .参数 掩码位位图句柄, 整数型

.DLL命令 ImageList_SetBkColor, 逻辑型, "comctl32.dll", "ImageList_SetBkColor", 公开, 设置图片组背景颜色
    .参数 图片组句柄, 整数型
    .参数 欲设置的颜色, 整数型, , 其它选项可使用 CLR_开头的常量

.DLL命令 ImageList_GetBkColor, 整数型, "comctl32.dll", "ImageList_GetBkColor", 公开, 返回图片组背景颜色
    .参数 图片组句柄, 整数型

.DLL命令 ImageList_SetIconSize, 逻辑型, "comctl32.dll", "ImageList_SetIconSize", 公开, 设置图片组图标大小
    .参数 图片组句柄, 整数型, , 图片组句柄,ImageList_Create创建成功后的返回值
    .参数 宽度, 整数型, 传址
    .参数 高度, 整数型, 传址

.DLL命令 ImageList_SetImageCount, 逻辑型, "comctl32.dll", "ImageList_SetImageCount", 公开, 设置图片组图片数
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值
    .参数 欲设置的图片数, 整数型

.DLL命令 ImageList_GetImageCount, 整数型, "comctl32.dll", "ImageList_GetImageCount", 公开, 取图片组图片数
    .参数 图片组句柄, 整数型, , 图片组句柄,ImageList_Create创建成功后的返回值

.DLL命令 ImageList_GetIconSize, 逻辑型, "comctl32.dll", "ImageList_GetIconSize", 公开, 取图片组图标大小
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值
    .参数 宽度, 整数型, 传址
    .参数 高度, 整数型, 传址

.DLL命令 ImageList_Remove, 逻辑型, "comctl32.dll", "ImageList_Remove", 公开, 删除指定图片组图片
    .参数 图片组句柄, 整数型, , 图片组句柄,ImageList_Create创建成功后的返回值
    .参数 位置, 整数型, , 位置0为第一个,如果本参数设置为-1表示删除图片组所有图标

.DLL命令 ImageList_Create, 整数型, "comctl32.dll", "ImageList_Create", 公开, 创建图片组,返回图片组句柄
    .参数 宽度, 整数型
    .参数 高度, 整数型
    .参数 位深, 整数型
    .参数 初始数量, 整数型
    .参数 是否手动销毁, 逻辑型

.DLL命令 ImageList_Destroy, 整数型, "comctl32.dll", "ImageList_Destroy", 公开, 销毁图片组
    .参数 图片组句柄, 整数型, , ImageList_Create创建成功后的返回值

.DLL命令 SetWindowLongA, 整数型, "user32.dll", "SetWindowLongA", 公开, 在窗口结构中为指定的窗口设置信息  指定数据的前一个值
    .参数 hwnd, 整数型, , 句柄
    .参数 nIndex, 整数型, , -16=样式，-20=扩展样式
    .参数 dwNewLong, 整数型, , 新样式

.DLL命令 SetWindowLongW, 整数型, "user32.dll", "SetWindowLongW", 公开
    .参数 hWnd, 整数型
    .参数 nIndex, 整数型
    .参数 dwNewLong, 整数型

.DLL命令 GetCommandLineA, 文本型, "kernel32.dll", "GetCommandLineA", 公开, 取命令行

.DLL命令 LsaRetrievePrivateData, 整数型, "ADVAPI32.DLL", "LsaRetrievePrivateData", 公开
    .参数 LSA_HANDLE, 整数型
    .参数 KeyName, <?未知本地类型?>, , 未知类型：PLSA_UNICODE_STRING。
    .参数 PrivateData, 整数型, 传址, 未知类型：PLSA_UNICODE_STRING。

.DLL命令 GetVersionEx, 逻辑型, "kernel32.dll", "GetVersionExA", 公开, 在一个OSVERSIONINFO结构中载入与平台和操作系统有关的版本信息  非零表示成功，零表示失败
    .参数 版本, OSVERSIONINFOEX, , OSVERSIONINFO，用于装载版本信息的结构。在正式调用函数之前，必须先将这个结构的dwOSVersionInfoSize字段设为结构的大小（148）;

.DLL命令 GetVersion, 整数型, "kernel32.dll", "GetVersion", 公开, ,

.DLL命令 GlobalSize_RASENTRY, 整数型, "kernel32.dll", "GlobalSize", 公开, 取结构尺寸
    .参数 结构, <?未知本地类型?>, 传址

.DLL命令 IsBadStringPtrA, 整数型, "kernel32.dll", "IsBadStringPtrA", 公开, 指针是否有效,无否返回1
    .参数 指针, 整数型
    .参数 ucchMax, 整数型, , 指针长度

.DLL命令 GetLastError, 整数型, "kernel32.dll", "GetLastError", 公开, 取错误信息

.DLL命令 QueryServiceConfig_字节, 整数型, "advapi32.dll", "QueryServiceConfigA", 公开, 函数检索指定服务的配置参数。使用QueryServiceConfig2功能，可选的配置参数都是可用
    .参数 hService, 整数型
    .参数 lpServiceConfig, 字节集, 传址
    .参数 cbBufSize, 整数型
    .参数 pcbBytesNeeded, 整数型, 传址

.DLL命令 QueryServiceConfig, 逻辑型, "advapi32.dll", "QueryServiceConfigA", 公开, 函数检索指定服务的配置参数。使用QueryServiceConfig2功能，可选的配置参数都是可用
    .参数 hService, 整数型
    .参数 lpServiceConfig, 整数型
    .参数 cbBufSize, 整数型
    .参数 pcbBytesNeeded, 整数型, 传址

.DLL命令 GetServiceKeyName, 逻辑型, "advapi32.dll", "GetServiceKeyNameA", 公开, 通过显示名称取服务名称
    .参数 hSCManager, 整数型
    .参数 lpDisplayName, 文本型
    .参数 lpServiceName, 文本型
    .参数 lpcchBuffer, 整数型, 传址

.DLL命令 GetServiceDisplayName, 逻辑型, "advapi32.dll", "GetServiceDisplayNameA", 公开, 通过服务名称取显示名称
    .参数 hSCManager, 整数型
    .参数 lpServiceName, 文本型
    .参数 lpDisplayName, 文本型
    .参数 lpcchBuffer, 整数型, 传址

.DLL命令 LockServiceDatabase, 整数型, "advapi32.dll", "LockServiceDatabase", 公开
    .参数 hSCManager, 整数型

.DLL命令 ChangeServiceConfig2A, 逻辑型, "ADVAPI32.DLL", "ChangeServiceConfig2A", 公开
    .参数 hService, 整数型
    .参数 dwInfoLevel, 整数型
    .参数 lpInfo, 整数型, 传址

.DLL命令 StartServiceCtrlDispatcher, 整数型, "advapi32.dll", "StartServiceCtrlDispatcherA", 公开
    .参数 SERVICE_TABLE, <?未知本地类型?>, 数组

.DLL命令 RegisterServiceCtrlHandler, 整数型, "advapi32.dll", "RegisterServiceCtrlHandlerA", 公开
    .参数 lpServiceName, 文本型
    .参数 lpHandlerProc, 整数型

.DLL命令 SetServiceStatus, 整数型, "advapi32.dll", "SetServiceStatus", 公开
    .参数 hServiceStatus, 整数型
    .参数 lpServiceStatus, <?未知本地类型?>

.DLL命令 GdipLoadImageFromStream, 整数型, "GdiPlus.dll", "GdipLoadImageFromStream", 公开
    .参数 stream, 整数型
    .参数 image, 整数型, 传址

.DLL命令 GdipGetImageDimension, 整数型, "GdiPlus.dll", "GdipGetImageDimension", 公开
    .参数 image, 整数型
    .参数 width, 小数型, 传址
    .参数 height, 小数型, 传址

.DLL命令 GdipCreateFromHDC, 整数型, "GdiPlus.dll", "GdipCreateFromHDC", 公开
    .参数 hdc, 整数型
    .参数 graphics, 整数型, 传址

.DLL命令 GdipDrawImageRect, 整数型, "GdiPlus.dll", "GdipDrawImageRect", 公开
    .参数 graphics, 整数型
    .参数 image, 整数型
    .参数 x, 小数型
    .参数 y, 小数型
    .参数 width, 小数型
    .参数 height, 小数型

.DLL命令 GdipGetImageThumbnail, 整数型, "gdiplus.dll", "GdipGetImageThumbnail", 公开
    .参数 Image, 整数型
    .参数 thumbWidth, 整数型
    .参数 thumbHeight, 整数型
    .参数 thumbImage, 整数型, 传址
    .参数 callback, 整数型
    .参数 callbackData, 整数型

.DLL命令 GdipDisposeImage, 整数型, "gdiplus.dll", "GdipDisposeImage", 公开
    .参数 image, 整数型

.DLL命令 GdipDeleteGraphics, 整数型, "GdiPlus.dll", "GdipDeleteGraphics", 公开
    .参数 graphics, 整数型

.DLL命令 UpdateLayeredWindow, 整数型, "user32.dll", "UpdateLayeredWindow", 公开
    .参数 hWnd, 整数型
    .参数 hdcDst, 整数型
    .参数 pptDst, 整数型
    .参数 psize, <?未知本地类型?>
    .参数 hdcSrc, 整数型
    .参数 pptSrc, 精易_坐标
    .参数 crKey, 整数型
    .参数 pblend, <?未知本地类型?>
    .参数 dwFlags, 整数型

.DLL命令 InitCompression, 整数型, "gzip.dll", "InitCompression", 公开

.DLL命令 CreateCompression, 整数型, "gzip.dll", "CreateCompression", 公开
    .参数 context, 整数型, 传址
    .参数 flags, 整数型

.DLL命令 Compress, 整数型, "gzip.dll", "Compress", 公开, 压缩
    .参数 context, 整数型
    .参数 inBytes, 字节集
    .参数 input_size, 整数型
    .参数 outBytes, 字节集
    .参数 output_size, 整数型
    .参数 input_used, 整数型, 传址
    .参数 output_used, 整数型, 传址
    .参数 compressionLevel, 整数型

.DLL命令 DestroyCompression, 整数型, "gzip.dll", "DestroyCompression", 公开
    .参数 context, 整数型

.DLL命令 InitDecompression, 整数型, "gzip.dll", "InitDecompression", 公开, gzip.dll 请自行到这里来下载http://pan.baidu.com/share/link?shareid=222122&uk=2013335237

.DLL命令 CreateDecompression, 整数型, "gzip.dll", "CreateDecompression", 公开
    .参数 context, 整数型, 传址
    .参数 flags, 整数型

.DLL命令 DestroyDecompression, , "gzip.dll", "DestroyDecompression", 公开
    .参数 context, 整数型

.DLL命令 ShellExecuteEx, 整数型, "shell32.dll", "ShellExecuteEx", 公开, 　
    .参数 lpExecInfo, <?未知本地类型?>

.DLL命令 RegOpenKeyExA, 整数型, "advapi32.dll", "RegOpenKeyExA", 公开
    .参数 hKey, 整数型
    .参数 lpSubKey, 文本型
    .参数 ulOptions, 整数型
    .参数 samDesired, 整数型
    .参数 phkResult, 整数型, 传址

.DLL命令 RegCreateKeyExA, 整数型, "advapi32.dll", "RegCreateKeyExA", 公开
    .参数 hKey, 整数型
    .参数 lpSubKey, 文本型
    .参数 Reserved, 整数型
    .参数 lpClass, 整数型
    .参数 dwOptions, 整数型
    .参数 samDesired, 整数型
    .参数 lpSecurityAttributes, 整数型
    .参数 phkResult, 整数型, 传址
    .参数 lpdwDisposition, 整数型, 传址

.DLL命令 DrawTextA, 整数型, "user32.dll", "DrawTextA", 公开, 将文本描绘到指定的矩形中　描绘文字的高度
    .参数 HDC, 整数型, , 欲在其中显示文字的一个设备场景的句柄
    .参数 String, 文本型, , 欲描绘的文本字串
    .参数 StringCount, 整数型, , 欲描绘的字符数量。如果要描绘整个字串（直到空中止符），则可将这个参数设为-1
    .参数 rect, 精易_矩形, , RECT，指定用于绘图的一个格式化矩形（采用逻辑坐标）
    .参数 format, 整数型, , 一个标志位数组，决定了以何种形式执行绘图。参考下面总结的常数类型列表标志常数说明DT_BOTTOM必须同时指定DT_SINGLE。指示文本对齐格式化矩形的底边DT_CALCRECT象下面这样计算格式化矩形：多行绘图时矩形的底边根据需要进行延展，以便容下所有文字；单行绘图时，延展矩形的右侧。不描绘文字。由lpRect参数指定的矩形会载入计算出来的值DT_CENTER文本垂直居中DT_EXPANDTABS描绘文字的时候，对制表站进行扩展。默认的制表站间距是8个字符。但是，可用DT_TABSTOP标志改变这项设定DT_EXTERNALLEADING计算文本行高度的时候，使用当前字体的外部间距属性（the external leading attribute）DT_LEFT文本左对齐DT_NOCLIP描绘文字时不剪切到指定的矩形DT_NOPREFIX通常，函数认为 & 字符表示应为下一个字符加上下划线。该标志禁止这种行为DT_RIGHT文本右对齐DT_SINGLELINE只画单行DT_TABSTOP指定新的制表站间距，采用这个整数的高8位DT_TOP必须同时指定DT_SINGLE。指示文本对齐格式化矩形的顶部DT_VCENTER必须同时指定DT_SINGLE。指示文本对齐格式化矩形的中部DT_WORDBREAK进行自动换行。如用SetTextAlign函数设置了TA_UPDATECP标志，这里的设置则无效;

.DLL命令 FindWindowExA, 整数型, "user32.dll", "FindWindowExA", 公开, 取子窗口句柄
    .参数 hWndParent, 整数型, , 父窗口要搜索其子窗口的句柄
    .参数 hWndChildAfter, 整数型, , 子窗口的句柄
    .参数 lpszClass, 整数型, , 窗口类名
    .参数 lpszWindow, 整数型, , 窗口名称

.DLL命令 capGetDriverDescriptionA, 逻辑型, "avicap32.dll", "capGetDriverDescriptionA", 公开
    .参数 dwDriverIndex, 整数型
    .参数 lpszName, 文本型
    .参数 cbName, 整数型
    .参数 lpszVer, 文本型
    .参数 cbVer, 整数型

.DLL命令 AddFontResourceA, 整数型, "gdi32.dll", "AddFontResourceA", 公开, 在Windows系统中添加一种字体资源
    .参数 LPCSTR, 文本型

.DLL命令 RemoveFontResourceA, 逻辑型, "gdi32.dll", "RemoveFontResourceA", 公开, 通常情况下，只允许卸载由“AddFontResourceA()”安装的字体资源
    .参数 LPCSTR, 文本型

.DLL命令 RtlMoveMemory_字节集2, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, RtlMoveMemory
    .参数 目标数据地址, 字节集, , lpvDest
    .参数 源数据, 字节集, , lpvSource
    .参数 尺寸, 整数型, , cbCopy

.DLL命令 PathFileExistsA, 整数型, "shlwapi.dll", "PathFileExistsA", 公开
    .参数 pszPath, 文本型

.DLL命令 StrToIntEx, 整数型, "shlwapi.dll", "StrToIntExA", 公开
    .参数 pszString, 文本型
    .参数 dwFlags, 整数型
    .参数 piRet, 整数型, 传址

.DLL命令 lstrcmp, 整数型, "kernel32.dll", "lstrcmpA", 公开, 比较两个字符串
    .参数 lpString1, 文本型
    .参数 lpString2, 文本型

.DLL命令 Sleep, 整数型, "kernel32.dll", "Sleep", 公开, 延时
    .参数 毫秒, 整数型

.DLL命令 PeekNamedPipe_字节集, 逻辑型, "kernel32.dll", "PeekNamedPipe", 公开
    .参数 hNamedPipe, 整数型
    .参数 lpBuffer, 字节集
    .参数 nBufferSize, 整数型
    .参数 lpBytesRead, 整数型, 传址
    .参数 lpTotalBytesAvail, 整数型, 传址
    .参数 lpBytesLeftThisMessage, 整数型, 传址

.DLL命令 RtlAdjustPrivilege32, 整数型, "ntdll.dll", "RtlAdjustPrivilege", 公开, 提升进程权限
    .参数 整数, 整数型
    .参数 整数, 逻辑型
    .参数 整数, 整数型
    .参数 整数, 整数型, 传址

.DLL命令 ILCreateFromPathA, 整数型, "Shell32.dll", "ILCreateFromPathA", 公开, 文件_定位
    .参数 lpFileName, 文本型

.DLL命令 ILFree, , "Shell32.dll", "ILFree", 公开, 文件_定位
    .参数 lngPidl, 整数型

.DLL命令 SHOpenFolderAndSelectItems, 整数型, "shell32.dll", "SHOpenFolderAndSelectItems", 公开, 文件_定位
    .参数 pidlfolder, 整数型
    .参数 cidl, 整数型
    .参数 apidl, 整数型
    .参数 dwFlags, 整数型

.DLL命令 GetFileInformationByHandle, 逻辑型, "kernel32.dll", "GetFileInformationByHandle", 公开, 文件_句柄取路径
    .参数 hFile, 整数型
    .参数 lpFileInformation, <?未知本地类型?>

.DLL命令 GetVolumeInformation, 逻辑型, "kernel32.dll", "GetVolumeInformationA", 公开, 文件_句柄取路径
    .参数 lpRootPathName, 文本型
    .参数 lpVolumeNameBuffer, 文本型
    .参数 nVolumeNameSize, 整数型
    .参数 lpVolumeSerialNumber, 整数型, 传址
    .参数 lpMaximumComponentLength, 整数型, 传址
    .参数 lpFileSystemFlags, 整数型, 传址
    .参数 lpFileSystemNameBuffer, 文本型, 传址
    .参数 nFileSystemNameSize, 整数型

.DLL命令 ZwQueryInformationFile, 整数型, "ntdll.dll", "ZwQueryInformationFile", 公开, 文件_句柄取路径
    .参数 FileHandle, 整数型
    .参数 IoStatusBlock, <?未知本地类型?>
    .参数 FileInformation, 整数型
    .参数 Length, 整数型
    .参数 FileInformationClass, 整数型

.DLL命令 GetFileAttributes, 整数型, "kernel32.dll", "GetFileAttributesA", 公开, 文件_取属性
    .参数 文件名, 文本型

.DLL命令 EnumProcesses, 逻辑型, "Psapi.dll", "EnumProcesses", 公开
    .参数 lpidProcess, 整数型
    .参数 cb, 整数型
    .参数 lpcbNeeded, 整数型, 传址

.DLL命令 GetNetworkParams, 整数型, "IPHLPAPI.DLL", "GetNetworkParams", 公开, 系统_取网络主机名
    .参数 pFixedInfo, 整数型
    .参数 pOutBufLen, 整数型, 传址

.DLL命令 CopyMemory_Bytes2int, 整数型, "kernel32.dll", "RtlMoveMemory", 公开, 内存拷贝
    .参数 Destination, 整数型
    .参数 字节集指针, 字节集
    .参数 数据长度, 整数型

.DLL命令 WinHelpA, 整数型, "user32.dll", "WinHelpA", 公开, 系统_调用帮助
    .参数 窗口句柄, 整数型, , hwnd
    .参数 帮助文件, 文本型, , lpHelpFile
    .参数 命令, 整数型, , wCommand
    .参数 数据, 整数型, , dwData

.DLL命令 GetMessageA, 逻辑型, "user32.dll", "GetMessageA", 公开
    .参数 lpMsg, <?未知本地类型?>
    .参数 hwnd, 整数型
    .参数 wMsgFilterMin, 整数型
    .参数 wMsgFilterMax, 整数型

.DLL命令 GetEnvironmentVariable, 整数型, "kernel32.dll", "GetEnvironmentVariableA", 公开, 类_环境存取->读环境变量
    .参数 lpName, 文本型
    .参数 lpBuffer, 文本型
    .参数 nSize, 整数型

.DLL命令 SetEnvironmentVariable, 逻辑型, "kernel32.dll", "SetEnvironmentVariableA", 公开, 类_环境存取->写环境变量
    .参数 lpName, 文本型
    .参数 lpValue, 文本型

.DLL命令 CopyMemory_objcet2int, 整数型, "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, 整数型, 传址
    .参数 Source, 对象
    .参数 Length, 整数型

.DLL命令 lstrcat_int2variant, 整数型, "kernel32.dll", "lstrcatA", 公开
    .参数 lpString1, 变体型, 传址
    .参数 lpString2, 整数型, 传址

.DLL命令 GetCurrentDirectory, 整数型, "kernel32.dll", "GetCurrentDirectoryA", 公开
    .参数 nBufferLength, 整数型
    .参数 lpBuffer, 文本型

.DLL命令 WinHttpCrackUrl, 逻辑型, "Winhttp.dll", "WinHttpCrackUrl", 公开
    .参数 pwszUrl, 字节集
    .参数 dwUrlLength, 整数型
    .参数 dwFlags, 整数型
    .参数 lpUrlComponents, URL_COMPONENTS

.DLL命令 MessageBoxTimeoutA, 整数型, "user32.dll", "MessageBoxTimeoutA", 公开, 系统_信息框Ex
    .参数 hwnd, 整数型, , 父窗口句柄
    .参数 lpText, 文本型, , 文本
    .参数 lpCaption, 文本型, , 标题
    .参数 wtype, 整数型, , 按钮类型
    .参数 wlange, 整数型
    .参数 dwtimeout, 整数型, , 毫秒

.DLL命令 CreateTimerQueueTimer, 逻辑型, "kernel32.dll", "CreateTimerQueueTimer", 公开, 控件_时钟
    .参数 phNewTimer, 整数型, 传址
    .参数 TimerQueue, 整数型
    .参数 Callback, 整数型, , 时钟回调
    .参数 Parameter, 整数型, , 传递给时钟回调的参数
    .参数 DueTime, 整数型, , 首次触发时钟的延时
    .参数 Period, 整数型, , 时钟周期
    .参数 Flags, 整数型

.DLL命令 CreateTimerQueue, 整数型, "kernel32.dll", "CreateTimerQueue", 公开, 控件_时钟

.DLL命令 DeleteTimerQueueTimer, 逻辑型, "kernel32.dll", "DeleteTimerQueueTimer", 公开, 控件_时钟
    .参数 TimerQueue, 整数型
    .参数 Timer, 整数型
    .参数 CompletionEvent, 整数型

.DLL命令 DeleteTimerQueue, 逻辑型, "kernel32.dll", "DeleteTimerQueue", 公开, 控件_时钟
    .参数 TimerQueue, 整数型

.DLL命令 ChangeTimerQueueTimer, 逻辑型, "kernel32.dll", "ChangeTimerQueueTimer", 公开, 控件_时钟
    .参数 TimerQueue, 整数型
    .参数 Timer, 整数型
    .参数 DueTime, 整数型
    .参数 Period, 整数型

.DLL命令 PathIsURL, 逻辑型, "shlwapi.dll", "PathIsURLA", 公开
    .参数 pszPath, 文本型

.DLL命令 Shell_NotifyIcon, 逻辑型, "shell32.dll", "Shell_NotifyIconA", 公开
    .参数 dwMessage, 整数型
    .参数 lpData, <?未知本地类型?>

.DLL命令 GetTopWindow, 整数型, "user32.dll", "GetTopWindow", 公开
    .参数 hwnd, 整数型

.DLL命令 GetNextWindow, 整数型, "user32.dll", "GetWindow", 公开
    .参数 hwnd, 整数型
    .参数 wFlag, 整数型

.DLL命令 GetWindowTextLengthA, 整数型, "user32.dll", "GetWindowTextLengthA", 公开
    .参数 hwnd, 整数型

.DLL命令 GetWindowTextLengthW, 整数型, "user32.dll", "GetWindowTextLengthW", 公开
    .参数 hwnd, 整数型

.DLL命令 AttachThreadInput, 逻辑型, "user32.dll", "AttachThreadInput", 公开
    .参数 idAttach, 整数型
    .参数 idAttachTo, 整数型
    .参数 fAttach, 逻辑型

.DLL命令 Thread32First, 逻辑型, "KERNEL32.DLL", "Thread32First", 公开
    .参数 hSnapshot, 整数型
    .参数 lpte, <?未知本地类型?>

.DLL命令 gethostbyaddr, 整数型, "wsock32.dll", "gethostbyaddr", 公开
    .参数 addr, 整数型, 传址
    .参数 len, 整数型, 传址
    .参数 type, 整数型, 传址

.DLL命令 CopyMemory_int2hostent, 整数型, "kernel32.dll", "RtlMoveMemory", 公开
    .参数 目标数据地址, <?未知本地类型?>
    .参数 源数据, 整数型
    .参数 尺寸, 整数型

.DLL命令 IcmpCreateFile, 整数型, "iphlpapi.dll", "IcmpCreateFile", 公开

.DLL命令 IcmpSendEcho, 整数型, "ICMP.DLL", "IcmpSendEcho", 公开
    .参数 IcmpHandle, 整数型
    .参数 DestinationAddress, 整数型
    .参数 RequestData, 文本型
    .参数 RequestSize, 短整数型
    .参数 RequestOptions, 整数型
    .参数 ReplyBuffer, <?未知本地类型?>
    .参数 ReplySize, 整数型
    .参数 Timeout, 整数型

.DLL命令 IcmpCloseHandle, 整数型, "ICMP.DLL", "IcmpCloseHandle", 公开
    .参数 IcmpHandle, 整数型

.DLL命令 WinHttpCheckPlatform, 逻辑型, "Winhttp.dll", "WinHttpCheckPlatform", 公开, BOOL WinHttpCheckPlatform(void);

.DLL命令 WinHttpOpen, 整数型, "Winhttp.dll", "WinHttpOpen", 公开, HINTERNET WINAPI WinHttpOpen
    .参数 pwszUserAgent, 整数型, , __in_opt  LPCWSTR pwszUserAgent
    .参数 dwAccessType, 整数型, , __in      DWORD dwAccessType
    .参数 pwszProxyName, 字节集, , __in      LPCWSTR pwszProxyName
    .参数 pwszProxyBypass, 整数型, , __in      LPCWSTR pwszProxyBypass
    .参数 dwFlags, 整数型, , __in      DWORD dwFlags

.DLL命令 WinHttpConnect, 整数型, "Winhttp.dll", "WinHttpConnect", 公开, HINTERNET WINAPI WinHttpConnect
    .参数 hSession, 整数型, , __in        HINTERNET hSession
    .参数 pswzServerName, 字节集, , __in        LPCWSTR pswzServerName
    .参数 nServerPort, 整数型, , __in        INTERNET_PORT nServerPort
    .参数 dwReserved, 整数型, , __reserved  DWORD dwReserved

.DLL命令 WinHttpOpenRequest, 整数型, "Winhttp.dll", "WinHttpOpenRequest", 公开, HINTERNET WINAPI WinHttpOpenRequest
    .参数 hConnect, 整数型, , __in  HINTERNET hConnect
    .参数 pwszVerb, 字节集, , __in  LPCWSTR pwszVerb
    .参数 pwszObjectName, 字节集, , __in  LPCWSTR pwszObjectName
    .参数 pwszVersion, 整数型, , __in  LPCWSTR pwszVersion
    .参数 pwszReferrer, 整数型, , __in  LPCWSTR pwszReferrer
    .参数 ppwszAcceptTypes, 整数型, , __in  LPCWSTR *ppwszAcceptTypes
    .参数 dwFlags, 整数型, , __in  DWORD dwFlags

.DLL命令 WinHttpCloseHandle, 逻辑型, "Winhttp.dll", "WinHttpCloseHandle", 公开, BOOL WINAPI WinHttpCloseHandle
    .参数 hInternet, 整数型, , __in  HINTERNET hInternet

.DLL命令 WinHttpSetTimeouts, 逻辑型, "Winhttp.dll", "WinHttpSetTimeouts", 公开, BOOL WINAPI WinHttpSetTimeouts
    .参数 hInternet, 整数型, , __in  HINTERNET hInternet
    .参数 dwResolveTimeout, 整数型, , __in  int dwResolveTimeout
    .参数 dwConnectTimeout, 整数型, , __in  int dwConnectTimeout
    .参数 dwSendTimeout, 整数型, , __in  int dwSendTimeout
    .参数 dwReceiveTimeout, 整数型, , __in  int dwReceiveTimeout

.DLL命令 WinHttpSetOption, 逻辑型, "Winhttp.dll", "WinHttpSetOption", 公开, BOOL WINAPI WinHttpSetOption
    .参数 hInternet, 整数型, , __in  HINTERNET hInternet
    .参数 dwOption, 整数型, , __in  DWORD dwOption
    .参数 lpBuffer, 整数型, 传址, __in  LPVOID lpBuffer
    .参数 dwBufferLength, 整数型, , __in  DWORD dwBufferLength

.DLL命令 WinHttpAddRequestHeaders, 逻辑型, "Winhttp.dll", "WinHttpAddRequestHeaders", 公开, BOOL WINAPI WinHttpAddRequestHeaders
    .参数 hRequest, 整数型, , __in  HINTERNET hRequest
    .参数 pwszHeaders, 字节集, , __in  LPCWSTR pwszHeaders
    .参数 dwHeadersLength, 整数型, , __in  DWORD dwHeadersLength
    .参数 dwModifiers, 整数型, , __in  DWORD dwModifiers

.DLL命令 WinHttpSendRequest, 逻辑型, "Winhttp.dll", "WinHttpSendRequest", 公开, BOOL WINAPI WinHttpSendRequest
    .参数 hRequest, 整数型, , __in      HINTERNET hRequest
    .参数 pwszHeaders, 整数型, , __in_opt  LPCWSTR pwszHeaders
    .参数 dwHeadersLength, 整数型, , __in      DWORD dwHeadersLength
    .参数 lpOptional, 字节集, , __in_opt  LPVOID lpOptional
    .参数 dwOptionalLength, 整数型, , __in      DWORD dwOptionalLength
    .参数 dwTotalLength, 整数型, , __in      DWORD dwTotalLength
    .参数 dwContext, 整数型, , __in      DWORD_PTR dwContext

.DLL命令 WinHttpReceiveResponse, 逻辑型, "Winhttp.dll", "WinHttpReceiveResponse", 公开, BOOL WINAPI WinHttpReceiveResponse
    .参数 hRequest, 整数型, , __in        HINTERNET hRequest
    .参数 lpReserved, 整数型, , __reserved  LPVOID lpReserved

.DLL命令 WinHttpQueryDataAvailable, 逻辑型, "Winhttp.dll", "WinHttpQueryDataAvailable", 公开, 查询是否有可读数据
    .参数 hRequest, 整数型, , 请求句柄
    .参数 lpdwNumberOfBytesAvailable, 整数型, 传址, 可读数据长度

.DLL命令 WinHttpReadData, 逻辑型, "Winhttp.dll", "WinHttpReadData", 公开, BOOL WINAPI WinHttpReadData
    .参数 hRequest, 整数型, , __in   HINTERNET hRequest
    .参数 lpBuffer, 字节集, , __out  LPVOID lpBuffer
    .参数 dwNumberOfBytesToRead, 整数型, , __in   DWORD dwNumberOfBytesToRead
    .参数 lpdwNumberOfBytesRead, 整数型, 传址, __out  LPDWORD lpdwNumberOfBytesRead

.DLL命令 WinHttpQueryHeaders, 逻辑型, "Winhttp.dll", "WinHttpQueryHeaders", 公开, BOOL WINAPI WinHttpQueryHeaders
    .参数 hRequest, 整数型, , __in      HINTERNET hRequest
    .参数 dwInfoLevel, 整数型, , __in      DWORD dwInfoLevel
    .参数 pwszName, 整数型, , __in_opt  LPCWSTR pwszName
    .参数 lpBuffer, 字节集, , __out     LPVOID lpBuffer
    .参数 lpdwBufferLength, 整数型, 传址, __inout   LPDWORD lpdwBufferLength
    .参数 lpdwIndex, 整数型, 传址, __inout   LPDWORD lpdwIndex

.DLL命令 GetCalendarInfo, 整数型, "kernel32.dll", "GetCalendarInfoA", 公开
    .参数 Locale, 整数型
    .参数 Calendar, 整数型
    .参数 CalType, 整数型
    .参数 lpCalData, 文本型
    .参数 cchData, 整数型, 传址
    .参数 lpValue, 整数型

.DLL命令 GetCompressedFileSize, 整数型, "kernel32.dll", "GetCompressedFileSizeA", 公开
    .参数 lpFileName, 文本型
    .参数 lpFileSizeHigh, 整数型, 传址

.DLL命令 RtlGetNtProductType, 逻辑型, "ntdll.dll", "RtlGetNtProductType", 公开, 系统_取系统版本
    .参数 wProductType, 整数型, 传址

.DLL命令 RtlGetProductInfo, 整数型, "ntdll.dll", "RtlGetProductInfo", 公开, 系统_取系统版本，不支持XP
    .参数 dwOSMajorVersion, 整数型
    .参数 dwOSMinorVersion, 整数型
    .参数 dwSpMajorVersion, 整数型
    .参数 dwSpMinorVersion, 整数型
    .参数 pdwReturnedProductType, 整数型, 传址

.DLL命令 RtlGetNtVersionNumbers, 整数型, "ntdll.dll", "RtlGetNtVersionNumbers", 公开, 系统_取系统版本
    .参数 major, 整数型, 传址
    .参数 minor, 整数型, 传址
    .参数 build, 短整数型, 传址

.DLL命令 InternetQueryOption, 逻辑型, "wininet.dll", "InternetQueryOptionA", 公开
    .参数 hInternet, 整数型
    .参数 dwOption, 整数型
    .参数 lpBuffer, 整数型
    .参数 lpdwBufferLength, 整数型, 传址

.DLL命令 ReadFile_字节集, 逻辑型, "kernel32.dll", "ReadFile", 公开
    .参数 hFile, 整数型
    .参数 lpBuffer, 字节集
    .参数 nNumberOfBytesToRead, 整数型
    .参数 lpNumberOfBytesRead, 整数型, 传址
    .参数 lpOverlapped, 整数型

.DLL命令 CreateSemaphore, 整数型, "kernel32.dll", "CreateSemaphoreA", 公开, 创建一个新的信号机  如执行成功，返回信号机对象的句柄；零表示出错。会设置GetLastError。即使返回一个有效的句柄，但倘若它指出同名的一个信号机已经存在，那么GetLastError也会返回ERROR_ALREADY_EXISTS
    .参数 信号量安全特性, 整数型, , 安全结构。默认可不写，留0即可。
    .参数 信号量初始计数, 整数型, , 设置信号机的初始计数。
    .参数 信号量最大计数, 整数型, , 设置信号机的最大计数
    .参数 信号量对象的名称, 文本型, , 指定信号机对象的名称。名字是用作多进程同步的，一般不使用。

.DLL命令 OpenSemaphore, 整数型, "kernel32.dll", "OpenSemaphoreA", 公开, 打开命名信号量对象
    .参数 dwDesiredAccess, 整数型, , 权限,2031619
    .参数 是否继承, 逻辑型, , 是否继承句柄
    .参数 lpName, 文本型, , 名称

.DLL命令 ReleaseSemaphore, 逻辑型, "kernel32.dll", "ReleaseSemaphore", 公开, 释放信号量对象
    .参数 hSemaphore, 整数型, , 句柄
    .参数 lReleaseCount, 整数型, , 增加的数量
    .参数 lpPreviousCount, 整数型, 传址, 之前的数量

.DLL命令 GetDeviceCaps, 整数型, "gdi32.dll", "GetDeviceCaps", 公开, 获取系统DPI大小
    .参数 HDC, 整数型, , 0
    .参数 int, 整数型, , 0

.DLL命令 GetClipboardFormatNameA, 整数型, "user32.dll", "GetClipboardFormatNameA", 公开
    .参数 iFormat, 整数型
    .参数 psBuffer, 文本型
    .参数 iMaxCount, 整数型

.DLL命令 RtlMoveMemory, 整数型, "kernel32.dll", "RtlMoveMemory", 公开
    .参数 Destination, 整数型
    .参数 Source, 整数型
    .参数 Length, 整数型

.DLL命令 DwmUpdateThumbnailProperties, 整数型, "Dwmapi.dll", "DwmUpdateThumbnailProperties", 公开, 更新桌面窗口管理器（DWM）缩略图的属性  返回0为成功
    .参数 HTHUMBNAIL, 整数型, , hThumbnailId  略缩图指针
    .参数 DWM_THUMBNAIL_PROPERTIES, 缩略图属性, , 略缩图属性

.DLL命令 DwmUnregisterThumbnail, 整数型, "Dwmapi.dll", "DwmUnregisterThumbnail", 公开, 删除由DwmRegisterThumbnail函数创建的桌面窗口管理器（DWM）缩略图关系
    .参数 HTHUMBNAIL, 整数型, , hThumbnailId 略缩图指针

.DLL命令 DwmSetIconicThumbnail, 整数型, "Dwmapi.dll", "DwmSetIconicThumbnail", 公开, 在窗口或选项卡上设置静态的图标位图，以用作缩略图表示。任务栏可以将此位图用作窗口或选项卡的缩略图切换目标
    .参数 HWND, 整数型
    .参数 HBITMAP, 整数型, , 位图句柄
    .参数 DWORD, 整数型, , 显示选项 0=无框架；1=有框架

.DLL命令 DwmRegisterThumbnail, 整数型, "Dwmapi.dll", "DwmRegisterThumbnail", 公开, 在目标窗口和源窗口之间创建桌面窗口管理器（DWM）缩略图关系
    .参数 HWND, 整数型, , hwndDestination
    .参数 HWND, 整数型, , hwndSource
    .参数 PHTHUMBNAIL, 整数型, 传址, phThumbnailId  略缩图指针

.DLL命令 DwmIsCompositionEnabled, 整数型, "Dwmapi.dll", "DwmIsCompositionEnabled", 公开, 获取一个值，该值指示是否启用了桌面窗口管理器（DWM）组合。运行Windows 7或更早版本的计算机上的应用程序可以通过处理WM_DWMCOMPOSITIONCHANGED通知来侦听组合状态更改。
    .参数 pfEnabled, 逻辑型, 传址, 指向一个值的指针，当该函数成功返回时，如果启用了DWM组合，则该值为TRUE ; 否则，FALSE。

.DLL命令 DwmEnableComposition, 整数型, "Dwmapi.dll", "DwmEnableComposition", 公开, 启用或禁用桌面窗口管理器（DWM）组合。
    .参数 uCompositionAction, 整数型

.DLL命令 DwmExtendFrameIntoClientArea, 整数型, "Dwmapi.dll", "DwmExtendFrameIntoClientArea", 公开, 将窗口框架扩展到客户端区域。
    .参数 hWnd, 整数型
    .参数 pMarInset, 精易_位置和大小, 传址

.DLL命令 DwmEnableBlurBehindWindow, 整数型, "Dwmapi.dll", "DwmEnableBlurBehindWindow", 公开, 在指定窗口上启用模糊效果。
    .参数 hWnd, 整数型
    .参数 pBlurBehind, 模糊属性, 传址

.DLL命令 GdipGetPropertyItemSize, 整数型, "gdiplus.dll", "GdipGetPropertyItemSize", 公开
    .参数 Image, 整数型
    .参数 propId, 整数型
    .参数 size, 整数型, 传址

.DLL命令 GdipGetPropertyItem, 整数型, "gdiplus.dll", "GdipGetPropertyItem", 公开
    .参数 Image, 整数型
    .参数 propId, 整数型
    .参数 propSize, 整数型
    .参数 buffer, 字节集

.DLL命令 GetCaretPos, 整数型, "user32.dll", "GetCaretPos", 公开, 将插入标记的位置（按客户区坐标）信息拷贝到指定的POINT结构中
    .参数 IpPoint, 精易_坐标

.DLL命令 EnumDisplayMonitors, 整数型, "user32.dll", "EnumDisplayMonitors", 公开, ,
    .参数 hdc, 整数型
    .参数 lprcClip, 整数型
    .参数 lpfnEnum, 整数型
    .参数 dwData, 整数型

.DLL命令 ChangeClipboardChain, 逻辑型, "user32.dll", "ChangeClipboardChain", 公开, 从剪贴板查看器链中删除指定的窗口。
    .参数 hWndRemove, 整数型, , 要从链中移除的窗口的句柄。句柄必须已传递给SetClipboardViewer函数。
    .参数 hWndNewNext, 整数型, , 剪贴板查看器链中hWndRemove窗口后面的窗口句柄 。（这是SetClipboardViewer返回的句柄，除非响应WM_CHANGECBCHAIN消息更改了序列。）

.DLL命令 SetClipboardViewer, 整数型, "user32.dll", "SetClipboardViewer", 公开, 将指定的窗口添加到剪贴板查看器链。每当剪贴板的内容发生变化时，剪贴板查看器窗口将收到WM_DRAWCLIPBOARD消息。
    .参数 hWndNewViewer, 整数型, , 标识要添加到剪贴板链的窗口。

.DLL命令 GetClipboardViewer, 整数型, "user32.dll", "GetClipboardViewer", 公开, 检索剪贴板查看器链中第一个窗口的句柄。

.DLL命令 SHGetFolderPathA, 整数型, "Shell32.dll", "SHGetFolderPathA", 公开
    .参数 hWnd, 整数型
    .参数 csidl, 整数型
    .参数 hToken, 整数型
    .参数 dwFlags, 整数型
    .参数 pszPath, 整数型

.DLL命令 GetComboBoxInfo, 逻辑型, "user32.dll", "GetComboBoxInfo", 公开, ,
    .参数 hwndCombo, 整数型, , 0
    .参数 pcbi, COMBOBOXINFO, , 0

.DLL命令 wcslen, 整数型, "msvcrt.dll", "@wcslen", 公开
    .参数 _String, 字节集

.DLL命令 wcscmp, 整数型, "ntdll.dll", "@wcscmp", 公开
    .参数 _String1, 字节集
    .参数 _String2, 字节集

